

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 14:42:11 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF15344
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.45
    49                           ; Generated 16/11/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16LF15344 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0119                     	;# 
   110  0119                     	;# 
   111  0119                     	;# 
   112  011A                     	;# 
   113  011A                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011B                     	;# 
   118  011B                     	;# 
   119  011B                     	;# 
   120  011C                     	;# 
   121  011C                     	;# 
   122  011C                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  011E                     	;# 
   127  011E                     	;# 
   128  011E                     	;# 
   129  011F                     	;# 
   130  011F                     	;# 
   131  011F                     	;# 
   132  011F                     	;# 
   133  011F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  018F                     	;# 
   138  0190                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  020C                     	;# 
   142  020C                     	;# 
   143  020D                     	;# 
   144  020E                     	;# 
   145  020F                     	;# 
   146  020F                     	;# 
   147  0210                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  028C                     	;# 
   152  028C                     	;# 
   153  028D                     	;# 
   154  028D                     	;# 
   155  028E                     	;# 
   156  028F                     	;# 
   157  0290                     	;# 
   158  0291                     	;# 
   159  030C                     	;# 
   160  030C                     	;# 
   161  030D                     	;# 
   162  030E                     	;# 
   163  030F                     	;# 
   164  0310                     	;# 
   165  0310                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0314                     	;# 
   170  0315                     	;# 
   171  0316                     	;# 
   172  0318                     	;# 
   173  0319                     	;# 
   174  031A                     	;# 
   175  031C                     	;# 
   176  031D                     	;# 
   177  031E                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  038E                     	;# 
   181  058C                     	;# 
   182  058C                     	;# 
   183  058D                     	;# 
   184  058E                     	;# 
   185  058F                     	;# 
   186  058F                     	;# 
   187  0590                     	;# 
   188  0591                     	;# 
   189  0592                     	;# 
   190  0593                     	;# 
   191  059C                     	;# 
   192  059C                     	;# 
   193  059D                     	;# 
   194  059D                     	;# 
   195  059E                     	;# 
   196  059F                     	;# 
   197  060C                     	;# 
   198  060D                     	;# 
   199  060E                     	;# 
   200  060F                     	;# 
   201  0610                     	;# 
   202  0611                     	;# 
   203  0612                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  070C                     	;# 
   207  070D                     	;# 
   208  070E                     	;# 
   209  070F                     	;# 
   210  0710                     	;# 
   211  0711                     	;# 
   212  0712                     	;# 
   213  0713                     	;# 
   214  0716                     	;# 
   215  0717                     	;# 
   216  0718                     	;# 
   217  0719                     	;# 
   218  071A                     	;# 
   219  071B                     	;# 
   220  071C                     	;# 
   221  071D                     	;# 
   222  0796                     	;# 
   223  0797                     	;# 
   224  0798                     	;# 
   225  0799                     	;# 
   226  079A                     	;# 
   227  079B                     	;# 
   228  080C                     	;# 
   229  080D                     	;# 
   230  080E                     	;# 
   231  080F                     	;# 
   232  0810                     	;# 
   233  0811                     	;# 
   234  0813                     	;# 
   235  0814                     	;# 
   236  081A                     	;# 
   237  081A                     	;# 
   238  081B                     	;# 
   239  081C                     	;# 
   240  081C                     	;# 
   241  081D                     	;# 
   242  081E                     	;# 
   243  081F                     	;# 
   244  088C                     	;# 
   245  088D                     	;# 
   246  088E                     	;# 
   247  088F                     	;# 
   248  0890                     	;# 
   249  0891                     	;# 
   250  0892                     	;# 
   251  0893                     	;# 
   252  0895                     	;# 
   253  0896                     	;# 
   254  090C                     	;# 
   255  090E                     	;# 
   256  090F                     	;# 
   257  091F                     	;# 
   258  098F                     	;# 
   259  098F                     	;# 
   260  0990                     	;# 
   261  0991                     	;# 
   262  0992                     	;# 
   263  0993                     	;# 
   264  0994                     	;# 
   265  0995                     	;# 
   266  0996                     	;# 
   267  0997                     	;# 
   268  0A19                     	;# 
   269  0A19                     	;# 
   270  0A1A                     	;# 
   271  0A1A                     	;# 
   272  0A1B                     	;# 
   273  0A1B                     	;# 
   274  0A1B                     	;# 
   275  0A1C                     	;# 
   276  0A1C                     	;# 
   277  0A1D                     	;# 
   278  0A1D                     	;# 
   279  0A1E                     	;# 
   280  0A1E                     	;# 
   281  0A1F                     	;# 
   282  0A1F                     	;# 
   283  0A1F                     	;# 
   284  1E0F                     	;# 
   285  1E10                     	;# 
   286  1E11                     	;# 
   287  1E12                     	;# 
   288  1E13                     	;# 
   289  1E14                     	;# 
   290  1E15                     	;# 
   291  1E16                     	;# 
   292  1E17                     	;# 
   293  1E18                     	;# 
   294  1E19                     	;# 
   295  1E1A                     	;# 
   296  1E1B                     	;# 
   297  1E1C                     	;# 
   298  1E1D                     	;# 
   299  1E1E                     	;# 
   300  1E1F                     	;# 
   301  1E20                     	;# 
   302  1E21                     	;# 
   303  1E22                     	;# 
   304  1E23                     	;# 
   305  1E24                     	;# 
   306  1E25                     	;# 
   307  1E26                     	;# 
   308  1E27                     	;# 
   309  1E28                     	;# 
   310  1E29                     	;# 
   311  1E2A                     	;# 
   312  1E2B                     	;# 
   313  1E2C                     	;# 
   314  1E2D                     	;# 
   315  1E2E                     	;# 
   316  1E2F                     	;# 
   317  1E30                     	;# 
   318  1E31                     	;# 
   319  1E32                     	;# 
   320  1E33                     	;# 
   321  1E34                     	;# 
   322  1E35                     	;# 
   323  1E36                     	;# 
   324  1E37                     	;# 
   325  1E8F                     	;# 
   326  1E90                     	;# 
   327  1E91                     	;# 
   328  1E92                     	;# 
   329  1E93                     	;# 
   330  1E9C                     	;# 
   331  1EA1                     	;# 
   332  1EA2                     	;# 
   333  1EB1                     	;# 
   334  1EBB                     	;# 
   335  1EBC                     	;# 
   336  1EBD                     	;# 
   337  1EBE                     	;# 
   338  1EC3                     	;# 
   339  1EC5                     	;# 
   340  1EC6                     	;# 
   341  1EC7                     	;# 
   342  1ECB                     	;# 
   343  1ECC                     	;# 
   344  1ECD                     	;# 
   345  1ECE                     	;# 
   346  1F10                     	;# 
   347  1F11                     	;# 
   348  1F12                     	;# 
   349  1F13                     	;# 
   350  1F14                     	;# 
   351  1F15                     	;# 
   352  1F1C                     	;# 
   353  1F1D                     	;# 
   354  1F1E                     	;# 
   355  1F1F                     	;# 
   356  1F20                     	;# 
   357  1F21                     	;# 
   358  1F22                     	;# 
   359  1F23                     	;# 
   360  1F24                     	;# 
   361  1F25                     	;# 
   362  1F26                     	;# 
   363  1F27                     	;# 
   364  1F38                     	;# 
   365  1F39                     	;# 
   366  1F3A                     	;# 
   367  1F3B                     	;# 
   368  1F3C                     	;# 
   369  1F3D                     	;# 
   370  1F3E                     	;# 
   371  1F3F                     	;# 
   372  1F43                     	;# 
   373  1F44                     	;# 
   374  1F45                     	;# 
   375  1F46                     	;# 
   376  1F47                     	;# 
   377  1F48                     	;# 
   378  1F49                     	;# 
   379  1F4A                     	;# 
   380  1F4E                     	;# 
   381  1F4F                     	;# 
   382  1F50                     	;# 
   383  1F51                     	;# 
   384  1F52                     	;# 
   385  1F53                     	;# 
   386  1F54                     	;# 
   387  1F55                     	;# 
   388  1FE4                     	;# 
   389  1FE5                     	;# 
   390  1FE6                     	;# 
   391  1FE7                     	;# 
   392  1FE8                     	;# 
   393  1FE8                     	;# 
   394  1FE9                     	;# 
   395  1FEA                     	;# 
   396  1FEA                     	;# 
   397  1FEB                     	;# 
   398  1FED                     	;# 
   399  1FEE                     	;# 
   400  1FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0119                     	;# 
   429  0119                     	;# 
   430  0119                     	;# 
   431  011A                     	;# 
   432  011A                     	;# 
   433  011A                     	;# 
   434  011B                     	;# 
   435  011B                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011B                     	;# 
   439  011C                     	;# 
   440  011C                     	;# 
   441  011C                     	;# 
   442  011D                     	;# 
   443  011D                     	;# 
   444  011D                     	;# 
   445  011E                     	;# 
   446  011E                     	;# 
   447  011E                     	;# 
   448  011F                     	;# 
   449  011F                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  011F                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  018F                     	;# 
   457  0190                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  020C                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  020E                     	;# 
   464  020F                     	;# 
   465  020F                     	;# 
   466  0210                     	;# 
   467  0210                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  028C                     	;# 
   471  028C                     	;# 
   472  028D                     	;# 
   473  028D                     	;# 
   474  028E                     	;# 
   475  028F                     	;# 
   476  0290                     	;# 
   477  0291                     	;# 
   478  030C                     	;# 
   479  030C                     	;# 
   480  030D                     	;# 
   481  030E                     	;# 
   482  030F                     	;# 
   483  0310                     	;# 
   484  0310                     	;# 
   485  0311                     	;# 
   486  0312                     	;# 
   487  0313                     	;# 
   488  0314                     	;# 
   489  0315                     	;# 
   490  0316                     	;# 
   491  0318                     	;# 
   492  0319                     	;# 
   493  031A                     	;# 
   494  031C                     	;# 
   495  031D                     	;# 
   496  031E                     	;# 
   497  038C                     	;# 
   498  038D                     	;# 
   499  038E                     	;# 
   500  058C                     	;# 
   501  058C                     	;# 
   502  058D                     	;# 
   503  058E                     	;# 
   504  058F                     	;# 
   505  058F                     	;# 
   506  0590                     	;# 
   507  0591                     	;# 
   508  0592                     	;# 
   509  0593                     	;# 
   510  059C                     	;# 
   511  059C                     	;# 
   512  059D                     	;# 
   513  059D                     	;# 
   514  059E                     	;# 
   515  059F                     	;# 
   516  060C                     	;# 
   517  060D                     	;# 
   518  060E                     	;# 
   519  060F                     	;# 
   520  0610                     	;# 
   521  0611                     	;# 
   522  0612                     	;# 
   523  0613                     	;# 
   524  0614                     	;# 
   525  070C                     	;# 
   526  070D                     	;# 
   527  070E                     	;# 
   528  070F                     	;# 
   529  0710                     	;# 
   530  0711                     	;# 
   531  0712                     	;# 
   532  0713                     	;# 
   533  0716                     	;# 
   534  0717                     	;# 
   535  0718                     	;# 
   536  0719                     	;# 
   537  071A                     	;# 
   538  071B                     	;# 
   539  071C                     	;# 
   540  071D                     	;# 
   541  0796                     	;# 
   542  0797                     	;# 
   543  0798                     	;# 
   544  0799                     	;# 
   545  079A                     	;# 
   546  079B                     	;# 
   547  080C                     	;# 
   548  080D                     	;# 
   549  080E                     	;# 
   550  080F                     	;# 
   551  0810                     	;# 
   552  0811                     	;# 
   553  0813                     	;# 
   554  0814                     	;# 
   555  081A                     	;# 
   556  081A                     	;# 
   557  081B                     	;# 
   558  081C                     	;# 
   559  081C                     	;# 
   560  081D                     	;# 
   561  081E                     	;# 
   562  081F                     	;# 
   563  088C                     	;# 
   564  088D                     	;# 
   565  088E                     	;# 
   566  088F                     	;# 
   567  0890                     	;# 
   568  0891                     	;# 
   569  0892                     	;# 
   570  0893                     	;# 
   571  0895                     	;# 
   572  0896                     	;# 
   573  090C                     	;# 
   574  090E                     	;# 
   575  090F                     	;# 
   576  091F                     	;# 
   577  098F                     	;# 
   578  098F                     	;# 
   579  0990                     	;# 
   580  0991                     	;# 
   581  0992                     	;# 
   582  0993                     	;# 
   583  0994                     	;# 
   584  0995                     	;# 
   585  0996                     	;# 
   586  0997                     	;# 
   587  0A19                     	;# 
   588  0A19                     	;# 
   589  0A1A                     	;# 
   590  0A1A                     	;# 
   591  0A1B                     	;# 
   592  0A1B                     	;# 
   593  0A1B                     	;# 
   594  0A1C                     	;# 
   595  0A1C                     	;# 
   596  0A1D                     	;# 
   597  0A1D                     	;# 
   598  0A1E                     	;# 
   599  0A1E                     	;# 
   600  0A1F                     	;# 
   601  0A1F                     	;# 
   602  0A1F                     	;# 
   603  1E0F                     	;# 
   604  1E10                     	;# 
   605  1E11                     	;# 
   606  1E12                     	;# 
   607  1E13                     	;# 
   608  1E14                     	;# 
   609  1E15                     	;# 
   610  1E16                     	;# 
   611  1E17                     	;# 
   612  1E18                     	;# 
   613  1E19                     	;# 
   614  1E1A                     	;# 
   615  1E1B                     	;# 
   616  1E1C                     	;# 
   617  1E1D                     	;# 
   618  1E1E                     	;# 
   619  1E1F                     	;# 
   620  1E20                     	;# 
   621  1E21                     	;# 
   622  1E22                     	;# 
   623  1E23                     	;# 
   624  1E24                     	;# 
   625  1E25                     	;# 
   626  1E26                     	;# 
   627  1E27                     	;# 
   628  1E28                     	;# 
   629  1E29                     	;# 
   630  1E2A                     	;# 
   631  1E2B                     	;# 
   632  1E2C                     	;# 
   633  1E2D                     	;# 
   634  1E2E                     	;# 
   635  1E2F                     	;# 
   636  1E30                     	;# 
   637  1E31                     	;# 
   638  1E32                     	;# 
   639  1E33                     	;# 
   640  1E34                     	;# 
   641  1E35                     	;# 
   642  1E36                     	;# 
   643  1E37                     	;# 
   644  1E8F                     	;# 
   645  1E90                     	;# 
   646  1E91                     	;# 
   647  1E92                     	;# 
   648  1E93                     	;# 
   649  1E9C                     	;# 
   650  1EA1                     	;# 
   651  1EA2                     	;# 
   652  1EB1                     	;# 
   653  1EBB                     	;# 
   654  1EBC                     	;# 
   655  1EBD                     	;# 
   656  1EBE                     	;# 
   657  1EC3                     	;# 
   658  1EC5                     	;# 
   659  1EC6                     	;# 
   660  1EC7                     	;# 
   661  1ECB                     	;# 
   662  1ECC                     	;# 
   663  1ECD                     	;# 
   664  1ECE                     	;# 
   665  1F10                     	;# 
   666  1F11                     	;# 
   667  1F12                     	;# 
   668  1F13                     	;# 
   669  1F14                     	;# 
   670  1F15                     	;# 
   671  1F1C                     	;# 
   672  1F1D                     	;# 
   673  1F1E                     	;# 
   674  1F1F                     	;# 
   675  1F20                     	;# 
   676  1F21                     	;# 
   677  1F22                     	;# 
   678  1F23                     	;# 
   679  1F24                     	;# 
   680  1F25                     	;# 
   681  1F26                     	;# 
   682  1F27                     	;# 
   683  1F38                     	;# 
   684  1F39                     	;# 
   685  1F3A                     	;# 
   686  1F3B                     	;# 
   687  1F3C                     	;# 
   688  1F3D                     	;# 
   689  1F3E                     	;# 
   690  1F3F                     	;# 
   691  1F43                     	;# 
   692  1F44                     	;# 
   693  1F45                     	;# 
   694  1F46                     	;# 
   695  1F47                     	;# 
   696  1F48                     	;# 
   697  1F49                     	;# 
   698  1F4A                     	;# 
   699  1F4E                     	;# 
   700  1F4F                     	;# 
   701  1F50                     	;# 
   702  1F51                     	;# 
   703  1F52                     	;# 
   704  1F53                     	;# 
   705  1F54                     	;# 
   706  1F55                     	;# 
   707  1FE4                     	;# 
   708  1FE5                     	;# 
   709  1FE6                     	;# 
   710  1FE7                     	;# 
   711  1FE8                     	;# 
   712  1FE8                     	;# 
   713  1FE9                     	;# 
   714  1FEA                     	;# 
   715  1FEA                     	;# 
   716  1FEB                     	;# 
   717  1FED                     	;# 
   718  1FEE                     	;# 
   719  1FEF                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  0008                     	;# 
   729  0009                     	;# 
   730  000A                     	;# 
   731  000B                     	;# 
   732  000C                     	;# 
   733  000D                     	;# 
   734  000E                     	;# 
   735  0012                     	;# 
   736  0013                     	;# 
   737  0014                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  001A                     	;# 
   741  009B                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  009F                     	;# 
   747  0119                     	;# 
   748  0119                     	;# 
   749  0119                     	;# 
   750  011A                     	;# 
   751  011A                     	;# 
   752  011A                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011C                     	;# 
   759  011C                     	;# 
   760  011C                     	;# 
   761  011D                     	;# 
   762  011D                     	;# 
   763  011D                     	;# 
   764  011E                     	;# 
   765  011E                     	;# 
   766  011E                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  018C                     	;# 
   773  018D                     	;# 
   774  018E                     	;# 
   775  018F                     	;# 
   776  0190                     	;# 
   777  0191                     	;# 
   778  0192                     	;# 
   779  020C                     	;# 
   780  020C                     	;# 
   781  020D                     	;# 
   782  020E                     	;# 
   783  020F                     	;# 
   784  020F                     	;# 
   785  0210                     	;# 
   786  0210                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  028C                     	;# 
   790  028C                     	;# 
   791  028D                     	;# 
   792  028D                     	;# 
   793  028E                     	;# 
   794  028F                     	;# 
   795  0290                     	;# 
   796  0291                     	;# 
   797  030C                     	;# 
   798  030C                     	;# 
   799  030D                     	;# 
   800  030E                     	;# 
   801  030F                     	;# 
   802  0310                     	;# 
   803  0310                     	;# 
   804  0311                     	;# 
   805  0312                     	;# 
   806  0313                     	;# 
   807  0314                     	;# 
   808  0315                     	;# 
   809  0316                     	;# 
   810  0318                     	;# 
   811  0319                     	;# 
   812  031A                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  038C                     	;# 
   817  038D                     	;# 
   818  038E                     	;# 
   819  058C                     	;# 
   820  058C                     	;# 
   821  058D                     	;# 
   822  058E                     	;# 
   823  058F                     	;# 
   824  058F                     	;# 
   825  0590                     	;# 
   826  0591                     	;# 
   827  0592                     	;# 
   828  0593                     	;# 
   829  059C                     	;# 
   830  059C                     	;# 
   831  059D                     	;# 
   832  059D                     	;# 
   833  059E                     	;# 
   834  059F                     	;# 
   835  060C                     	;# 
   836  060D                     	;# 
   837  060E                     	;# 
   838  060F                     	;# 
   839  0610                     	;# 
   840  0611                     	;# 
   841  0612                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  070C                     	;# 
   845  070D                     	;# 
   846  070E                     	;# 
   847  070F                     	;# 
   848  0710                     	;# 
   849  0711                     	;# 
   850  0712                     	;# 
   851  0713                     	;# 
   852  0716                     	;# 
   853  0717                     	;# 
   854  0718                     	;# 
   855  0719                     	;# 
   856  071A                     	;# 
   857  071B                     	;# 
   858  071C                     	;# 
   859  071D                     	;# 
   860  0796                     	;# 
   861  0797                     	;# 
   862  0798                     	;# 
   863  0799                     	;# 
   864  079A                     	;# 
   865  079B                     	;# 
   866  080C                     	;# 
   867  080D                     	;# 
   868  080E                     	;# 
   869  080F                     	;# 
   870  0810                     	;# 
   871  0811                     	;# 
   872  0813                     	;# 
   873  0814                     	;# 
   874  081A                     	;# 
   875  081A                     	;# 
   876  081B                     	;# 
   877  081C                     	;# 
   878  081C                     	;# 
   879  081D                     	;# 
   880  081E                     	;# 
   881  081F                     	;# 
   882  088C                     	;# 
   883  088D                     	;# 
   884  088E                     	;# 
   885  088F                     	;# 
   886  0890                     	;# 
   887  0891                     	;# 
   888  0892                     	;# 
   889  0893                     	;# 
   890  0895                     	;# 
   891  0896                     	;# 
   892  090C                     	;# 
   893  090E                     	;# 
   894  090F                     	;# 
   895  091F                     	;# 
   896  098F                     	;# 
   897  098F                     	;# 
   898  0990                     	;# 
   899  0991                     	;# 
   900  0992                     	;# 
   901  0993                     	;# 
   902  0994                     	;# 
   903  0995                     	;# 
   904  0996                     	;# 
   905  0997                     	;# 
   906  0A19                     	;# 
   907  0A19                     	;# 
   908  0A1A                     	;# 
   909  0A1A                     	;# 
   910  0A1B                     	;# 
   911  0A1B                     	;# 
   912  0A1B                     	;# 
   913  0A1C                     	;# 
   914  0A1C                     	;# 
   915  0A1D                     	;# 
   916  0A1D                     	;# 
   917  0A1E                     	;# 
   918  0A1E                     	;# 
   919  0A1F                     	;# 
   920  0A1F                     	;# 
   921  0A1F                     	;# 
   922  1E0F                     	;# 
   923  1E10                     	;# 
   924  1E11                     	;# 
   925  1E12                     	;# 
   926  1E13                     	;# 
   927  1E14                     	;# 
   928  1E15                     	;# 
   929  1E16                     	;# 
   930  1E17                     	;# 
   931  1E18                     	;# 
   932  1E19                     	;# 
   933  1E1A                     	;# 
   934  1E1B                     	;# 
   935  1E1C                     	;# 
   936  1E1D                     	;# 
   937  1E1E                     	;# 
   938  1E1F                     	;# 
   939  1E20                     	;# 
   940  1E21                     	;# 
   941  1E22                     	;# 
   942  1E23                     	;# 
   943  1E24                     	;# 
   944  1E25                     	;# 
   945  1E26                     	;# 
   946  1E27                     	;# 
   947  1E28                     	;# 
   948  1E29                     	;# 
   949  1E2A                     	;# 
   950  1E2B                     	;# 
   951  1E2C                     	;# 
   952  1E2D                     	;# 
   953  1E2E                     	;# 
   954  1E2F                     	;# 
   955  1E30                     	;# 
   956  1E31                     	;# 
   957  1E32                     	;# 
   958  1E33                     	;# 
   959  1E34                     	;# 
   960  1E35                     	;# 
   961  1E36                     	;# 
   962  1E37                     	;# 
   963  1E8F                     	;# 
   964  1E90                     	;# 
   965  1E91                     	;# 
   966  1E92                     	;# 
   967  1E93                     	;# 
   968  1E9C                     	;# 
   969  1EA1                     	;# 
   970  1EA2                     	;# 
   971  1EB1                     	;# 
   972  1EBB                     	;# 
   973  1EBC                     	;# 
   974  1EBD                     	;# 
   975  1EBE                     	;# 
   976  1EC3                     	;# 
   977  1EC5                     	;# 
   978  1EC6                     	;# 
   979  1EC7                     	;# 
   980  1ECB                     	;# 
   981  1ECC                     	;# 
   982  1ECD                     	;# 
   983  1ECE                     	;# 
   984  1F10                     	;# 
   985  1F11                     	;# 
   986  1F12                     	;# 
   987  1F13                     	;# 
   988  1F14                     	;# 
   989  1F15                     	;# 
   990  1F1C                     	;# 
   991  1F1D                     	;# 
   992  1F1E                     	;# 
   993  1F1F                     	;# 
   994  1F20                     	;# 
   995  1F21                     	;# 
   996  1F22                     	;# 
   997  1F23                     	;# 
   998  1F24                     	;# 
   999  1F25                     	;# 
  1000  1F26                     	;# 
  1001  1F27                     	;# 
  1002  1F38                     	;# 
  1003  1F39                     	;# 
  1004  1F3A                     	;# 
  1005  1F3B                     	;# 
  1006  1F3C                     	;# 
  1007  1F3D                     	;# 
  1008  1F3E                     	;# 
  1009  1F3F                     	;# 
  1010  1F43                     	;# 
  1011  1F44                     	;# 
  1012  1F45                     	;# 
  1013  1F46                     	;# 
  1014  1F47                     	;# 
  1015  1F48                     	;# 
  1016  1F49                     	;# 
  1017  1F4A                     	;# 
  1018  1F4E                     	;# 
  1019  1F4F                     	;# 
  1020  1F50                     	;# 
  1021  1F51                     	;# 
  1022  1F52                     	;# 
  1023  1F53                     	;# 
  1024  1F54                     	;# 
  1025  1F55                     	;# 
  1026  1FE4                     	;# 
  1027  1FE5                     	;# 
  1028  1FE6                     	;# 
  1029  1FE7                     	;# 
  1030  1FE8                     	;# 
  1031  1FE8                     	;# 
  1032  1FE9                     	;# 
  1033  1FEA                     	;# 
  1034  1FEA                     	;# 
  1035  1FEB                     	;# 
  1036  1FED                     	;# 
  1037  1FEE                     	;# 
  1038  1FEF                     	;# 
  1039  0000                     	;# 
  1040  0001                     	;# 
  1041  0002                     	;# 
  1042  0003                     	;# 
  1043  0004                     	;# 
  1044  0005                     	;# 
  1045  0006                     	;# 
  1046  0007                     	;# 
  1047  0008                     	;# 
  1048  0009                     	;# 
  1049  000A                     	;# 
  1050  000B                     	;# 
  1051  000C                     	;# 
  1052  000D                     	;# 
  1053  000E                     	;# 
  1054  0012                     	;# 
  1055  0013                     	;# 
  1056  0014                     	;# 
  1057  0018                     	;# 
  1058  0019                     	;# 
  1059  001A                     	;# 
  1060  009B                     	;# 
  1061  009B                     	;# 
  1062  009C                     	;# 
  1063  009D                     	;# 
  1064  009E                     	;# 
  1065  009F                     	;# 
  1066  0119                     	;# 
  1067  0119                     	;# 
  1068  0119                     	;# 
  1069  011A                     	;# 
  1070  011A                     	;# 
  1071  011A                     	;# 
  1072  011B                     	;# 
  1073  011B                     	;# 
  1074  011B                     	;# 
  1075  011B                     	;# 
  1076  011B                     	;# 
  1077  011C                     	;# 
  1078  011C                     	;# 
  1079  011C                     	;# 
  1080  011D                     	;# 
  1081  011D                     	;# 
  1082  011D                     	;# 
  1083  011E                     	;# 
  1084  011E                     	;# 
  1085  011E                     	;# 
  1086  011F                     	;# 
  1087  011F                     	;# 
  1088  011F                     	;# 
  1089  011F                     	;# 
  1090  011F                     	;# 
  1091  018C                     	;# 
  1092  018D                     	;# 
  1093  018E                     	;# 
  1094  018F                     	;# 
  1095  0190                     	;# 
  1096  0191                     	;# 
  1097  0192                     	;# 
  1098  020C                     	;# 
  1099  020C                     	;# 
  1100  020D                     	;# 
  1101  020E                     	;# 
  1102  020F                     	;# 
  1103  020F                     	;# 
  1104  0210                     	;# 
  1105  0210                     	;# 
  1106  0211                     	;# 
  1107  0211                     	;# 
  1108  028C                     	;# 
  1109  028C                     	;# 
  1110  028D                     	;# 
  1111  028D                     	;# 
  1112  028E                     	;# 
  1113  028F                     	;# 
  1114  0290                     	;# 
  1115  0291                     	;# 
  1116  030C                     	;# 
  1117  030C                     	;# 
  1118  030D                     	;# 
  1119  030E                     	;# 
  1120  030F                     	;# 
  1121  0310                     	;# 
  1122  0310                     	;# 
  1123  0311                     	;# 
  1124  0312                     	;# 
  1125  0313                     	;# 
  1126  0314                     	;# 
  1127  0315                     	;# 
  1128  0316                     	;# 
  1129  0318                     	;# 
  1130  0319                     	;# 
  1131  031A                     	;# 
  1132  031C                     	;# 
  1133  031D                     	;# 
  1134  031E                     	;# 
  1135  038C                     	;# 
  1136  038D                     	;# 
  1137  038E                     	;# 
  1138  058C                     	;# 
  1139  058C                     	;# 
  1140  058D                     	;# 
  1141  058E                     	;# 
  1142  058F                     	;# 
  1143  058F                     	;# 
  1144  0590                     	;# 
  1145  0591                     	;# 
  1146  0592                     	;# 
  1147  0593                     	;# 
  1148  059C                     	;# 
  1149  059C                     	;# 
  1150  059D                     	;# 
  1151  059D                     	;# 
  1152  059E                     	;# 
  1153  059F                     	;# 
  1154  060C                     	;# 
  1155  060D                     	;# 
  1156  060E                     	;# 
  1157  060F                     	;# 
  1158  0610                     	;# 
  1159  0611                     	;# 
  1160  0612                     	;# 
  1161  0613                     	;# 
  1162  0614                     	;# 
  1163  070C                     	;# 
  1164  070D                     	;# 
  1165  070E                     	;# 
  1166  070F                     	;# 
  1167  0710                     	;# 
  1168  0711                     	;# 
  1169  0712                     	;# 
  1170  0713                     	;# 
  1171  0716                     	;# 
  1172  0717                     	;# 
  1173  0718                     	;# 
  1174  0719                     	;# 
  1175  071A                     	;# 
  1176  071B                     	;# 
  1177  071C                     	;# 
  1178  071D                     	;# 
  1179  0796                     	;# 
  1180  0797                     	;# 
  1181  0798                     	;# 
  1182  0799                     	;# 
  1183  079A                     	;# 
  1184  079B                     	;# 
  1185  080C                     	;# 
  1186  080D                     	;# 
  1187  080E                     	;# 
  1188  080F                     	;# 
  1189  0810                     	;# 
  1190  0811                     	;# 
  1191  0813                     	;# 
  1192  0814                     	;# 
  1193  081A                     	;# 
  1194  081A                     	;# 
  1195  081B                     	;# 
  1196  081C                     	;# 
  1197  081C                     	;# 
  1198  081D                     	;# 
  1199  081E                     	;# 
  1200  081F                     	;# 
  1201  088C                     	;# 
  1202  088D                     	;# 
  1203  088E                     	;# 
  1204  088F                     	;# 
  1205  0890                     	;# 
  1206  0891                     	;# 
  1207  0892                     	;# 
  1208  0893                     	;# 
  1209  0895                     	;# 
  1210  0896                     	;# 
  1211  090C                     	;# 
  1212  090E                     	;# 
  1213  090F                     	;# 
  1214  091F                     	;# 
  1215  098F                     	;# 
  1216  098F                     	;# 
  1217  0990                     	;# 
  1218  0991                     	;# 
  1219  0992                     	;# 
  1220  0993                     	;# 
  1221  0994                     	;# 
  1222  0995                     	;# 
  1223  0996                     	;# 
  1224  0997                     	;# 
  1225  0A19                     	;# 
  1226  0A19                     	;# 
  1227  0A1A                     	;# 
  1228  0A1A                     	;# 
  1229  0A1B                     	;# 
  1230  0A1B                     	;# 
  1231  0A1B                     	;# 
  1232  0A1C                     	;# 
  1233  0A1C                     	;# 
  1234  0A1D                     	;# 
  1235  0A1D                     	;# 
  1236  0A1E                     	;# 
  1237  0A1E                     	;# 
  1238  0A1F                     	;# 
  1239  0A1F                     	;# 
  1240  0A1F                     	;# 
  1241  1E0F                     	;# 
  1242  1E10                     	;# 
  1243  1E11                     	;# 
  1244  1E12                     	;# 
  1245  1E13                     	;# 
  1246  1E14                     	;# 
  1247  1E15                     	;# 
  1248  1E16                     	;# 
  1249  1E17                     	;# 
  1250  1E18                     	;# 
  1251  1E19                     	;# 
  1252  1E1A                     	;# 
  1253  1E1B                     	;# 
  1254  1E1C                     	;# 
  1255  1E1D                     	;# 
  1256  1E1E                     	;# 
  1257  1E1F                     	;# 
  1258  1E20                     	;# 
  1259  1E21                     	;# 
  1260  1E22                     	;# 
  1261  1E23                     	;# 
  1262  1E24                     	;# 
  1263  1E25                     	;# 
  1264  1E26                     	;# 
  1265  1E27                     	;# 
  1266  1E28                     	;# 
  1267  1E29                     	;# 
  1268  1E2A                     	;# 
  1269  1E2B                     	;# 
  1270  1E2C                     	;# 
  1271  1E2D                     	;# 
  1272  1E2E                     	;# 
  1273  1E2F                     	;# 
  1274  1E30                     	;# 
  1275  1E31                     	;# 
  1276  1E32                     	;# 
  1277  1E33                     	;# 
  1278  1E34                     	;# 
  1279  1E35                     	;# 
  1280  1E36                     	;# 
  1281  1E37                     	;# 
  1282  1E8F                     	;# 
  1283  1E90                     	;# 
  1284  1E91                     	;# 
  1285  1E92                     	;# 
  1286  1E93                     	;# 
  1287  1E9C                     	;# 
  1288  1EA1                     	;# 
  1289  1EA2                     	;# 
  1290  1EB1                     	;# 
  1291  1EBB                     	;# 
  1292  1EBC                     	;# 
  1293  1EBD                     	;# 
  1294  1EBE                     	;# 
  1295  1EC3                     	;# 
  1296  1EC5                     	;# 
  1297  1EC6                     	;# 
  1298  1EC7                     	;# 
  1299  1ECB                     	;# 
  1300  1ECC                     	;# 
  1301  1ECD                     	;# 
  1302  1ECE                     	;# 
  1303  1F10                     	;# 
  1304  1F11                     	;# 
  1305  1F12                     	;# 
  1306  1F13                     	;# 
  1307  1F14                     	;# 
  1308  1F15                     	;# 
  1309  1F1C                     	;# 
  1310  1F1D                     	;# 
  1311  1F1E                     	;# 
  1312  1F1F                     	;# 
  1313  1F20                     	;# 
  1314  1F21                     	;# 
  1315  1F22                     	;# 
  1316  1F23                     	;# 
  1317  1F24                     	;# 
  1318  1F25                     	;# 
  1319  1F26                     	;# 
  1320  1F27                     	;# 
  1321  1F38                     	;# 
  1322  1F39                     	;# 
  1323  1F3A                     	;# 
  1324  1F3B                     	;# 
  1325  1F3C                     	;# 
  1326  1F3D                     	;# 
  1327  1F3E                     	;# 
  1328  1F3F                     	;# 
  1329  1F43                     	;# 
  1330  1F44                     	;# 
  1331  1F45                     	;# 
  1332  1F46                     	;# 
  1333  1F47                     	;# 
  1334  1F48                     	;# 
  1335  1F49                     	;# 
  1336  1F4A                     	;# 
  1337  1F4E                     	;# 
  1338  1F4F                     	;# 
  1339  1F50                     	;# 
  1340  1F51                     	;# 
  1341  1F52                     	;# 
  1342  1F53                     	;# 
  1343  1F54                     	;# 
  1344  1F55                     	;# 
  1345  1FE4                     	;# 
  1346  1FE5                     	;# 
  1347  1FE6                     	;# 
  1348  1FE7                     	;# 
  1349  1FE8                     	;# 
  1350  1FE8                     	;# 
  1351  1FE9                     	;# 
  1352  1FEA                     	;# 
  1353  1FEA                     	;# 
  1354  1FEB                     	;# 
  1355  1FED                     	;# 
  1356  1FEE                     	;# 
  1357  1FEF                     	;# 
  1358  0000                     	;# 
  1359  0001                     	;# 
  1360  0002                     	;# 
  1361  0003                     	;# 
  1362  0004                     	;# 
  1363  0005                     	;# 
  1364  0006                     	;# 
  1365  0007                     	;# 
  1366  0008                     	;# 
  1367  0009                     	;# 
  1368  000A                     	;# 
  1369  000B                     	;# 
  1370  000C                     	;# 
  1371  000D                     	;# 
  1372  000E                     	;# 
  1373  0012                     	;# 
  1374  0013                     	;# 
  1375  0014                     	;# 
  1376  0018                     	;# 
  1377  0019                     	;# 
  1378  001A                     	;# 
  1379  009B                     	;# 
  1380  009B                     	;# 
  1381  009C                     	;# 
  1382  009D                     	;# 
  1383  009E                     	;# 
  1384  009F                     	;# 
  1385  0119                     	;# 
  1386  0119                     	;# 
  1387  0119                     	;# 
  1388  011A                     	;# 
  1389  011A                     	;# 
  1390  011A                     	;# 
  1391  011B                     	;# 
  1392  011B                     	;# 
  1393  011B                     	;# 
  1394  011B                     	;# 
  1395  011B                     	;# 
  1396  011C                     	;# 
  1397  011C                     	;# 
  1398  011C                     	;# 
  1399  011D                     	;# 
  1400  011D                     	;# 
  1401  011D                     	;# 
  1402  011E                     	;# 
  1403  011E                     	;# 
  1404  011E                     	;# 
  1405  011F                     	;# 
  1406  011F                     	;# 
  1407  011F                     	;# 
  1408  011F                     	;# 
  1409  011F                     	;# 
  1410  018C                     	;# 
  1411  018D                     	;# 
  1412  018E                     	;# 
  1413  018F                     	;# 
  1414  0190                     	;# 
  1415  0191                     	;# 
  1416  0192                     	;# 
  1417  020C                     	;# 
  1418  020C                     	;# 
  1419  020D                     	;# 
  1420  020E                     	;# 
  1421  020F                     	;# 
  1422  020F                     	;# 
  1423  0210                     	;# 
  1424  0210                     	;# 
  1425  0211                     	;# 
  1426  0211                     	;# 
  1427  028C                     	;# 
  1428  028C                     	;# 
  1429  028D                     	;# 
  1430  028D                     	;# 
  1431  028E                     	;# 
  1432  028F                     	;# 
  1433  0290                     	;# 
  1434  0291                     	;# 
  1435  030C                     	;# 
  1436  030C                     	;# 
  1437  030D                     	;# 
  1438  030E                     	;# 
  1439  030F                     	;# 
  1440  0310                     	;# 
  1441  0310                     	;# 
  1442  0311                     	;# 
  1443  0312                     	;# 
  1444  0313                     	;# 
  1445  0314                     	;# 
  1446  0315                     	;# 
  1447  0316                     	;# 
  1448  0318                     	;# 
  1449  0319                     	;# 
  1450  031A                     	;# 
  1451  031C                     	;# 
  1452  031D                     	;# 
  1453  031E                     	;# 
  1454  038C                     	;# 
  1455  038D                     	;# 
  1456  038E                     	;# 
  1457  058C                     	;# 
  1458  058C                     	;# 
  1459  058D                     	;# 
  1460  058E                     	;# 
  1461  058F                     	;# 
  1462  058F                     	;# 
  1463  0590                     	;# 
  1464  0591                     	;# 
  1465  0592                     	;# 
  1466  0593                     	;# 
  1467  059C                     	;# 
  1468  059C                     	;# 
  1469  059D                     	;# 
  1470  059D                     	;# 
  1471  059E                     	;# 
  1472  059F                     	;# 
  1473  060C                     	;# 
  1474  060D                     	;# 
  1475  060E                     	;# 
  1476  060F                     	;# 
  1477  0610                     	;# 
  1478  0611                     	;# 
  1479  0612                     	;# 
  1480  0613                     	;# 
  1481  0614                     	;# 
  1482  070C                     	;# 
  1483  070D                     	;# 
  1484  070E                     	;# 
  1485  070F                     	;# 
  1486  0710                     	;# 
  1487  0711                     	;# 
  1488  0712                     	;# 
  1489  0713                     	;# 
  1490  0716                     	;# 
  1491  0717                     	;# 
  1492  0718                     	;# 
  1493  0719                     	;# 
  1494  071A                     	;# 
  1495  071B                     	;# 
  1496  071C                     	;# 
  1497  071D                     	;# 
  1498  0796                     	;# 
  1499  0797                     	;# 
  1500  0798                     	;# 
  1501  0799                     	;# 
  1502  079A                     	;# 
  1503  079B                     	;# 
  1504  080C                     	;# 
  1505  080D                     	;# 
  1506  080E                     	;# 
  1507  080F                     	;# 
  1508  0810                     	;# 
  1509  0811                     	;# 
  1510  0813                     	;# 
  1511  0814                     	;# 
  1512  081A                     	;# 
  1513  081A                     	;# 
  1514  081B                     	;# 
  1515  081C                     	;# 
  1516  081C                     	;# 
  1517  081D                     	;# 
  1518  081E                     	;# 
  1519  081F                     	;# 
  1520  088C                     	;# 
  1521  088D                     	;# 
  1522  088E                     	;# 
  1523  088F                     	;# 
  1524  0890                     	;# 
  1525  0891                     	;# 
  1526  0892                     	;# 
  1527  0893                     	;# 
  1528  0895                     	;# 
  1529  0896                     	;# 
  1530  090C                     	;# 
  1531  090E                     	;# 
  1532  090F                     	;# 
  1533  091F                     	;# 
  1534  098F                     	;# 
  1535  098F                     	;# 
  1536  0990                     	;# 
  1537  0991                     	;# 
  1538  0992                     	;# 
  1539  0993                     	;# 
  1540  0994                     	;# 
  1541  0995                     	;# 
  1542  0996                     	;# 
  1543  0997                     	;# 
  1544  0A19                     	;# 
  1545  0A19                     	;# 
  1546  0A1A                     	;# 
  1547  0A1A                     	;# 
  1548  0A1B                     	;# 
  1549  0A1B                     	;# 
  1550  0A1B                     	;# 
  1551  0A1C                     	;# 
  1552  0A1C                     	;# 
  1553  0A1D                     	;# 
  1554  0A1D                     	;# 
  1555  0A1E                     	;# 
  1556  0A1E                     	;# 
  1557  0A1F                     	;# 
  1558  0A1F                     	;# 
  1559  0A1F                     	;# 
  1560  1E0F                     	;# 
  1561  1E10                     	;# 
  1562  1E11                     	;# 
  1563  1E12                     	;# 
  1564  1E13                     	;# 
  1565  1E14                     	;# 
  1566  1E15                     	;# 
  1567  1E16                     	;# 
  1568  1E17                     	;# 
  1569  1E18                     	;# 
  1570  1E19                     	;# 
  1571  1E1A                     	;# 
  1572  1E1B                     	;# 
  1573  1E1C                     	;# 
  1574  1E1D                     	;# 
  1575  1E1E                     	;# 
  1576  1E1F                     	;# 
  1577  1E20                     	;# 
  1578  1E21                     	;# 
  1579  1E22                     	;# 
  1580  1E23                     	;# 
  1581  1E24                     	;# 
  1582  1E25                     	;# 
  1583  1E26                     	;# 
  1584  1E27                     	;# 
  1585  1E28                     	;# 
  1586  1E29                     	;# 
  1587  1E2A                     	;# 
  1588  1E2B                     	;# 
  1589  1E2C                     	;# 
  1590  1E2D                     	;# 
  1591  1E2E                     	;# 
  1592  1E2F                     	;# 
  1593  1E30                     	;# 
  1594  1E31                     	;# 
  1595  1E32                     	;# 
  1596  1E33                     	;# 
  1597  1E34                     	;# 
  1598  1E35                     	;# 
  1599  1E36                     	;# 
  1600  1E37                     	;# 
  1601  1E8F                     	;# 
  1602  1E90                     	;# 
  1603  1E91                     	;# 
  1604  1E92                     	;# 
  1605  1E93                     	;# 
  1606  1E9C                     	;# 
  1607  1EA1                     	;# 
  1608  1EA2                     	;# 
  1609  1EB1                     	;# 
  1610  1EBB                     	;# 
  1611  1EBC                     	;# 
  1612  1EBD                     	;# 
  1613  1EBE                     	;# 
  1614  1EC3                     	;# 
  1615  1EC5                     	;# 
  1616  1EC6                     	;# 
  1617  1EC7                     	;# 
  1618  1ECB                     	;# 
  1619  1ECC                     	;# 
  1620  1ECD                     	;# 
  1621  1ECE                     	;# 
  1622  1F10                     	;# 
  1623  1F11                     	;# 
  1624  1F12                     	;# 
  1625  1F13                     	;# 
  1626  1F14                     	;# 
  1627  1F15                     	;# 
  1628  1F1C                     	;# 
  1629  1F1D                     	;# 
  1630  1F1E                     	;# 
  1631  1F1F                     	;# 
  1632  1F20                     	;# 
  1633  1F21                     	;# 
  1634  1F22                     	;# 
  1635  1F23                     	;# 
  1636  1F24                     	;# 
  1637  1F25                     	;# 
  1638  1F26                     	;# 
  1639  1F27                     	;# 
  1640  1F38                     	;# 
  1641  1F39                     	;# 
  1642  1F3A                     	;# 
  1643  1F3B                     	;# 
  1644  1F3C                     	;# 
  1645  1F3D                     	;# 
  1646  1F3E                     	;# 
  1647  1F3F                     	;# 
  1648  1F43                     	;# 
  1649  1F44                     	;# 
  1650  1F45                     	;# 
  1651  1F46                     	;# 
  1652  1F47                     	;# 
  1653  1F48                     	;# 
  1654  1F49                     	;# 
  1655  1F4A                     	;# 
  1656  1F4E                     	;# 
  1657  1F4F                     	;# 
  1658  1F50                     	;# 
  1659  1F51                     	;# 
  1660  1F52                     	;# 
  1661  1F53                     	;# 
  1662  1F54                     	;# 
  1663  1F55                     	;# 
  1664  1FE4                     	;# 
  1665  1FE5                     	;# 
  1666  1FE6                     	;# 
  1667  1FE7                     	;# 
  1668  1FE8                     	;# 
  1669  1FE8                     	;# 
  1670  1FE9                     	;# 
  1671  1FEA                     	;# 
  1672  1FEA                     	;# 
  1673  1FEB                     	;# 
  1674  1FED                     	;# 
  1675  1FEE                     	;# 
  1676  1FEF                     	;# 
  1677  0000                     	;# 
  1678  0001                     	;# 
  1679  0002                     	;# 
  1680  0003                     	;# 
  1681  0004                     	;# 
  1682  0005                     	;# 
  1683  0006                     	;# 
  1684  0007                     	;# 
  1685  0008                     	;# 
  1686  0009                     	;# 
  1687  000A                     	;# 
  1688  000B                     	;# 
  1689  000C                     	;# 
  1690  000D                     	;# 
  1691  000E                     	;# 
  1692  0012                     	;# 
  1693  0013                     	;# 
  1694  0014                     	;# 
  1695  0018                     	;# 
  1696  0019                     	;# 
  1697  001A                     	;# 
  1698  009B                     	;# 
  1699  009B                     	;# 
  1700  009C                     	;# 
  1701  009D                     	;# 
  1702  009E                     	;# 
  1703  009F                     	;# 
  1704  0119                     	;# 
  1705  0119                     	;# 
  1706  0119                     	;# 
  1707  011A                     	;# 
  1708  011A                     	;# 
  1709  011A                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011B                     	;# 
  1715  011C                     	;# 
  1716  011C                     	;# 
  1717  011C                     	;# 
  1718  011D                     	;# 
  1719  011D                     	;# 
  1720  011D                     	;# 
  1721  011E                     	;# 
  1722  011E                     	;# 
  1723  011E                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  011F                     	;# 
  1729  018C                     	;# 
  1730  018D                     	;# 
  1731  018E                     	;# 
  1732  018F                     	;# 
  1733  0190                     	;# 
  1734  0191                     	;# 
  1735  0192                     	;# 
  1736  020C                     	;# 
  1737  020C                     	;# 
  1738  020D                     	;# 
  1739  020E                     	;# 
  1740  020F                     	;# 
  1741  020F                     	;# 
  1742  0210                     	;# 
  1743  0210                     	;# 
  1744  0211                     	;# 
  1745  0211                     	;# 
  1746  028C                     	;# 
  1747  028C                     	;# 
  1748  028D                     	;# 
  1749  028D                     	;# 
  1750  028E                     	;# 
  1751  028F                     	;# 
  1752  0290                     	;# 
  1753  0291                     	;# 
  1754  030C                     	;# 
  1755  030C                     	;# 
  1756  030D                     	;# 
  1757  030E                     	;# 
  1758  030F                     	;# 
  1759  0310                     	;# 
  1760  0310                     	;# 
  1761  0311                     	;# 
  1762  0312                     	;# 
  1763  0313                     	;# 
  1764  0314                     	;# 
  1765  0315                     	;# 
  1766  0316                     	;# 
  1767  0318                     	;# 
  1768  0319                     	;# 
  1769  031A                     	;# 
  1770  031C                     	;# 
  1771  031D                     	;# 
  1772  031E                     	;# 
  1773  038C                     	;# 
  1774  038D                     	;# 
  1775  038E                     	;# 
  1776  058C                     	;# 
  1777  058C                     	;# 
  1778  058D                     	;# 
  1779  058E                     	;# 
  1780  058F                     	;# 
  1781  058F                     	;# 
  1782  0590                     	;# 
  1783  0591                     	;# 
  1784  0592                     	;# 
  1785  0593                     	;# 
  1786  059C                     	;# 
  1787  059C                     	;# 
  1788  059D                     	;# 
  1789  059D                     	;# 
  1790  059E                     	;# 
  1791  059F                     	;# 
  1792  060C                     	;# 
  1793  060D                     	;# 
  1794  060E                     	;# 
  1795  060F                     	;# 
  1796  0610                     	;# 
  1797  0611                     	;# 
  1798  0612                     	;# 
  1799  0613                     	;# 
  1800  0614                     	;# 
  1801  070C                     	;# 
  1802  070D                     	;# 
  1803  070E                     	;# 
  1804  070F                     	;# 
  1805  0710                     	;# 
  1806  0711                     	;# 
  1807  0712                     	;# 
  1808  0713                     	;# 
  1809  0716                     	;# 
  1810  0717                     	;# 
  1811  0718                     	;# 
  1812  0719                     	;# 
  1813  071A                     	;# 
  1814  071B                     	;# 
  1815  071C                     	;# 
  1816  071D                     	;# 
  1817  0796                     	;# 
  1818  0797                     	;# 
  1819  0798                     	;# 
  1820  0799                     	;# 
  1821  079A                     	;# 
  1822  079B                     	;# 
  1823  080C                     	;# 
  1824  080D                     	;# 
  1825  080E                     	;# 
  1826  080F                     	;# 
  1827  0810                     	;# 
  1828  0811                     	;# 
  1829  0813                     	;# 
  1830  0814                     	;# 
  1831  081A                     	;# 
  1832  081A                     	;# 
  1833  081B                     	;# 
  1834  081C                     	;# 
  1835  081C                     	;# 
  1836  081D                     	;# 
  1837  081E                     	;# 
  1838  081F                     	;# 
  1839  088C                     	;# 
  1840  088D                     	;# 
  1841  088E                     	;# 
  1842  088F                     	;# 
  1843  0890                     	;# 
  1844  0891                     	;# 
  1845  0892                     	;# 
  1846  0893                     	;# 
  1847  0895                     	;# 
  1848  0896                     	;# 
  1849  090C                     	;# 
  1850  090E                     	;# 
  1851  090F                     	;# 
  1852  091F                     	;# 
  1853  098F                     	;# 
  1854  098F                     	;# 
  1855  0990                     	;# 
  1856  0991                     	;# 
  1857  0992                     	;# 
  1858  0993                     	;# 
  1859  0994                     	;# 
  1860  0995                     	;# 
  1861  0996                     	;# 
  1862  0997                     	;# 
  1863  0A19                     	;# 
  1864  0A19                     	;# 
  1865  0A1A                     	;# 
  1866  0A1A                     	;# 
  1867  0A1B                     	;# 
  1868  0A1B                     	;# 
  1869  0A1B                     	;# 
  1870  0A1C                     	;# 
  1871  0A1C                     	;# 
  1872  0A1D                     	;# 
  1873  0A1D                     	;# 
  1874  0A1E                     	;# 
  1875  0A1E                     	;# 
  1876  0A1F                     	;# 
  1877  0A1F                     	;# 
  1878  0A1F                     	;# 
  1879  1E0F                     	;# 
  1880  1E10                     	;# 
  1881  1E11                     	;# 
  1882  1E12                     	;# 
  1883  1E13                     	;# 
  1884  1E14                     	;# 
  1885  1E15                     	;# 
  1886  1E16                     	;# 
  1887  1E17                     	;# 
  1888  1E18                     	;# 
  1889  1E19                     	;# 
  1890  1E1A                     	;# 
  1891  1E1B                     	;# 
  1892  1E1C                     	;# 
  1893  1E1D                     	;# 
  1894  1E1E                     	;# 
  1895  1E1F                     	;# 
  1896  1E20                     	;# 
  1897  1E21                     	;# 
  1898  1E22                     	;# 
  1899  1E23                     	;# 
  1900  1E24                     	;# 
  1901  1E25                     	;# 
  1902  1E26                     	;# 
  1903  1E27                     	;# 
  1904  1E28                     	;# 
  1905  1E29                     	;# 
  1906  1E2A                     	;# 
  1907  1E2B                     	;# 
  1908  1E2C                     	;# 
  1909  1E2D                     	;# 
  1910  1E2E                     	;# 
  1911  1E2F                     	;# 
  1912  1E30                     	;# 
  1913  1E31                     	;# 
  1914  1E32                     	;# 
  1915  1E33                     	;# 
  1916  1E34                     	;# 
  1917  1E35                     	;# 
  1918  1E36                     	;# 
  1919  1E37                     	;# 
  1920  1E8F                     	;# 
  1921  1E90                     	;# 
  1922  1E91                     	;# 
  1923  1E92                     	;# 
  1924  1E93                     	;# 
  1925  1E9C                     	;# 
  1926  1EA1                     	;# 
  1927  1EA2                     	;# 
  1928  1EB1                     	;# 
  1929  1EBB                     	;# 
  1930  1EBC                     	;# 
  1931  1EBD                     	;# 
  1932  1EBE                     	;# 
  1933  1EC3                     	;# 
  1934  1EC5                     	;# 
  1935  1EC6                     	;# 
  1936  1EC7                     	;# 
  1937  1ECB                     	;# 
  1938  1ECC                     	;# 
  1939  1ECD                     	;# 
  1940  1ECE                     	;# 
  1941  1F10                     	;# 
  1942  1F11                     	;# 
  1943  1F12                     	;# 
  1944  1F13                     	;# 
  1945  1F14                     	;# 
  1946  1F15                     	;# 
  1947  1F1C                     	;# 
  1948  1F1D                     	;# 
  1949  1F1E                     	;# 
  1950  1F1F                     	;# 
  1951  1F20                     	;# 
  1952  1F21                     	;# 
  1953  1F22                     	;# 
  1954  1F23                     	;# 
  1955  1F24                     	;# 
  1956  1F25                     	;# 
  1957  1F26                     	;# 
  1958  1F27                     	;# 
  1959  1F38                     	;# 
  1960  1F39                     	;# 
  1961  1F3A                     	;# 
  1962  1F3B                     	;# 
  1963  1F3C                     	;# 
  1964  1F3D                     	;# 
  1965  1F3E                     	;# 
  1966  1F3F                     	;# 
  1967  1F43                     	;# 
  1968  1F44                     	;# 
  1969  1F45                     	;# 
  1970  1F46                     	;# 
  1971  1F47                     	;# 
  1972  1F48                     	;# 
  1973  1F49                     	;# 
  1974  1F4A                     	;# 
  1975  1F4E                     	;# 
  1976  1F4F                     	;# 
  1977  1F50                     	;# 
  1978  1F51                     	;# 
  1979  1F52                     	;# 
  1980  1F53                     	;# 
  1981  1F54                     	;# 
  1982  1F55                     	;# 
  1983  1FE4                     	;# 
  1984  1FE5                     	;# 
  1985  1FE6                     	;# 
  1986  1FE7                     	;# 
  1987  1FE8                     	;# 
  1988  1FE8                     	;# 
  1989  1FE9                     	;# 
  1990  1FEA                     	;# 
  1991  1FEA                     	;# 
  1992  1FEB                     	;# 
  1993  1FED                     	;# 
  1994  1FEE                     	;# 
  1995  1FEF                     	;# 
  1996  0000                     	;# 
  1997  0001                     	;# 
  1998  0002                     	;# 
  1999  0003                     	;# 
  2000  0004                     	;# 
  2001  0005                     	;# 
  2002  0006                     	;# 
  2003  0007                     	;# 
  2004  0008                     	;# 
  2005  0009                     	;# 
  2006  000A                     	;# 
  2007  000B                     	;# 
  2008  000C                     	;# 
  2009  000D                     	;# 
  2010  000E                     	;# 
  2011  0012                     	;# 
  2012  0013                     	;# 
  2013  0014                     	;# 
  2014  0018                     	;# 
  2015  0019                     	;# 
  2016  001A                     	;# 
  2017  009B                     	;# 
  2018  009B                     	;# 
  2019  009C                     	;# 
  2020  009D                     	;# 
  2021  009E                     	;# 
  2022  009F                     	;# 
  2023  0119                     	;# 
  2024  0119                     	;# 
  2025  0119                     	;# 
  2026  011A                     	;# 
  2027  011A                     	;# 
  2028  011A                     	;# 
  2029  011B                     	;# 
  2030  011B                     	;# 
  2031  011B                     	;# 
  2032  011B                     	;# 
  2033  011B                     	;# 
  2034  011C                     	;# 
  2035  011C                     	;# 
  2036  011C                     	;# 
  2037  011D                     	;# 
  2038  011D                     	;# 
  2039  011D                     	;# 
  2040  011E                     	;# 
  2041  011E                     	;# 
  2042  011E                     	;# 
  2043  011F                     	;# 
  2044  011F                     	;# 
  2045  011F                     	;# 
  2046  011F                     	;# 
  2047  011F                     	;# 
  2048  018C                     	;# 
  2049  018D                     	;# 
  2050  018E                     	;# 
  2051  018F                     	;# 
  2052  0190                     	;# 
  2053  0191                     	;# 
  2054  0192                     	;# 
  2055  020C                     	;# 
  2056  020C                     	;# 
  2057  020D                     	;# 
  2058  020E                     	;# 
  2059  020F                     	;# 
  2060  020F                     	;# 
  2061  0210                     	;# 
  2062  0210                     	;# 
  2063  0211                     	;# 
  2064  0211                     	;# 
  2065  028C                     	;# 
  2066  028C                     	;# 
  2067  028D                     	;# 
  2068  028D                     	;# 
  2069  028E                     	;# 
  2070  028F                     	;# 
  2071  0290                     	;# 
  2072  0291                     	;# 
  2073  030C                     	;# 
  2074  030C                     	;# 
  2075  030D                     	;# 
  2076  030E                     	;# 
  2077  030F                     	;# 
  2078  0310                     	;# 
  2079  0310                     	;# 
  2080  0311                     	;# 
  2081  0312                     	;# 
  2082  0313                     	;# 
  2083  0314                     	;# 
  2084  0315                     	;# 
  2085  0316                     	;# 
  2086  0318                     	;# 
  2087  0319                     	;# 
  2088  031A                     	;# 
  2089  031C                     	;# 
  2090  031D                     	;# 
  2091  031E                     	;# 
  2092  038C                     	;# 
  2093  038D                     	;# 
  2094  038E                     	;# 
  2095  058C                     	;# 
  2096  058C                     	;# 
  2097  058D                     	;# 
  2098  058E                     	;# 
  2099  058F                     	;# 
  2100  058F                     	;# 
  2101  0590                     	;# 
  2102  0591                     	;# 
  2103  0592                     	;# 
  2104  0593                     	;# 
  2105  059C                     	;# 
  2106  059C                     	;# 
  2107  059D                     	;# 
  2108  059D                     	;# 
  2109  059E                     	;# 
  2110  059F                     	;# 
  2111  060C                     	;# 
  2112  060D                     	;# 
  2113  060E                     	;# 
  2114  060F                     	;# 
  2115  0610                     	;# 
  2116  0611                     	;# 
  2117  0612                     	;# 
  2118  0613                     	;# 
  2119  0614                     	;# 
  2120  070C                     	;# 
  2121  070D                     	;# 
  2122  070E                     	;# 
  2123  070F                     	;# 
  2124  0710                     	;# 
  2125  0711                     	;# 
  2126  0712                     	;# 
  2127  0713                     	;# 
  2128  0716                     	;# 
  2129  0717                     	;# 
  2130  0718                     	;# 
  2131  0719                     	;# 
  2132  071A                     	;# 
  2133  071B                     	;# 
  2134  071C                     	;# 
  2135  071D                     	;# 
  2136  0796                     	;# 
  2137  0797                     	;# 
  2138  0798                     	;# 
  2139  0799                     	;# 
  2140  079A                     	;# 
  2141  079B                     	;# 
  2142  080C                     	;# 
  2143  080D                     	;# 
  2144  080E                     	;# 
  2145  080F                     	;# 
  2146  0810                     	;# 
  2147  0811                     	;# 
  2148  0813                     	;# 
  2149  0814                     	;# 
  2150  081A                     	;# 
  2151  081A                     	;# 
  2152  081B                     	;# 
  2153  081C                     	;# 
  2154  081C                     	;# 
  2155  081D                     	;# 
  2156  081E                     	;# 
  2157  081F                     	;# 
  2158  088C                     	;# 
  2159  088D                     	;# 
  2160  088E                     	;# 
  2161  088F                     	;# 
  2162  0890                     	;# 
  2163  0891                     	;# 
  2164  0892                     	;# 
  2165  0893                     	;# 
  2166  0895                     	;# 
  2167  0896                     	;# 
  2168  090C                     	;# 
  2169  090E                     	;# 
  2170  090F                     	;# 
  2171  091F                     	;# 
  2172  098F                     	;# 
  2173  098F                     	;# 
  2174  0990                     	;# 
  2175  0991                     	;# 
  2176  0992                     	;# 
  2177  0993                     	;# 
  2178  0994                     	;# 
  2179  0995                     	;# 
  2180  0996                     	;# 
  2181  0997                     	;# 
  2182  0A19                     	;# 
  2183  0A19                     	;# 
  2184  0A1A                     	;# 
  2185  0A1A                     	;# 
  2186  0A1B                     	;# 
  2187  0A1B                     	;# 
  2188  0A1B                     	;# 
  2189  0A1C                     	;# 
  2190  0A1C                     	;# 
  2191  0A1D                     	;# 
  2192  0A1D                     	;# 
  2193  0A1E                     	;# 
  2194  0A1E                     	;# 
  2195  0A1F                     	;# 
  2196  0A1F                     	;# 
  2197  0A1F                     	;# 
  2198  1E0F                     	;# 
  2199  1E10                     	;# 
  2200  1E11                     	;# 
  2201  1E12                     	;# 
  2202  1E13                     	;# 
  2203  1E14                     	;# 
  2204  1E15                     	;# 
  2205  1E16                     	;# 
  2206  1E17                     	;# 
  2207  1E18                     	;# 
  2208  1E19                     	;# 
  2209  1E1A                     	;# 
  2210  1E1B                     	;# 
  2211  1E1C                     	;# 
  2212  1E1D                     	;# 
  2213  1E1E                     	;# 
  2214  1E1F                     	;# 
  2215  1E20                     	;# 
  2216  1E21                     	;# 
  2217  1E22                     	;# 
  2218  1E23                     	;# 
  2219  1E24                     	;# 
  2220  1E25                     	;# 
  2221  1E26                     	;# 
  2222  1E27                     	;# 
  2223  1E28                     	;# 
  2224  1E29                     	;# 
  2225  1E2A                     	;# 
  2226  1E2B                     	;# 
  2227  1E2C                     	;# 
  2228  1E2D                     	;# 
  2229  1E2E                     	;# 
  2230  1E2F                     	;# 
  2231  1E30                     	;# 
  2232  1E31                     	;# 
  2233  1E32                     	;# 
  2234  1E33                     	;# 
  2235  1E34                     	;# 
  2236  1E35                     	;# 
  2237  1E36                     	;# 
  2238  1E37                     	;# 
  2239  1E8F                     	;# 
  2240  1E90                     	;# 
  2241  1E91                     	;# 
  2242  1E92                     	;# 
  2243  1E93                     	;# 
  2244  1E9C                     	;# 
  2245  1EA1                     	;# 
  2246  1EA2                     	;# 
  2247  1EB1                     	;# 
  2248  1EBB                     	;# 
  2249  1EBC                     	;# 
  2250  1EBD                     	;# 
  2251  1EBE                     	;# 
  2252  1EC3                     	;# 
  2253  1EC5                     	;# 
  2254  1EC6                     	;# 
  2255  1EC7                     	;# 
  2256  1ECB                     	;# 
  2257  1ECC                     	;# 
  2258  1ECD                     	;# 
  2259  1ECE                     	;# 
  2260  1F10                     	;# 
  2261  1F11                     	;# 
  2262  1F12                     	;# 
  2263  1F13                     	;# 
  2264  1F14                     	;# 
  2265  1F15                     	;# 
  2266  1F1C                     	;# 
  2267  1F1D                     	;# 
  2268  1F1E                     	;# 
  2269  1F1F                     	;# 
  2270  1F20                     	;# 
  2271  1F21                     	;# 
  2272  1F22                     	;# 
  2273  1F23                     	;# 
  2274  1F24                     	;# 
  2275  1F25                     	;# 
  2276  1F26                     	;# 
  2277  1F27                     	;# 
  2278  1F38                     	;# 
  2279  1F39                     	;# 
  2280  1F3A                     	;# 
  2281  1F3B                     	;# 
  2282  1F3C                     	;# 
  2283  1F3D                     	;# 
  2284  1F3E                     	;# 
  2285  1F3F                     	;# 
  2286  1F43                     	;# 
  2287  1F44                     	;# 
  2288  1F45                     	;# 
  2289  1F46                     	;# 
  2290  1F47                     	;# 
  2291  1F48                     	;# 
  2292  1F49                     	;# 
  2293  1F4A                     	;# 
  2294  1F4E                     	;# 
  2295  1F4F                     	;# 
  2296  1F50                     	;# 
  2297  1F51                     	;# 
  2298  1F52                     	;# 
  2299  1F53                     	;# 
  2300  1F54                     	;# 
  2301  1F55                     	;# 
  2302  1FE4                     	;# 
  2303  1FE5                     	;# 
  2304  1FE6                     	;# 
  2305  1FE7                     	;# 
  2306  1FE8                     	;# 
  2307  1FE8                     	;# 
  2308  1FE9                     	;# 
  2309  1FEA                     	;# 
  2310  1FEA                     	;# 
  2311  1FEB                     	;# 
  2312  1FED                     	;# 
  2313  1FEE                     	;# 
  2314  1FEF                     	;# 
  2315  0000                     	;# 
  2316  0001                     	;# 
  2317  0002                     	;# 
  2318  0003                     	;# 
  2319  0004                     	;# 
  2320  0005                     	;# 
  2321  0006                     	;# 
  2322  0007                     	;# 
  2323  0008                     	;# 
  2324  0009                     	;# 
  2325  000A                     	;# 
  2326  000B                     	;# 
  2327  000C                     	;# 
  2328  000D                     	;# 
  2329  000E                     	;# 
  2330  0012                     	;# 
  2331  0013                     	;# 
  2332  0014                     	;# 
  2333  0018                     	;# 
  2334  0019                     	;# 
  2335  001A                     	;# 
  2336  009B                     	;# 
  2337  009B                     	;# 
  2338  009C                     	;# 
  2339  009D                     	;# 
  2340  009E                     	;# 
  2341  009F                     	;# 
  2342  0119                     	;# 
  2343  0119                     	;# 
  2344  0119                     	;# 
  2345  011A                     	;# 
  2346  011A                     	;# 
  2347  011A                     	;# 
  2348  011B                     	;# 
  2349  011B                     	;# 
  2350  011B                     	;# 
  2351  011B                     	;# 
  2352  011B                     	;# 
  2353  011C                     	;# 
  2354  011C                     	;# 
  2355  011C                     	;# 
  2356  011D                     	;# 
  2357  011D                     	;# 
  2358  011D                     	;# 
  2359  011E                     	;# 
  2360  011E                     	;# 
  2361  011E                     	;# 
  2362  011F                     	;# 
  2363  011F                     	;# 
  2364  011F                     	;# 
  2365  011F                     	;# 
  2366  011F                     	;# 
  2367  018C                     	;# 
  2368  018D                     	;# 
  2369  018E                     	;# 
  2370  018F                     	;# 
  2371  0190                     	;# 
  2372  0191                     	;# 
  2373  0192                     	;# 
  2374  020C                     	;# 
  2375  020C                     	;# 
  2376  020D                     	;# 
  2377  020E                     	;# 
  2378  020F                     	;# 
  2379  020F                     	;# 
  2380  0210                     	;# 
  2381  0210                     	;# 
  2382  0211                     	;# 
  2383  0211                     	;# 
  2384  028C                     	;# 
  2385  028C                     	;# 
  2386  028D                     	;# 
  2387  028D                     	;# 
  2388  028E                     	;# 
  2389  028F                     	;# 
  2390  0290                     	;# 
  2391  0291                     	;# 
  2392  030C                     	;# 
  2393  030C                     	;# 
  2394  030D                     	;# 
  2395  030E                     	;# 
  2396  030F                     	;# 
  2397  0310                     	;# 
  2398  0310                     	;# 
  2399  0311                     	;# 
  2400  0312                     	;# 
  2401  0313                     	;# 
  2402  0314                     	;# 
  2403  0315                     	;# 
  2404  0316                     	;# 
  2405  0318                     	;# 
  2406  0319                     	;# 
  2407  031A                     	;# 
  2408  031C                     	;# 
  2409  031D                     	;# 
  2410  031E                     	;# 
  2411  038C                     	;# 
  2412  038D                     	;# 
  2413  038E                     	;# 
  2414  058C                     	;# 
  2415  058C                     	;# 
  2416  058D                     	;# 
  2417  058E                     	;# 
  2418  058F                     	;# 
  2419  058F                     	;# 
  2420  0590                     	;# 
  2421  0591                     	;# 
  2422  0592                     	;# 
  2423  0593                     	;# 
  2424  059C                     	;# 
  2425  059C                     	;# 
  2426  059D                     	;# 
  2427  059D                     	;# 
  2428  059E                     	;# 
  2429  059F                     	;# 
  2430  060C                     	;# 
  2431  060D                     	;# 
  2432  060E                     	;# 
  2433  060F                     	;# 
  2434  0610                     	;# 
  2435  0611                     	;# 
  2436  0612                     	;# 
  2437  0613                     	;# 
  2438  0614                     	;# 
  2439  070C                     	;# 
  2440  070D                     	;# 
  2441  070E                     	;# 
  2442  070F                     	;# 
  2443  0710                     	;# 
  2444  0711                     	;# 
  2445  0712                     	;# 
  2446  0713                     	;# 
  2447  0716                     	;# 
  2448  0717                     	;# 
  2449  0718                     	;# 
  2450  0719                     	;# 
  2451  071A                     	;# 
  2452  071B                     	;# 
  2453  071C                     	;# 
  2454  071D                     	;# 
  2455  0796                     	;# 
  2456  0797                     	;# 
  2457  0798                     	;# 
  2458  0799                     	;# 
  2459  079A                     	;# 
  2460  079B                     	;# 
  2461  080C                     	;# 
  2462  080D                     	;# 
  2463  080E                     	;# 
  2464  080F                     	;# 
  2465  0810                     	;# 
  2466  0811                     	;# 
  2467  0813                     	;# 
  2468  0814                     	;# 
  2469  081A                     	;# 
  2470  081A                     	;# 
  2471  081B                     	;# 
  2472  081C                     	;# 
  2473  081C                     	;# 
  2474  081D                     	;# 
  2475  081E                     	;# 
  2476  081F                     	;# 
  2477  088C                     	;# 
  2478  088D                     	;# 
  2479  088E                     	;# 
  2480  088F                     	;# 
  2481  0890                     	;# 
  2482  0891                     	;# 
  2483  0892                     	;# 
  2484  0893                     	;# 
  2485  0895                     	;# 
  2486  0896                     	;# 
  2487  090C                     	;# 
  2488  090E                     	;# 
  2489  090F                     	;# 
  2490  091F                     	;# 
  2491  098F                     	;# 
  2492  098F                     	;# 
  2493  0990                     	;# 
  2494  0991                     	;# 
  2495  0992                     	;# 
  2496  0993                     	;# 
  2497  0994                     	;# 
  2498  0995                     	;# 
  2499  0996                     	;# 
  2500  0997                     	;# 
  2501  0A19                     	;# 
  2502  0A19                     	;# 
  2503  0A1A                     	;# 
  2504  0A1A                     	;# 
  2505  0A1B                     	;# 
  2506  0A1B                     	;# 
  2507  0A1B                     	;# 
  2508  0A1C                     	;# 
  2509  0A1C                     	;# 
  2510  0A1D                     	;# 
  2511  0A1D                     	;# 
  2512  0A1E                     	;# 
  2513  0A1E                     	;# 
  2514  0A1F                     	;# 
  2515  0A1F                     	;# 
  2516  0A1F                     	;# 
  2517  1E0F                     	;# 
  2518  1E10                     	;# 
  2519  1E11                     	;# 
  2520  1E12                     	;# 
  2521  1E13                     	;# 
  2522  1E14                     	;# 
  2523  1E15                     	;# 
  2524  1E16                     	;# 
  2525  1E17                     	;# 
  2526  1E18                     	;# 
  2527  1E19                     	;# 
  2528  1E1A                     	;# 
  2529  1E1B                     	;# 
  2530  1E1C                     	;# 
  2531  1E1D                     	;# 
  2532  1E1E                     	;# 
  2533  1E1F                     	;# 
  2534  1E20                     	;# 
  2535  1E21                     	;# 
  2536  1E22                     	;# 
  2537  1E23                     	;# 
  2538  1E24                     	;# 
  2539  1E25                     	;# 
  2540  1E26                     	;# 
  2541  1E27                     	;# 
  2542  1E28                     	;# 
  2543  1E29                     	;# 
  2544  1E2A                     	;# 
  2545  1E2B                     	;# 
  2546  1E2C                     	;# 
  2547  1E2D                     	;# 
  2548  1E2E                     	;# 
  2549  1E2F                     	;# 
  2550  1E30                     	;# 
  2551  1E31                     	;# 
  2552  1E32                     	;# 
  2553  1E33                     	;# 
  2554  1E34                     	;# 
  2555  1E35                     	;# 
  2556  1E36                     	;# 
  2557  1E37                     	;# 
  2558  1E8F                     	;# 
  2559  1E90                     	;# 
  2560  1E91                     	;# 
  2561  1E92                     	;# 
  2562  1E93                     	;# 
  2563  1E9C                     	;# 
  2564  1EA1                     	;# 
  2565  1EA2                     	;# 
  2566  1EB1                     	;# 
  2567  1EBB                     	;# 
  2568  1EBC                     	;# 
  2569  1EBD                     	;# 
  2570  1EBE                     	;# 
  2571  1EC3                     	;# 
  2572  1EC5                     	;# 
  2573  1EC6                     	;# 
  2574  1EC7                     	;# 
  2575  1ECB                     	;# 
  2576  1ECC                     	;# 
  2577  1ECD                     	;# 
  2578  1ECE                     	;# 
  2579  1F10                     	;# 
  2580  1F11                     	;# 
  2581  1F12                     	;# 
  2582  1F13                     	;# 
  2583  1F14                     	;# 
  2584  1F15                     	;# 
  2585  1F1C                     	;# 
  2586  1F1D                     	;# 
  2587  1F1E                     	;# 
  2588  1F1F                     	;# 
  2589  1F20                     	;# 
  2590  1F21                     	;# 
  2591  1F22                     	;# 
  2592  1F23                     	;# 
  2593  1F24                     	;# 
  2594  1F25                     	;# 
  2595  1F26                     	;# 
  2596  1F27                     	;# 
  2597  1F38                     	;# 
  2598  1F39                     	;# 
  2599  1F3A                     	;# 
  2600  1F3B                     	;# 
  2601  1F3C                     	;# 
  2602  1F3D                     	;# 
  2603  1F3E                     	;# 
  2604  1F3F                     	;# 
  2605  1F43                     	;# 
  2606  1F44                     	;# 
  2607  1F45                     	;# 
  2608  1F46                     	;# 
  2609  1F47                     	;# 
  2610  1F48                     	;# 
  2611  1F49                     	;# 
  2612  1F4A                     	;# 
  2613  1F4E                     	;# 
  2614  1F4F                     	;# 
  2615  1F50                     	;# 
  2616  1F51                     	;# 
  2617  1F52                     	;# 
  2618  1F53                     	;# 
  2619  1F54                     	;# 
  2620  1F55                     	;# 
  2621  1FE4                     	;# 
  2622  1FE5                     	;# 
  2623  1FE6                     	;# 
  2624  1FE7                     	;# 
  2625  1FE8                     	;# 
  2626  1FE8                     	;# 
  2627  1FE9                     	;# 
  2628  1FEA                     	;# 
  2629  1FEA                     	;# 
  2630  1FEB                     	;# 
  2631  1FED                     	;# 
  2632  1FEE                     	;# 
  2633  1FEF                     	;# 
  2634  0000                     	;# 
  2635  0001                     	;# 
  2636  0002                     	;# 
  2637  0003                     	;# 
  2638  0004                     	;# 
  2639  0005                     	;# 
  2640  0006                     	;# 
  2641  0007                     	;# 
  2642  0008                     	;# 
  2643  0009                     	;# 
  2644  000A                     	;# 
  2645  000B                     	;# 
  2646  000C                     	;# 
  2647  000D                     	;# 
  2648  000E                     	;# 
  2649  0012                     	;# 
  2650  0013                     	;# 
  2651  0014                     	;# 
  2652  0018                     	;# 
  2653  0019                     	;# 
  2654  001A                     	;# 
  2655  009B                     	;# 
  2656  009B                     	;# 
  2657  009C                     	;# 
  2658  009D                     	;# 
  2659  009E                     	;# 
  2660  009F                     	;# 
  2661  0119                     	;# 
  2662  0119                     	;# 
  2663  0119                     	;# 
  2664  011A                     	;# 
  2665  011A                     	;# 
  2666  011A                     	;# 
  2667  011B                     	;# 
  2668  011B                     	;# 
  2669  011B                     	;# 
  2670  011B                     	;# 
  2671  011B                     	;# 
  2672  011C                     	;# 
  2673  011C                     	;# 
  2674  011C                     	;# 
  2675  011D                     	;# 
  2676  011D                     	;# 
  2677  011D                     	;# 
  2678  011E                     	;# 
  2679  011E                     	;# 
  2680  011E                     	;# 
  2681  011F                     	;# 
  2682  011F                     	;# 
  2683  011F                     	;# 
  2684  011F                     	;# 
  2685  011F                     	;# 
  2686  018C                     	;# 
  2687  018D                     	;# 
  2688  018E                     	;# 
  2689  018F                     	;# 
  2690  0190                     	;# 
  2691  0191                     	;# 
  2692  0192                     	;# 
  2693  020C                     	;# 
  2694  020C                     	;# 
  2695  020D                     	;# 
  2696  020E                     	;# 
  2697  020F                     	;# 
  2698  020F                     	;# 
  2699  0210                     	;# 
  2700  0210                     	;# 
  2701  0211                     	;# 
  2702  0211                     	;# 
  2703  028C                     	;# 
  2704  028C                     	;# 
  2705  028D                     	;# 
  2706  028D                     	;# 
  2707  028E                     	;# 
  2708  028F                     	;# 
  2709  0290                     	;# 
  2710  0291                     	;# 
  2711  030C                     	;# 
  2712  030C                     	;# 
  2713  030D                     	;# 
  2714  030E                     	;# 
  2715  030F                     	;# 
  2716  0310                     	;# 
  2717  0310                     	;# 
  2718  0311                     	;# 
  2719  0312                     	;# 
  2720  0313                     	;# 
  2721  0314                     	;# 
  2722  0315                     	;# 
  2723  0316                     	;# 
  2724  0318                     	;# 
  2725  0319                     	;# 
  2726  031A                     	;# 
  2727  031C                     	;# 
  2728  031D                     	;# 
  2729  031E                     	;# 
  2730  038C                     	;# 
  2731  038D                     	;# 
  2732  038E                     	;# 
  2733  058C                     	;# 
  2734  058C                     	;# 
  2735  058D                     	;# 
  2736  058E                     	;# 
  2737  058F                     	;# 
  2738  058F                     	;# 
  2739  0590                     	;# 
  2740  0591                     	;# 
  2741  0592                     	;# 
  2742  0593                     	;# 
  2743  059C                     	;# 
  2744  059C                     	;# 
  2745  059D                     	;# 
  2746  059D                     	;# 
  2747  059E                     	;# 
  2748  059F                     	;# 
  2749  060C                     	;# 
  2750  060D                     	;# 
  2751  060E                     	;# 
  2752  060F                     	;# 
  2753  0610                     	;# 
  2754  0611                     	;# 
  2755  0612                     	;# 
  2756  0613                     	;# 
  2757  0614                     	;# 
  2758  070C                     	;# 
  2759  070D                     	;# 
  2760  070E                     	;# 
  2761  070F                     	;# 
  2762  0710                     	;# 
  2763  0711                     	;# 
  2764  0712                     	;# 
  2765  0713                     	;# 
  2766  0716                     	;# 
  2767  0717                     	;# 
  2768  0718                     	;# 
  2769  0719                     	;# 
  2770  071A                     	;# 
  2771  071B                     	;# 
  2772  071C                     	;# 
  2773  071D                     	;# 
  2774  0796                     	;# 
  2775  0797                     	;# 
  2776  0798                     	;# 
  2777  0799                     	;# 
  2778  079A                     	;# 
  2779  079B                     	;# 
  2780  080C                     	;# 
  2781  080D                     	;# 
  2782  080E                     	;# 
  2783  080F                     	;# 
  2784  0810                     	;# 
  2785  0811                     	;# 
  2786  0813                     	;# 
  2787  0814                     	;# 
  2788  081A                     	;# 
  2789  081A                     	;# 
  2790  081B                     	;# 
  2791  081C                     	;# 
  2792  081C                     	;# 
  2793  081D                     	;# 
  2794  081E                     	;# 
  2795  081F                     	;# 
  2796  088C                     	;# 
  2797  088D                     	;# 
  2798  088E                     	;# 
  2799  088F                     	;# 
  2800  0890                     	;# 
  2801  0891                     	;# 
  2802  0892                     	;# 
  2803  0893                     	;# 
  2804  0895                     	;# 
  2805  0896                     	;# 
  2806  090C                     	;# 
  2807  090E                     	;# 
  2808  090F                     	;# 
  2809  091F                     	;# 
  2810  098F                     	;# 
  2811  098F                     	;# 
  2812  0990                     	;# 
  2813  0991                     	;# 
  2814  0992                     	;# 
  2815  0993                     	;# 
  2816  0994                     	;# 
  2817  0995                     	;# 
  2818  0996                     	;# 
  2819  0997                     	;# 
  2820  0A19                     	;# 
  2821  0A19                     	;# 
  2822  0A1A                     	;# 
  2823  0A1A                     	;# 
  2824  0A1B                     	;# 
  2825  0A1B                     	;# 
  2826  0A1B                     	;# 
  2827  0A1C                     	;# 
  2828  0A1C                     	;# 
  2829  0A1D                     	;# 
  2830  0A1D                     	;# 
  2831  0A1E                     	;# 
  2832  0A1E                     	;# 
  2833  0A1F                     	;# 
  2834  0A1F                     	;# 
  2835  0A1F                     	;# 
  2836  1E0F                     	;# 
  2837  1E10                     	;# 
  2838  1E11                     	;# 
  2839  1E12                     	;# 
  2840  1E13                     	;# 
  2841  1E14                     	;# 
  2842  1E15                     	;# 
  2843  1E16                     	;# 
  2844  1E17                     	;# 
  2845  1E18                     	;# 
  2846  1E19                     	;# 
  2847  1E1A                     	;# 
  2848  1E1B                     	;# 
  2849  1E1C                     	;# 
  2850  1E1D                     	;# 
  2851  1E1E                     	;# 
  2852  1E1F                     	;# 
  2853  1E20                     	;# 
  2854  1E21                     	;# 
  2855  1E22                     	;# 
  2856  1E23                     	;# 
  2857  1E24                     	;# 
  2858  1E25                     	;# 
  2859  1E26                     	;# 
  2860  1E27                     	;# 
  2861  1E28                     	;# 
  2862  1E29                     	;# 
  2863  1E2A                     	;# 
  2864  1E2B                     	;# 
  2865  1E2C                     	;# 
  2866  1E2D                     	;# 
  2867  1E2E                     	;# 
  2868  1E2F                     	;# 
  2869  1E30                     	;# 
  2870  1E31                     	;# 
  2871  1E32                     	;# 
  2872  1E33                     	;# 
  2873  1E34                     	;# 
  2874  1E35                     	;# 
  2875  1E36                     	;# 
  2876  1E37                     	;# 
  2877  1E8F                     	;# 
  2878  1E90                     	;# 
  2879  1E91                     	;# 
  2880  1E92                     	;# 
  2881  1E93                     	;# 
  2882  1E9C                     	;# 
  2883  1EA1                     	;# 
  2884  1EA2                     	;# 
  2885  1EB1                     	;# 
  2886  1EBB                     	;# 
  2887  1EBC                     	;# 
  2888  1EBD                     	;# 
  2889  1EBE                     	;# 
  2890  1EC3                     	;# 
  2891  1EC5                     	;# 
  2892  1EC6                     	;# 
  2893  1EC7                     	;# 
  2894  1ECB                     	;# 
  2895  1ECC                     	;# 
  2896  1ECD                     	;# 
  2897  1ECE                     	;# 
  2898  1F10                     	;# 
  2899  1F11                     	;# 
  2900  1F12                     	;# 
  2901  1F13                     	;# 
  2902  1F14                     	;# 
  2903  1F15                     	;# 
  2904  1F1C                     	;# 
  2905  1F1D                     	;# 
  2906  1F1E                     	;# 
  2907  1F1F                     	;# 
  2908  1F20                     	;# 
  2909  1F21                     	;# 
  2910  1F22                     	;# 
  2911  1F23                     	;# 
  2912  1F24                     	;# 
  2913  1F25                     	;# 
  2914  1F26                     	;# 
  2915  1F27                     	;# 
  2916  1F38                     	;# 
  2917  1F39                     	;# 
  2918  1F3A                     	;# 
  2919  1F3B                     	;# 
  2920  1F3C                     	;# 
  2921  1F3D                     	;# 
  2922  1F3E                     	;# 
  2923  1F3F                     	;# 
  2924  1F43                     	;# 
  2925  1F44                     	;# 
  2926  1F45                     	;# 
  2927  1F46                     	;# 
  2928  1F47                     	;# 
  2929  1F48                     	;# 
  2930  1F49                     	;# 
  2931  1F4A                     	;# 
  2932  1F4E                     	;# 
  2933  1F4F                     	;# 
  2934  1F50                     	;# 
  2935  1F51                     	;# 
  2936  1F52                     	;# 
  2937  1F53                     	;# 
  2938  1F54                     	;# 
  2939  1F55                     	;# 
  2940  1FE4                     	;# 
  2941  1FE5                     	;# 
  2942  1FE6                     	;# 
  2943  1FE7                     	;# 
  2944  1FE8                     	;# 
  2945  1FE8                     	;# 
  2946  1FE9                     	;# 
  2947  1FEA                     	;# 
  2948  1FEA                     	;# 
  2949  1FEB                     	;# 
  2950  1FED                     	;# 
  2951  1FEE                     	;# 
  2952  1FEF                     	;# 
  2953  0000                     	;# 
  2954  0001                     	;# 
  2955  0002                     	;# 
  2956  0003                     	;# 
  2957  0004                     	;# 
  2958  0005                     	;# 
  2959  0006                     	;# 
  2960  0007                     	;# 
  2961  0008                     	;# 
  2962  0009                     	;# 
  2963  000A                     	;# 
  2964  000B                     	;# 
  2965  000C                     	;# 
  2966  000D                     	;# 
  2967  000E                     	;# 
  2968  0012                     	;# 
  2969  0013                     	;# 
  2970  0014                     	;# 
  2971  0018                     	;# 
  2972  0019                     	;# 
  2973  001A                     	;# 
  2974  009B                     	;# 
  2975  009B                     	;# 
  2976  009C                     	;# 
  2977  009D                     	;# 
  2978  009E                     	;# 
  2979  009F                     	;# 
  2980  0119                     	;# 
  2981  0119                     	;# 
  2982  0119                     	;# 
  2983  011A                     	;# 
  2984  011A                     	;# 
  2985  011A                     	;# 
  2986  011B                     	;# 
  2987  011B                     	;# 
  2988  011B                     	;# 
  2989  011B                     	;# 
  2990  011B                     	;# 
  2991  011C                     	;# 
  2992  011C                     	;# 
  2993  011C                     	;# 
  2994  011D                     	;# 
  2995  011D                     	;# 
  2996  011D                     	;# 
  2997  011E                     	;# 
  2998  011E                     	;# 
  2999  011E                     	;# 
  3000  011F                     	;# 
  3001  011F                     	;# 
  3002  011F                     	;# 
  3003  011F                     	;# 
  3004  011F                     	;# 
  3005  018C                     	;# 
  3006  018D                     	;# 
  3007  018E                     	;# 
  3008  018F                     	;# 
  3009  0190                     	;# 
  3010  0191                     	;# 
  3011  0192                     	;# 
  3012  020C                     	;# 
  3013  020C                     	;# 
  3014  020D                     	;# 
  3015  020E                     	;# 
  3016  020F                     	;# 
  3017  020F                     	;# 
  3018  0210                     	;# 
  3019  0210                     	;# 
  3020  0211                     	;# 
  3021  0211                     	;# 
  3022  028C                     	;# 
  3023  028C                     	;# 
  3024  028D                     	;# 
  3025  028D                     	;# 
  3026  028E                     	;# 
  3027  028F                     	;# 
  3028  0290                     	;# 
  3029  0291                     	;# 
  3030  030C                     	;# 
  3031  030C                     	;# 
  3032  030D                     	;# 
  3033  030E                     	;# 
  3034  030F                     	;# 
  3035  0310                     	;# 
  3036  0310                     	;# 
  3037  0311                     	;# 
  3038  0312                     	;# 
  3039  0313                     	;# 
  3040  0314                     	;# 
  3041  0315                     	;# 
  3042  0316                     	;# 
  3043  0318                     	;# 
  3044  0319                     	;# 
  3045  031A                     	;# 
  3046  031C                     	;# 
  3047  031D                     	;# 
  3048  031E                     	;# 
  3049  038C                     	;# 
  3050  038D                     	;# 
  3051  038E                     	;# 
  3052  058C                     	;# 
  3053  058C                     	;# 
  3054  058D                     	;# 
  3055  058E                     	;# 
  3056  058F                     	;# 
  3057  058F                     	;# 
  3058  0590                     	;# 
  3059  0591                     	;# 
  3060  0592                     	;# 
  3061  0593                     	;# 
  3062  059C                     	;# 
  3063  059C                     	;# 
  3064  059D                     	;# 
  3065  059D                     	;# 
  3066  059E                     	;# 
  3067  059F                     	;# 
  3068  060C                     	;# 
  3069  060D                     	;# 
  3070  060E                     	;# 
  3071  060F                     	;# 
  3072  0610                     	;# 
  3073  0611                     	;# 
  3074  0612                     	;# 
  3075  0613                     	;# 
  3076  0614                     	;# 
  3077  070C                     	;# 
  3078  070D                     	;# 
  3079  070E                     	;# 
  3080  070F                     	;# 
  3081  0710                     	;# 
  3082  0711                     	;# 
  3083  0712                     	;# 
  3084  0713                     	;# 
  3085  0716                     	;# 
  3086  0717                     	;# 
  3087  0718                     	;# 
  3088  0719                     	;# 
  3089  071A                     	;# 
  3090  071B                     	;# 
  3091  071C                     	;# 
  3092  071D                     	;# 
  3093  0796                     	;# 
  3094  0797                     	;# 
  3095  0798                     	;# 
  3096  0799                     	;# 
  3097  079A                     	;# 
  3098  079B                     	;# 
  3099  080C                     	;# 
  3100  080D                     	;# 
  3101  080E                     	;# 
  3102  080F                     	;# 
  3103  0810                     	;# 
  3104  0811                     	;# 
  3105  0813                     	;# 
  3106  0814                     	;# 
  3107  081A                     	;# 
  3108  081A                     	;# 
  3109  081B                     	;# 
  3110  081C                     	;# 
  3111  081C                     	;# 
  3112  081D                     	;# 
  3113  081E                     	;# 
  3114  081F                     	;# 
  3115  088C                     	;# 
  3116  088D                     	;# 
  3117  088E                     	;# 
  3118  088F                     	;# 
  3119  0890                     	;# 
  3120  0891                     	;# 
  3121  0892                     	;# 
  3122  0893                     	;# 
  3123  0895                     	;# 
  3124  0896                     	;# 
  3125  090C                     	;# 
  3126  090E                     	;# 
  3127  090F                     	;# 
  3128  091F                     	;# 
  3129  098F                     	;# 
  3130  098F                     	;# 
  3131  0990                     	;# 
  3132  0991                     	;# 
  3133  0992                     	;# 
  3134  0993                     	;# 
  3135  0994                     	;# 
  3136  0995                     	;# 
  3137  0996                     	;# 
  3138  0997                     	;# 
  3139  0A19                     	;# 
  3140  0A19                     	;# 
  3141  0A1A                     	;# 
  3142  0A1A                     	;# 
  3143  0A1B                     	;# 
  3144  0A1B                     	;# 
  3145  0A1B                     	;# 
  3146  0A1C                     	;# 
  3147  0A1C                     	;# 
  3148  0A1D                     	;# 
  3149  0A1D                     	;# 
  3150  0A1E                     	;# 
  3151  0A1E                     	;# 
  3152  0A1F                     	;# 
  3153  0A1F                     	;# 
  3154  0A1F                     	;# 
  3155  1E0F                     	;# 
  3156  1E10                     	;# 
  3157  1E11                     	;# 
  3158  1E12                     	;# 
  3159  1E13                     	;# 
  3160  1E14                     	;# 
  3161  1E15                     	;# 
  3162  1E16                     	;# 
  3163  1E17                     	;# 
  3164  1E18                     	;# 
  3165  1E19                     	;# 
  3166  1E1A                     	;# 
  3167  1E1B                     	;# 
  3168  1E1C                     	;# 
  3169  1E1D                     	;# 
  3170  1E1E                     	;# 
  3171  1E1F                     	;# 
  3172  1E20                     	;# 
  3173  1E21                     	;# 
  3174  1E22                     	;# 
  3175  1E23                     	;# 
  3176  1E24                     	;# 
  3177  1E25                     	;# 
  3178  1E26                     	;# 
  3179  1E27                     	;# 
  3180  1E28                     	;# 
  3181  1E29                     	;# 
  3182  1E2A                     	;# 
  3183  1E2B                     	;# 
  3184  1E2C                     	;# 
  3185  1E2D                     	;# 
  3186  1E2E                     	;# 
  3187  1E2F                     	;# 
  3188  1E30                     	;# 
  3189  1E31                     	;# 
  3190  1E32                     	;# 
  3191  1E33                     	;# 
  3192  1E34                     	;# 
  3193  1E35                     	;# 
  3194  1E36                     	;# 
  3195  1E37                     	;# 
  3196  1E8F                     	;# 
  3197  1E90                     	;# 
  3198  1E91                     	;# 
  3199  1E92                     	;# 
  3200  1E93                     	;# 
  3201  1E9C                     	;# 
  3202  1EA1                     	;# 
  3203  1EA2                     	;# 
  3204  1EB1                     	;# 
  3205  1EBB                     	;# 
  3206  1EBC                     	;# 
  3207  1EBD                     	;# 
  3208  1EBE                     	;# 
  3209  1EC3                     	;# 
  3210  1EC5                     	;# 
  3211  1EC6                     	;# 
  3212  1EC7                     	;# 
  3213  1ECB                     	;# 
  3214  1ECC                     	;# 
  3215  1ECD                     	;# 
  3216  1ECE                     	;# 
  3217  1F10                     	;# 
  3218  1F11                     	;# 
  3219  1F12                     	;# 
  3220  1F13                     	;# 
  3221  1F14                     	;# 
  3222  1F15                     	;# 
  3223  1F1C                     	;# 
  3224  1F1D                     	;# 
  3225  1F1E                     	;# 
  3226  1F1F                     	;# 
  3227  1F20                     	;# 
  3228  1F21                     	;# 
  3229  1F22                     	;# 
  3230  1F23                     	;# 
  3231  1F24                     	;# 
  3232  1F25                     	;# 
  3233  1F26                     	;# 
  3234  1F27                     	;# 
  3235  1F38                     	;# 
  3236  1F39                     	;# 
  3237  1F3A                     	;# 
  3238  1F3B                     	;# 
  3239  1F3C                     	;# 
  3240  1F3D                     	;# 
  3241  1F3E                     	;# 
  3242  1F3F                     	;# 
  3243  1F43                     	;# 
  3244  1F44                     	;# 
  3245  1F45                     	;# 
  3246  1F46                     	;# 
  3247  1F47                     	;# 
  3248  1F48                     	;# 
  3249  1F49                     	;# 
  3250  1F4A                     	;# 
  3251  1F4E                     	;# 
  3252  1F4F                     	;# 
  3253  1F50                     	;# 
  3254  1F51                     	;# 
  3255  1F52                     	;# 
  3256  1F53                     	;# 
  3257  1F54                     	;# 
  3258  1F55                     	;# 
  3259  1FE4                     	;# 
  3260  1FE5                     	;# 
  3261  1FE6                     	;# 
  3262  1FE7                     	;# 
  3263  1FE8                     	;# 
  3264  1FE8                     	;# 
  3265  1FE9                     	;# 
  3266  1FEA                     	;# 
  3267  1FEA                     	;# 
  3268  1FEB                     	;# 
  3269  1FED                     	;# 
  3270  1FEE                     	;# 
  3271  1FEF                     	;# 
  3272  0000                     	;# 
  3273  0001                     	;# 
  3274  0002                     	;# 
  3275  0003                     	;# 
  3276  0004                     	;# 
  3277  0005                     	;# 
  3278  0006                     	;# 
  3279  0007                     	;# 
  3280  0008                     	;# 
  3281  0009                     	;# 
  3282  000A                     	;# 
  3283  000B                     	;# 
  3284  000C                     	;# 
  3285  000D                     	;# 
  3286  000E                     	;# 
  3287  0012                     	;# 
  3288  0013                     	;# 
  3289  0014                     	;# 
  3290  0018                     	;# 
  3291  0019                     	;# 
  3292  001A                     	;# 
  3293  009B                     	;# 
  3294  009B                     	;# 
  3295  009C                     	;# 
  3296  009D                     	;# 
  3297  009E                     	;# 
  3298  009F                     	;# 
  3299  0119                     	;# 
  3300  0119                     	;# 
  3301  0119                     	;# 
  3302  011A                     	;# 
  3303  011A                     	;# 
  3304  011A                     	;# 
  3305  011B                     	;# 
  3306  011B                     	;# 
  3307  011B                     	;# 
  3308  011B                     	;# 
  3309  011B                     	;# 
  3310  011C                     	;# 
  3311  011C                     	;# 
  3312  011C                     	;# 
  3313  011D                     	;# 
  3314  011D                     	;# 
  3315  011D                     	;# 
  3316  011E                     	;# 
  3317  011E                     	;# 
  3318  011E                     	;# 
  3319  011F                     	;# 
  3320  011F                     	;# 
  3321  011F                     	;# 
  3322  011F                     	;# 
  3323  011F                     	;# 
  3324  018C                     	;# 
  3325  018D                     	;# 
  3326  018E                     	;# 
  3327  018F                     	;# 
  3328  0190                     	;# 
  3329  0191                     	;# 
  3330  0192                     	;# 
  3331  020C                     	;# 
  3332  020C                     	;# 
  3333  020D                     	;# 
  3334  020E                     	;# 
  3335  020F                     	;# 
  3336  020F                     	;# 
  3337  0210                     	;# 
  3338  0210                     	;# 
  3339  0211                     	;# 
  3340  0211                     	;# 
  3341  028C                     	;# 
  3342  028C                     	;# 
  3343  028D                     	;# 
  3344  028D                     	;# 
  3345  028E                     	;# 
  3346  028F                     	;# 
  3347  0290                     	;# 
  3348  0291                     	;# 
  3349  030C                     	;# 
  3350  030C                     	;# 
  3351  030D                     	;# 
  3352  030E                     	;# 
  3353  030F                     	;# 
  3354  0310                     	;# 
  3355  0310                     	;# 
  3356  0311                     	;# 
  3357  0312                     	;# 
  3358  0313                     	;# 
  3359  0314                     	;# 
  3360  0315                     	;# 
  3361  0316                     	;# 
  3362  0318                     	;# 
  3363  0319                     	;# 
  3364  031A                     	;# 
  3365  031C                     	;# 
  3366  031D                     	;# 
  3367  031E                     	;# 
  3368  038C                     	;# 
  3369  038D                     	;# 
  3370  038E                     	;# 
  3371  058C                     	;# 
  3372  058C                     	;# 
  3373  058D                     	;# 
  3374  058E                     	;# 
  3375  058F                     	;# 
  3376  058F                     	;# 
  3377  0590                     	;# 
  3378  0591                     	;# 
  3379  0592                     	;# 
  3380  0593                     	;# 
  3381  059C                     	;# 
  3382  059C                     	;# 
  3383  059D                     	;# 
  3384  059D                     	;# 
  3385  059E                     	;# 
  3386  059F                     	;# 
  3387  060C                     	;# 
  3388  060D                     	;# 
  3389  060E                     	;# 
  3390  060F                     	;# 
  3391  0610                     	;# 
  3392  0611                     	;# 
  3393  0612                     	;# 
  3394  0613                     	;# 
  3395  0614                     	;# 
  3396  070C                     	;# 
  3397  070D                     	;# 
  3398  070E                     	;# 
  3399  070F                     	;# 
  3400  0710                     	;# 
  3401  0711                     	;# 
  3402  0712                     	;# 
  3403  0713                     	;# 
  3404  0716                     	;# 
  3405  0717                     	;# 
  3406  0718                     	;# 
  3407  0719                     	;# 
  3408  071A                     	;# 
  3409  071B                     	;# 
  3410  071C                     	;# 
  3411  071D                     	;# 
  3412  0796                     	;# 
  3413  0797                     	;# 
  3414  0798                     	;# 
  3415  0799                     	;# 
  3416  079A                     	;# 
  3417  079B                     	;# 
  3418  080C                     	;# 
  3419  080D                     	;# 
  3420  080E                     	;# 
  3421  080F                     	;# 
  3422  0810                     	;# 
  3423  0811                     	;# 
  3424  0813                     	;# 
  3425  0814                     	;# 
  3426  081A                     	;# 
  3427  081A                     	;# 
  3428  081B                     	;# 
  3429  081C                     	;# 
  3430  081C                     	;# 
  3431  081D                     	;# 
  3432  081E                     	;# 
  3433  081F                     	;# 
  3434  088C                     	;# 
  3435  088D                     	;# 
  3436  088E                     	;# 
  3437  088F                     	;# 
  3438  0890                     	;# 
  3439  0891                     	;# 
  3440  0892                     	;# 
  3441  0893                     	;# 
  3442  0895                     	;# 
  3443  0896                     	;# 
  3444  090C                     	;# 
  3445  090E                     	;# 
  3446  090F                     	;# 
  3447  091F                     	;# 
  3448  098F                     	;# 
  3449  098F                     	;# 
  3450  0990                     	;# 
  3451  0991                     	;# 
  3452  0992                     	;# 
  3453  0993                     	;# 
  3454  0994                     	;# 
  3455  0995                     	;# 
  3456  0996                     	;# 
  3457  0997                     	;# 
  3458  0A19                     	;# 
  3459  0A19                     	;# 
  3460  0A1A                     	;# 
  3461  0A1A                     	;# 
  3462  0A1B                     	;# 
  3463  0A1B                     	;# 
  3464  0A1B                     	;# 
  3465  0A1C                     	;# 
  3466  0A1C                     	;# 
  3467  0A1D                     	;# 
  3468  0A1D                     	;# 
  3469  0A1E                     	;# 
  3470  0A1E                     	;# 
  3471  0A1F                     	;# 
  3472  0A1F                     	;# 
  3473  0A1F                     	;# 
  3474  1E0F                     	;# 
  3475  1E10                     	;# 
  3476  1E11                     	;# 
  3477  1E12                     	;# 
  3478  1E13                     	;# 
  3479  1E14                     	;# 
  3480  1E15                     	;# 
  3481  1E16                     	;# 
  3482  1E17                     	;# 
  3483  1E18                     	;# 
  3484  1E19                     	;# 
  3485  1E1A                     	;# 
  3486  1E1B                     	;# 
  3487  1E1C                     	;# 
  3488  1E1D                     	;# 
  3489  1E1E                     	;# 
  3490  1E1F                     	;# 
  3491  1E20                     	;# 
  3492  1E21                     	;# 
  3493  1E22                     	;# 
  3494  1E23                     	;# 
  3495  1E24                     	;# 
  3496  1E25                     	;# 
  3497  1E26                     	;# 
  3498  1E27                     	;# 
  3499  1E28                     	;# 
  3500  1E29                     	;# 
  3501  1E2A                     	;# 
  3502  1E2B                     	;# 
  3503  1E2C                     	;# 
  3504  1E2D                     	;# 
  3505  1E2E                     	;# 
  3506  1E2F                     	;# 
  3507  1E30                     	;# 
  3508  1E31                     	;# 
  3509  1E32                     	;# 
  3510  1E33                     	;# 
  3511  1E34                     	;# 
  3512  1E35                     	;# 
  3513  1E36                     	;# 
  3514  1E37                     	;# 
  3515  1E8F                     	;# 
  3516  1E90                     	;# 
  3517  1E91                     	;# 
  3518  1E92                     	;# 
  3519  1E93                     	;# 
  3520  1E9C                     	;# 
  3521  1EA1                     	;# 
  3522  1EA2                     	;# 
  3523  1EB1                     	;# 
  3524  1EBB                     	;# 
  3525  1EBC                     	;# 
  3526  1EBD                     	;# 
  3527  1EBE                     	;# 
  3528  1EC3                     	;# 
  3529  1EC5                     	;# 
  3530  1EC6                     	;# 
  3531  1EC7                     	;# 
  3532  1ECB                     	;# 
  3533  1ECC                     	;# 
  3534  1ECD                     	;# 
  3535  1ECE                     	;# 
  3536  1F10                     	;# 
  3537  1F11                     	;# 
  3538  1F12                     	;# 
  3539  1F13                     	;# 
  3540  1F14                     	;# 
  3541  1F15                     	;# 
  3542  1F1C                     	;# 
  3543  1F1D                     	;# 
  3544  1F1E                     	;# 
  3545  1F1F                     	;# 
  3546  1F20                     	;# 
  3547  1F21                     	;# 
  3548  1F22                     	;# 
  3549  1F23                     	;# 
  3550  1F24                     	;# 
  3551  1F25                     	;# 
  3552  1F26                     	;# 
  3553  1F27                     	;# 
  3554  1F38                     	;# 
  3555  1F39                     	;# 
  3556  1F3A                     	;# 
  3557  1F3B                     	;# 
  3558  1F3C                     	;# 
  3559  1F3D                     	;# 
  3560  1F3E                     	;# 
  3561  1F3F                     	;# 
  3562  1F43                     	;# 
  3563  1F44                     	;# 
  3564  1F45                     	;# 
  3565  1F46                     	;# 
  3566  1F47                     	;# 
  3567  1F48                     	;# 
  3568  1F49                     	;# 
  3569  1F4A                     	;# 
  3570  1F4E                     	;# 
  3571  1F4F                     	;# 
  3572  1F50                     	;# 
  3573  1F51                     	;# 
  3574  1F52                     	;# 
  3575  1F53                     	;# 
  3576  1F54                     	;# 
  3577  1F55                     	;# 
  3578  1FE4                     	;# 
  3579  1FE5                     	;# 
  3580  1FE6                     	;# 
  3581  1FE7                     	;# 
  3582  1FE8                     	;# 
  3583  1FE8                     	;# 
  3584  1FE9                     	;# 
  3585  1FEA                     	;# 
  3586  1FEA                     	;# 
  3587  1FEB                     	;# 
  3588  1FED                     	;# 
  3589  1FEE                     	;# 
  3590  1FEF                     	;# 
  3591                           
  3592                           	psect	nvBANK0
  3593  0060                     __pnvBANK0:	
  3594  0060                     _TMR0_InterruptHandler:	
  3595  0060                     	ds	2
  3596  0062                     _INT_InterruptHandler:	
  3597  0062                     	ds	2
  3598  0064                     _eusart2TxBufferRemaining:	
  3599  0064                     	ds	1
  3600  000D                     _PORTBbits	set	13
  3601  000E                     _PORTCbits	set	14
  3602  001A                     _LATCbits	set	26
  3603  0019                     _LATBbits	set	25
  3604  0018                     _LATAbits	set	24
  3605  000B                     _INTCONbits	set	11
  3606  0014                     _TRISC	set	20
  3607  0013                     _TRISB	set	19
  3608  0012                     _TRISA	set	18
  3609  001A                     _LATC	set	26
  3610  0019                     _LATB	set	25
  3611  0018                     _LATA	set	24
  3612  009D                     _ADCON0bits	set	157
  3613  009C                     _ADRESH	set	156
  3614  009B                     _ADRESL	set	155
  3615  009E                     _ADCON1	set	158
  3616  009D                     _ADCON0	set	157
  3617  059E                     _T0CON0bits	set	1438
  3618  059E                     _T0CON0	set	1438
  3619  059C                     _TMR0L	set	1436
  3620  059D                     _TMR0H	set	1437
  3621  059F                     _T0CON1	set	1439
  3622  070F                     _PIR3bits	set	1807
  3623  0719                     _PIE3bits	set	1817
  3624  070C                     _PIR0bits	set	1804
  3625  0716                     _PIE0bits	set	1814
  3626  079B                     _PMD5	set	1947
  3627  079A                     _PMD4	set	1946
  3628  0799                     _PMD3	set	1945
  3629  0798                     _PMD2	set	1944
  3630  0797                     _PMD1	set	1943
  3631  0796                     _PMD0	set	1942
  3632  0892                     _OSCTUNE	set	2194
  3633  0890                     _OSCSTAT	set	2192
  3634  0893                     _OSCFRQ	set	2195
  3635  0891                     _OSCEN	set	2193
  3636  088F                     _OSCCON3	set	2191
  3637  088D                     _OSCCON1	set	2189
  3638  0A19                     _RC2REG	set	2585
  3639  0A1D                     _RC2STAbits	set	2589
  3640  0A1A                     _TX2REG	set	2586
  3641  0A1C                     _SP2BRGH	set	2588
  3642  0A1B                     _SP2BRGL	set	2587
  3643  0A1E                     _TX2STA	set	2590
  3644  0A1D                     _RC2STA	set	2589
  3645  0A1F                     _BAUD2CON	set	2591
  3646  1E90                     _INTPPSbits	set	7824
  3647  1ECD                     _RX2DTPPSbits	set	7885
  3648  1F20                     _RC0PPS	set	7968
  3649  1F50                     _ODCONC	set	8016
  3650  1F45                     _ODCONB	set	8005
  3651  1F3A                     _ODCONA	set	7994
  3652  1F4F                     _WPUC	set	8015
  3653  1F39                     _WPUA	set	7993
  3654  1F44                     _WPUB	set	8004
  3655  1F38                     _ANSELA	set	7992
  3656  1F43                     _ANSELB	set	8003
  3657  1F4E                     _ANSELC	set	8014
  3658                           
  3659                           ; #config settings
  3660  0000                     
  3661                           	psect	cinit
  3662  002D                     start_initialization:	
  3663  002D                     __initialization:	
  3664                           
  3665                           ; Clear objects allocated to COMMON
  3666  002D  01FA               	clrf	__pbssCOMMON& (0+127)
  3667  002E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3668  002F  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  3669  0030  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  3670                           
  3671                           ; Clear objects allocated to BANK0
  3672  0031  3020               	movlw	low __pbssBANK0
  3673  0032  0084               	movwf	4
  3674  0033  3000               	movlw	high __pbssBANK0
  3675  0034  0085               	movwf	5
  3676  0035  3039               	movlw	57
  3677  0036  3183  2361  3180   	fcall	clear_ram0
  3678                           
  3679                           ; Clear objects allocated to BANK1
  3680  0039  30A0               	movlw	low __pbssBANK1
  3681  003A  0084               	movwf	4
  3682  003B  3000               	movlw	high __pbssBANK1
  3683  003C  0085               	movwf	5
  3684  003D  3050               	movlw	80
  3685  003E  3183  2361         	fcall	clear_ram0
  3686  0040                     end_of_initialization:	
  3687                           ;End of C runtime variable initialization code
  3688                           
  3689  0040                     __end_of__initialization:	
  3690  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3691  0041  0140               	movlb	0
  3692  0042  3182  2AF3         	ljmp	_main	;jump to C main() function
  3693                           
  3694                           	psect	bssCOMMON
  3695  007A                     __pbssCOMMON:	
  3696  007A                     _eusart2RxTail:	
  3697  007A                     	ds	1
  3698  007B                     _eusart2RxHead:	
  3699  007B                     	ds	1
  3700  007C                     _eusart2TxTail:	
  3701  007C                     	ds	1
  3702  007D                     _eusart2TxHead:	
  3703  007D                     	ds	1
  3704                           
  3705                           	psect	bssBANK0
  3706  0020                     __pbssBANK0:	
  3707  0020                     _ADCval:	
  3708  0020                     	ds	7
  3709  0027                     TimeDelay_Tasks@prior_ticks_secure:	
  3710  0027                     	ds	2
  3711  0029                     _ticks:	
  3712  0029                     	ds	2
  3713  002B                     _eusart2RxCount:	
  3714  002B                     	ds	1
  3715  002C                     _Keyboard_Data:	
  3716  002C                     	ds	1
  3717  002D                     _TimeDelay_Data:	
  3718  002D                     	ds	1
  3719  002E                     _MB1040_Data:	
  3720  002E                     	ds	1
  3721  002F                     _delay_ESC:	
  3722  002F                     	ds	7
  3723  0036                     _delay_BC:	
  3724  0036                     	ds	7
  3725  003D                     _delay_BB:	
  3726  003D                     	ds	7
  3727  0044                     _delay_BA:	
  3728  0044                     	ds	7
  3729  004B                     _delay_F2:	
  3730  004B                     	ds	7
  3731  0052                     _delay_F1:	
  3732  0052                     	ds	7
  3733                           
  3734                           	psect	bssBANK1
  3735  00A0                     __pbssBANK1:	
  3736  00A0                     _eusart2RxBuffer:	
  3737  00A0                     	ds	64
  3738  00E0                     _eusart2TxBuffer:	
  3739  00E0                     	ds	16
  3740                           
  3741                           	psect	clrtext
  3742  0361                     clear_ram0:	
  3743                           ;	Called with FSR0 containing the base address, and
  3744                           ;	WREG with the size to clear
  3745                           
  3746  0361  0064               	clrwdt	;clear the watchdog before getting into this loop
  3747  0362                     clrloop0:	
  3748  0362  0180               	clrf	0	;clear RAM location pointed to by FSR
  3749  0363  3101               	addfsr 0,1
  3750  0364  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3751  0365  2B62               	goto	clrloop0	;have we reached the end yet?
  3752  0366  3400               	retlw	0	;all done for this memory range, return
  3753                           
  3754                           	psect	cstackCOMMON
  3755  0070                     __pcstackCOMMON:	
  3756  0070                     ?_PMD_Initialize:	
  3757  0070                     ?_PIN_MANAGER_Initialize:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0070                     ?_OSCILLATOR_Initialize:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0070                     ?_ADC_Initialize:	
  3764                           ; 1 bytes @ 0x0
  3765                           
  3766  0070                     ?_EXT_INT_Initialize:	
  3767                           ; 1 bytes @ 0x0
  3768                           
  3769  0070                     ?_TMR0_Initialize:	
  3770                           ; 1 bytes @ 0x0
  3771                           
  3772  0070                     ?_EUSART2_Initialize:	
  3773                           ; 1 bytes @ 0x0
  3774                           
  3775  0070                     ?_MB1040_Initialize:	
  3776                           ; 1 bytes @ 0x0
  3777                           
  3778  0070                     ?_INT_ISR:	
  3779                           ; 1 bytes @ 0x0
  3780                           
  3781  0070                     ?_TMR0_ISR:	
  3782                           ; 1 bytes @ 0x0
  3783                           
  3784  0070                     ??_TMR0_ISR:	
  3785                           ; 1 bytes @ 0x0
  3786                           
  3787  0070                     ?_EUSART2_Receive_ISR:	
  3788                           ; 1 bytes @ 0x0
  3789                           
  3790  0070                     ??_EUSART2_Receive_ISR:	
  3791                           ; 1 bytes @ 0x0
  3792                           
  3793  0070                     ?_EUSART2_Transmit_ISR:	
  3794                           ; 1 bytes @ 0x0
  3795                           
  3796  0070                     ??_EUSART2_Transmit_ISR:	
  3797                           ; 1 bytes @ 0x0
  3798                           
  3799  0070                     ?_INT_CallBack:	
  3800                           ; 1 bytes @ 0x0
  3801                           
  3802  0070                     ?_TMR0_DefaultInterruptHandler:	
  3803                           ; 1 bytes @ 0x0
  3804                           
  3805  0070                     ??_TMR0_DefaultInterruptHandler:	
  3806                           ; 1 bytes @ 0x0
  3807                           
  3808  0070                     ?_TMR0_CallBack:	
  3809                           ; 1 bytes @ 0x0
  3810                           
  3811  0070                     ??_TMR0_CallBack:	
  3812                           ; 1 bytes @ 0x0
  3813                           
  3814  0070                     ?_MB1040_Tasks:	
  3815                           ; 1 bytes @ 0x0
  3816                           
  3817  0070                     ?_TimeDelay_Tasks:	
  3818                           ; 1 bytes @ 0x0
  3819                           
  3820  0070                     ?_Keyboard_Tasks:	
  3821                           ; 1 bytes @ 0x0
  3822                           
  3823  0070                     ?_NonBlockingDelay:	
  3824                           ; 1 bytes @ 0x0
  3825                           
  3826  0070                     ?_TimeDelay_Reset:	
  3827                           ; 1 bytes @ 0x0
  3828                           
  3829  0070                     ?_Ticker_Handler:	
  3830                           ; 1 bytes @ 0x0
  3831                           
  3832  0070                     ??_Ticker_Handler:	
  3833                           ; 1 bytes @ 0x0
  3834                           
  3835  0070                     ?_SYSTEM_Initialize:	
  3836                           ; 1 bytes @ 0x0
  3837                           
  3838  0070                     ?_INTERRUPT_InterruptManager:	
  3839                           ; 1 bytes @ 0x0
  3840                           
  3841  0070                     ?_INT_DefaultInterruptHandler:	
  3842                           ; 1 bytes @ 0x0
  3843                           
  3844  0070                     ?_main:	
  3845                           ; 1 bytes @ 0x0
  3846                           
  3847  0070                     ?_Keyboard_Initialize:	
  3848                           ; 1 bytes @ 0x0
  3849                           
  3850  0070                     ?_Keyboard_Process_A:	
  3851                           ; 1 bytes @ 0x0
  3852                           
  3853  0070                     ?_Keyboard_Process_B:	
  3854                           ; 1 bytes @ 0x0
  3855                           
  3856  0070                     ?_TimeDelay_Initialize:	
  3857                           ; 1 bytes @ 0x0
  3858                           
  3859  0070                     ?_ADC_GetConversion:	
  3860                           ; 1 bytes @ 0x0
  3861                           
  3862  0070                     ?___lwdiv:	
  3863                           ; 2 bytes @ 0x0
  3864                           
  3865  0070                     ___lwdiv@divisor:	
  3866                           ; 2 bytes @ 0x0
  3867                           
  3868                           
  3869                           ; 2 bytes @ 0x0
  3870  0070                     	ds	2
  3871  0072                     ??_ADC_GetConversion:	
  3872  0072                     ___lwdiv@dividend:	
  3873                           ; 1 bytes @ 0x2
  3874                           
  3875                           
  3876                           ; 2 bytes @ 0x2
  3877  0072                     	ds	1
  3878  0073                     ADC_GetConversion@channel:	
  3879                           
  3880                           ; 1 bytes @ 0x3
  3881  0073                     	ds	1
  3882  0074                     ??___lwdiv:	
  3883                           
  3884                           ; 1 bytes @ 0x4
  3885  0074                     	ds	1
  3886  0075                     ___lwdiv@quotient:	
  3887                           
  3888                           ; 2 bytes @ 0x5
  3889  0075                     	ds	2
  3890  0077                     ___lwdiv@counter:	
  3891                           
  3892                           ; 1 bytes @ 0x7
  3893  0077                     	ds	1
  3894  0078                     ??_INT_DefaultInterruptHandler:	
  3895                           
  3896                           ; 1 bytes @ 0x8
  3897  0078                     	ds	1
  3898  0079                     ??_INT_ISR:	
  3899  0079                     ??_INT_CallBack:	
  3900                           ; 1 bytes @ 0x9
  3901                           
  3902  0079                     ??_INTERRUPT_InterruptManager:	
  3903                           ; 1 bytes @ 0x9
  3904                           
  3905                           
  3906                           ; 1 bytes @ 0x9
  3907  0079                     	ds	1
  3908                           
  3909                           	psect	cstackBANK0
  3910  0059                     __pcstackBANK0:	
  3911  0059                     ??_PMD_Initialize:	
  3912  0059                     ??_PIN_MANAGER_Initialize:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0059                     ??_OSCILLATOR_Initialize:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0059                     ??_ADC_Initialize:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0059                     ??_EUSART2_Initialize:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0059                     ??_MB1040_Initialize:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0059                     ?_TMR0_SetInterruptHandler:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0059                     ??_MB1040_Tasks:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0059                     ?_TimeDelay_Set:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0059                     ??_NonBlockingDelay:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0059                     ??_TimeDelay_Reset:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0059                     ?_INT_SetInterruptHandler:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945  0059                     TimeDelay_Reset@vTimer:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948  0059                     INT_SetInterruptHandler@InterruptHandler:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0059                     TMR0_SetInterruptHandler@InterruptHandler:	
  3952                           ; 2 bytes @ 0x0
  3953                           
  3954  0059                     TimeDelay_Set@delay:	
  3955                           ; 2 bytes @ 0x0
  3956                           
  3957                           
  3958                           ; 2 bytes @ 0x0
  3959  0059                     	ds	2
  3960  005B                     ??_EXT_INT_Initialize:	
  3961  005B                     ??_TMR0_Initialize:	
  3962                           ; 1 bytes @ 0x2
  3963                           
  3964  005B                     ??_TMR0_SetInterruptHandler:	
  3965                           ; 1 bytes @ 0x2
  3966                           
  3967  005B                     ??_TimeDelay_Tasks:	
  3968                           ; 1 bytes @ 0x2
  3969                           
  3970  005B                     ??_TimeDelay_Set:	
  3971                           ; 1 bytes @ 0x2
  3972                           
  3973  005B                     ??_SYSTEM_Initialize:	
  3974                           ; 1 bytes @ 0x2
  3975                           
  3976  005B                     ??_INT_SetInterruptHandler:	
  3977                           ; 1 bytes @ 0x2
  3978                           
  3979  005B                     ??_TimeDelay_Initialize:	
  3980                           ; 1 bytes @ 0x2
  3981                           
  3982  005B                     TimeDelay_Set@vTimer:	
  3983                           ; 1 bytes @ 0x2
  3984                           
  3985                           
  3986                           ; 1 bytes @ 0x2
  3987  005B                     	ds	1
  3988  005C                     ??_Keyboard_Initialize:	
  3989                           
  3990                           ; 1 bytes @ 0x3
  3991  005C                     	ds	1
  3992  005D                     NonBlockingDelay@vTimer:	
  3993                           
  3994                           ; 1 bytes @ 0x4
  3995  005D                     	ds	1
  3996  005E                     ??_Keyboard_Process_A:	
  3997  005E                     ??_Keyboard_Process_B:	
  3998                           ; 1 bytes @ 0x5
  3999                           
  4000                           
  4001                           ; 1 bytes @ 0x5
  4002  005E                     	ds	1
  4003  005F                     ??_Keyboard_Tasks:	
  4004                           
  4005                           ; 1 bytes @ 0x6
  4006  005F                     	ds	1
  4007  0060                     ??_main:	
  4008                           
  4009                           	psect	maintext
  4010  02F3                     __pmaintext:	
  4011                           ; 1 bytes @ 0x7
  4012 ;;
  4013 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4014 ;;
  4015 ;; *************** function _main *****************
  4016 ;; Defined at:
  4017 ;;		line 26 in file "main.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : B3F/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4031 ;;      Params:         0       0       0       0       0       0       0       0
  4032 ;;      Locals:         0       0       0       0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0
  4034 ;;      Totals:         0       0       0       0       0       0       0       0
  4035 ;;Total ram usage:        0 bytes
  4036 ;; Hardware stack levels required when called:    8
  4037 ;; This function calls:
  4038 ;;		_Keyboard_Tasks
  4039 ;;		_MB1040_Tasks
  4040 ;;		_SYSTEM_Initialize
  4041 ;;		_TimeDelay_Tasks
  4042 ;; This function is called by:
  4043 ;;		Startup code after reset
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _main
  4049  02F3                     _main:	
  4050                           
  4051                           ;main.c: 28: SYSTEM_Initialize();
  4052                           
  4053                           ;incstack = 0
  4054                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4055  02F3  3182  22C7  3182   	fcall	_SYSTEM_Initialize
  4056                           
  4057                           ;main.c: 34: (INTCONbits.GIE = 1);
  4058  02F6  178B               	bsf	11,7	;volatile
  4059                           
  4060                           ;main.c: 37: (INTCONbits.PEIE = 1);
  4061  02F7  170B               	bsf	11,6	;volatile
  4062                           
  4063                           ;main.c: 45: do { LATAbits.LATA5 = 1; } while(0);
  4064  02F8  0140               	movlb	0	; select bank0
  4065  02F9  1698               	bsf	24,5	;volatile
  4066  02FA                     l1678:	
  4067                           ;main.c: 47: while (1) {
  4068                           
  4069                           
  4070                           ;main.c: 49: MB1040_Tasks();
  4071  02FA  3182  221C  3182   	fcall	_MB1040_Tasks
  4072                           
  4073                           ;main.c: 50: TimeDelay_Tasks();
  4074  02FD  3181  21AA  3182   	fcall	_TimeDelay_Tasks
  4075                           
  4076                           ;main.c: 51: Keyboard_Tasks();
  4077  0300  3182  223C  3182   	fcall	_Keyboard_Tasks
  4078  0303  2AFA               	goto	l1678
  4079  0304                     __end_of_main:	
  4080                           
  4081                           	psect	text1
  4082  01AA                     __ptext1:	
  4083 ;; *************** function _TimeDelay_Tasks *****************
  4084 ;; Defined at:
  4085 ;;		line 98 in file "src/TimeDelay.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4099 ;;      Params:         0       0       0       0       0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0
  4101 ;;      Temps:          0       1       0       0       0       0       0       0
  4102 ;;      Totals:         0       1       0       0       0       0       0       0
  4103 ;;Total ram usage:        1 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    7
  4106 ;; This function calls:
  4107 ;;		_TimeDelay_Initialize
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _TimeDelay_Tasks
  4115  01AA                     _TimeDelay_Tasks:	
  4116                           
  4117                           ;TimeDelay.c: 99: static uint16_t prior_ticks_secure;
  4118                           ;TimeDelay.c: 100: switch (TimeDelay_Data.state) {
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in _TimeDelay_Tasks: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4122  01AA  29C6               	goto	l1628
  4123  01AB                     l1618:	
  4124                           ;TimeDelay.c: 101: case TIMEDELAY_STATES_INIT:
  4125                           
  4126                           
  4127                           ;TimeDelay.c: 102: {
  4128                           ;TimeDelay.c: 103: TimeDelay_Initialize();
  4129  01AB  3183  2341         	fcall	_TimeDelay_Initialize
  4130                           
  4131                           ;TimeDelay.c: 104: TimeDelay_Data.state = TIMEDELAY_STATES_IDLE;
  4132  01AD  0140               	movlb	0	; select bank0
  4133  01AE  01AD               	clrf	_TimeDelay_Data
  4134  01AF  0AAD               	incf	_TimeDelay_Data,f
  4135                           
  4136                           ;TimeDelay.c: 105: break;
  4137  01B0  0008               	return
  4138  01B1                     l1622:	
  4139                           ;TimeDelay.c: 106: }
  4140                           ;TimeDelay.c: 107: case TIMEDELAY_STATES_IDLE:
  4141                           
  4142                           
  4143                           ;TimeDelay.c: 111: if (ticks >= prior_ticks_secure)
  4144  01B1  0828               	movf	TimeDelay_Tasks@prior_ticks_secure+1,w
  4145  01B2  022A               	subwf	_ticks+1,w	;volatile
  4146  01B3  1D03               	skipz
  4147  01B4  29B7               	goto	u915
  4148  01B5  0827               	movf	TimeDelay_Tasks@prior_ticks_secure,w
  4149  01B6  0229               	subwf	_ticks,w	;volatile
  4150  01B7                     u915:	
  4151  01B7  1C03               	skipc
  4152  01B8  29BD               	goto	l1626
  4153                           
  4154                           ;TimeDelay.c: 112: TimeDelay_Data.state = TIMEDELAY_STATES_ERROR;
  4155  01B9  3002               	movlw	2
  4156  01BA  00DB               	movwf	??_TimeDelay_Tasks
  4157  01BB  085B               	movf	??_TimeDelay_Tasks,w
  4158  01BC  00AD               	movwf	_TimeDelay_Data
  4159  01BD                     l1626:	
  4160                           
  4161                           ;TimeDelay.c: 113: prior_ticks_secure = ticks + 100;
  4162  01BD  0829               	movf	_ticks,w	;volatile
  4163  01BE  3E64               	addlw	100
  4164  01BF  00A7               	movwf	TimeDelay_Tasks@prior_ticks_secure
  4165  01C0  3000               	movlw	0
  4166  01C1  3D2A               	addwfc	_ticks+1,w	;volatile
  4167  01C2  00A8               	movwf	TimeDelay_Tasks@prior_ticks_secure+1
  4168                           
  4169                           ;TimeDelay.c: 114: break;
  4170  01C3  0008               	return
  4171  01C4                     l509:	
  4172                           ;TimeDelay.c: 115: }
  4173                           ;TimeDelay.c: 116: case TIMEDELAY_STATES_ERROR:
  4174                           
  4175  01C4  0001               	reset	;# 
  4176                           
  4177                           ;TimeDelay.c: 119: }
  4178                           ;TimeDelay.c: 120: }
  4179  01C5  0008               	return
  4180  01C6                     l1628:	
  4181  01C6  0140               	movlb	0	; select bank0
  4182  01C7  082D               	movf	_TimeDelay_Data,w
  4183                           
  4184                           ; Switch size 1, requested type "space"
  4185                           ; Number of cases is 3, Range of values is 0 to 2
  4186                           ; switch strategies available:
  4187                           ; Name         Instructions Cycles
  4188                           ; simple_byte           10     6 (average)
  4189                           ; direct_byte           12     6 (fixed)
  4190                           ; jumptable            260     6 (fixed)
  4191                           ;	Chosen strategy is simple_byte
  4192  01C8  3A00               	xorlw	0	; case 0
  4193  01C9  1903               	skipnz
  4194  01CA  29AB               	goto	l1618
  4195  01CB  3A01               	xorlw	1	; case 1
  4196  01CC  1903               	skipnz
  4197  01CD  29B1               	goto	l1622
  4198  01CE  3A03               	xorlw	3	; case 2
  4199  01CF  1903               	skipnz
  4200  01D0  29C4               	goto	l509
  4201  01D1  29D2               	goto	l510
  4202  01D2                     l510:	
  4203  01D2  0008               	return
  4204  01D3                     __end_of_TimeDelay_Tasks:	
  4205                           
  4206                           	psect	text2
  4207  0341                     __ptext2:	
  4208 ;; *************** function _TimeDelay_Initialize *****************
  4209 ;; Defined at:
  4210 ;;		line 65 in file "src/TimeDelay.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4224 ;;      Params:         0       0       0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    6
  4231 ;; This function calls:
  4232 ;;		_TMR0_SetInterruptHandler
  4233 ;; This function is called by:
  4234 ;;		_TimeDelay_Tasks
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           
  4239                           ;psect for function _TimeDelay_Initialize
  4240  0341                     _TimeDelay_Initialize:	
  4241                           
  4242                           ;TimeDelay.c: 66: TMR0_SetInterruptHandler(&Ticker_Handler);
  4243                           
  4244                           ;incstack = 0
  4245                           ; Regs used in _TimeDelay_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4246  0341  3073               	movlw	low _Ticker_Handler
  4247  0342  0140               	movlb	0	; select bank0
  4248  0343  00D9               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4249  0344  3003               	movlw	high _Ticker_Handler
  4250  0345  00DA               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4251  0346  3183  2367         	fcall	_TMR0_SetInterruptHandler
  4252  0348  0008               	return
  4253  0349                     __end_of_TimeDelay_Initialize:	
  4254                           
  4255                           	psect	text3
  4256  02C7                     __ptext3:	
  4257 ;; *************** function _SYSTEM_Initialize *****************
  4258 ;; Defined at:
  4259 ;;		line 87 in file "mcc_generated_files/mcc.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4273 ;;      Params:         0       0       0       0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    7
  4280 ;; This function calls:
  4281 ;;		_ADC_Initialize
  4282 ;;		_EUSART2_Initialize
  4283 ;;		_EXT_INT_Initialize
  4284 ;;		_MB1040_Initialize
  4285 ;;		_OSCILLATOR_Initialize
  4286 ;;		_PIN_MANAGER_Initialize
  4287 ;;		_PMD_Initialize
  4288 ;;		_TMR0_Initialize
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _SYSTEM_Initialize
  4296  02C7                     _SYSTEM_Initialize:	
  4297                           
  4298                           ;mcc.c: 89: PMD_Initialize();
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4302  02C7  3183  2349  3182   	fcall	_PMD_Initialize
  4303                           
  4304                           ;mcc.c: 90: PIN_MANAGER_Initialize();
  4305  02CA  3181  21FB  3182   	fcall	_PIN_MANAGER_Initialize
  4306                           
  4307                           ;mcc.c: 91: OSCILLATOR_Initialize();
  4308  02CD  3183  2320  3182   	fcall	_OSCILLATOR_Initialize
  4309                           
  4310                           ;mcc.c: 92: ADC_Initialize();
  4311  02D0  3183  2351  3182   	fcall	_ADC_Initialize
  4312                           
  4313                           ;mcc.c: 93: EXT_INT_Initialize();
  4314  02D3  3183  2313  3182   	fcall	_EXT_INT_Initialize
  4315                           
  4316                           ;mcc.c: 94: TMR0_Initialize();
  4317  02D6  3182  22DF  3182   	fcall	_TMR0_Initialize
  4318                           
  4319                           ;mcc.c: 95: EUSART2_Initialize();
  4320  02D9  3182  2278  3182   	fcall	_EUSART2_Initialize
  4321                           
  4322                           ;mcc.c: 96: MB1040_Initialize();
  4323  02DC  3183  2383         	fcall	_MB1040_Initialize
  4324  02DE  0008               	return
  4325  02DF                     __end_of_SYSTEM_Initialize:	
  4326                           
  4327                           	psect	text4
  4328  02DF                     __ptext4:	
  4329 ;; *************** function _TMR0_Initialize *****************
  4330 ;; Defined at:
  4331 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, pclath, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4345 ;;      Params:         0       0       0       0       0       0       0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0
  4348 ;;      Totals:         0       0       0       0       0       0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    6
  4352 ;; This function calls:
  4353 ;;		_TMR0_SetInterruptHandler
  4354 ;; This function is called by:
  4355 ;;		_SYSTEM_Initialize
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _TMR0_Initialize
  4361  02DF                     _TMR0_Initialize:	
  4362                           
  4363                           ;tmr0.c: 65: T0CON1 = 0x42;
  4364                           
  4365                           ;incstack = 0
  4366                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4367  02DF  3042               	movlw	66
  4368  02E0  014B               	movlb	11	; select bank11
  4369  02E1  009F               	movwf	31	;volatile
  4370                           
  4371                           ;tmr0.c: 68: TMR0H = 0xF9;
  4372  02E2  30F9               	movlw	249
  4373  02E3  009D               	movwf	29	;volatile
  4374                           
  4375                           ;tmr0.c: 71: TMR0L = 0x00;
  4376  02E4  019C               	clrf	28	;volatile
  4377                           
  4378                           ;tmr0.c: 74: PIR0bits.TMR0IF = 0;
  4379  02E5  014E               	movlb	14	; select bank14
  4380  02E6  128C               	bcf	12,5	;volatile
  4381                           
  4382                           ;tmr0.c: 77: PIE0bits.TMR0IE = 1;
  4383  02E7  1696               	bsf	22,5	;volatile
  4384                           
  4385                           ;tmr0.c: 80: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  4386  02E8  3087               	movlw	low _TMR0_DefaultInterruptHandler
  4387  02E9  0140               	movlb	0	; select bank0
  4388  02EA  00D9               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4389  02EB  3003               	movlw	high _TMR0_DefaultInterruptHandler
  4390  02EC  00DA               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4391  02ED  3183  2367         	fcall	_TMR0_SetInterruptHandler
  4392                           
  4393                           ;tmr0.c: 83: T0CON0 = 0x87;
  4394  02EF  3087               	movlw	135
  4395  02F0  014B               	movlb	11	; select bank11
  4396  02F1  009E               	movwf	30	;volatile
  4397  02F2  0008               	return
  4398  02F3                     __end_of_TMR0_Initialize:	
  4399                           
  4400                           	psect	text5
  4401  0367                     __ptext5:	
  4402 ;; *************** function _TMR0_SetInterruptHandler *****************
  4403 ;; Defined at:
  4404 ;;		line 141 in file "mcc_generated_files/tmr0.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4407 ;;		 -> Ticker_Handler(1), TMR0_DefaultInterruptHandler(1), 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4419 ;;      Params:         0       2       0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0
  4422 ;;      Totals:         0       2       0       0       0       0       0       0
  4423 ;;Total ram usage:        2 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    5
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_TMR0_Initialize
  4430 ;;		_TimeDelay_Initialize
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _TMR0_SetInterruptHandler
  4436  0367                     _TMR0_SetInterruptHandler:	
  4437                           
  4438                           ;tmr0.c: 142: TMR0_InterruptHandler = InterruptHandler;
  4439                           
  4440                           ;incstack = 0
  4441                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4442  0367  0140               	movlb	0	; select bank0
  4443  0368  085A               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4444  0369  00E1               	movwf	_TMR0_InterruptHandler+1
  4445  036A  0859               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4446  036B  00E0               	movwf	_TMR0_InterruptHandler
  4447  036C  0008               	return
  4448  036D                     __end_of_TMR0_SetInterruptHandler:	
  4449                           
  4450                           	psect	text6
  4451  0349                     __ptext6:	
  4452 ;; *************** function _PMD_Initialize *****************
  4453 ;; Defined at:
  4454 ;;		line 115 in file "mcc_generated_files/mcc.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		status,2
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4468 ;;      Params:         0       0       0       0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    5
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_SYSTEM_Initialize
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function _PMD_Initialize
  4484  0349                     _PMD_Initialize:	
  4485                           
  4486                           ;mcc.c: 118: PMD0 = 0x00;
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _PMD_Initialize: [status,2]
  4490  0349  014F               	movlb	15	; select bank15
  4491  034A  0196               	clrf	22	;volatile
  4492                           
  4493                           ;mcc.c: 120: PMD1 = 0x00;
  4494  034B  0197               	clrf	23	;volatile
  4495                           
  4496                           ;mcc.c: 122: PMD2 = 0x00;
  4497  034C  0198               	clrf	24	;volatile
  4498                           
  4499                           ;mcc.c: 124: PMD3 = 0x00;
  4500  034D  0199               	clrf	25	;volatile
  4501                           
  4502                           ;mcc.c: 126: PMD4 = 0x00;
  4503  034E  019A               	clrf	26	;volatile
  4504                           
  4505                           ;mcc.c: 128: PMD5 = 0x00;
  4506  034F  019B               	clrf	27	;volatile
  4507  0350  0008               	return
  4508  0351                     __end_of_PMD_Initialize:	
  4509                           
  4510                           	psect	text7
  4511  01FB                     __ptext7:	
  4512 ;; *************** function _PIN_MANAGER_Initialize *****************
  4513 ;; Defined at:
  4514 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4528 ;;      Params:         0       0       0       0       0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0
  4531 ;;      Totals:         0       0       0       0       0       0       0       0
  4532 ;;Total ram usage:        0 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    5
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_SYSTEM_Initialize
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _PIN_MANAGER_Initialize
  4544  01FB                     _PIN_MANAGER_Initialize:	
  4545                           
  4546                           ;pin_manager.c: 57: LATA = 0x00;
  4547                           
  4548                           ;incstack = 0
  4549                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4550  01FB  0140               	movlb	0	; select bank0
  4551  01FC  0198               	clrf	24	;volatile
  4552                           
  4553                           ;pin_manager.c: 58: LATB = 0x00;
  4554  01FD  0199               	clrf	25	;volatile
  4555                           
  4556                           ;pin_manager.c: 59: LATC = 0x00;
  4557  01FE  019A               	clrf	26	;volatile
  4558                           
  4559                           ;pin_manager.c: 64: TRISA = 0x1F;
  4560  01FF  301F               	movlw	31
  4561  0200  0092               	movwf	18	;volatile
  4562                           
  4563                           ;pin_manager.c: 65: TRISB = 0xE0;
  4564  0201  30E0               	movlw	224
  4565  0202  0093               	movwf	19	;volatile
  4566                           
  4567                           ;pin_manager.c: 66: TRISC = 0xCA;
  4568  0203  30CA               	movlw	202
  4569  0204  0094               	movwf	20	;volatile
  4570                           
  4571                           ;pin_manager.c: 71: ANSELC = 0x00;
  4572  0205  017E               	movlb	62	; select bank62
  4573  0206  01CE               	clrf	78	;volatile
  4574                           
  4575                           ;pin_manager.c: 72: ANSELB = 0x00;
  4576  0207  01C3               	clrf	67	;volatile
  4577                           
  4578                           ;pin_manager.c: 73: ANSELA = 0x13;
  4579  0208  3013               	movlw	19
  4580  0209  00B8               	movwf	56	;volatile
  4581                           
  4582                           ;pin_manager.c: 78: WPUB = 0x00;
  4583  020A  01C4               	clrf	68	;volatile
  4584                           
  4585                           ;pin_manager.c: 79: WPUA = 0x00;
  4586  020B  01B9               	clrf	57	;volatile
  4587                           
  4588                           ;pin_manager.c: 80: WPUC = 0x00;
  4589  020C  01CF               	clrf	79	;volatile
  4590                           
  4591                           ;pin_manager.c: 85: ODCONA = 0x00;
  4592  020D  01BA               	clrf	58	;volatile
  4593                           
  4594                           ;pin_manager.c: 86: ODCONB = 0x00;
  4595  020E  01C5               	clrf	69	;volatile
  4596                           
  4597                           ;pin_manager.c: 87: ODCONC = 0x00;
  4598  020F  01D0               	clrf	80	;volatile
  4599                           
  4600                           ;pin_manager.c: 90: RC0PPS = 0x11;
  4601  0210  3011               	movlw	17
  4602  0211  00A0               	movwf	32	;volatile
  4603                           
  4604                           ;pin_manager.c: 91: RX2DTPPSbits.RX2DTPPS = 0x11;
  4605  0212  017D               	movlb	61	; select bank61
  4606  0213  084D               	movf	77,w	;volatile
  4607  0214  39C0               	andlw	-64
  4608  0215  3811               	iorlw	17
  4609  0216  00CD               	movwf	77	;volatile
  4610                           
  4611                           ;pin_manager.c: 92: INTPPSbits.INTPPS = 0x0D;
  4612  0217  0810               	movf	16,w	;volatile
  4613  0218  39C0               	andlw	-64
  4614  0219  380D               	iorlw	13
  4615  021A  0090               	movwf	16	;volatile
  4616  021B  0008               	return
  4617  021C                     __end_of_PIN_MANAGER_Initialize:	
  4618                           
  4619                           	psect	text8
  4620  0320                     __ptext8:	
  4621 ;; *************** function _OSCILLATOR_Initialize *****************
  4622 ;; Defined at:
  4623 ;;		line 99 in file "mcc_generated_files/mcc.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4637 ;;      Params:         0       0       0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    5
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_SYSTEM_Initialize
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           
  4652                           ;psect for function _OSCILLATOR_Initialize
  4653  0320                     _OSCILLATOR_Initialize:	
  4654                           
  4655                           ;mcc.c: 102: OSCCON1 = 0x60;
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4659  0320  3060               	movlw	96
  4660  0321  0151               	movlb	17	; select bank17
  4661  0322  008D               	movwf	13	;volatile
  4662                           
  4663                           ;mcc.c: 104: OSCCON3 = 0x00;
  4664  0323  018F               	clrf	15	;volatile
  4665                           
  4666                           ;mcc.c: 106: OSCEN = 0x00;
  4667  0324  0191               	clrf	17	;volatile
  4668                           
  4669                           ;mcc.c: 108: OSCFRQ = 0x06;
  4670  0325  3006               	movlw	6
  4671  0326  0093               	movwf	19	;volatile
  4672                           
  4673                           ;mcc.c: 110: OSCSTAT = 0x00;
  4674  0327  0190               	clrf	16	;volatile
  4675                           
  4676                           ;mcc.c: 112: OSCTUNE = 0x20;
  4677  0328  3020               	movlw	32
  4678  0329  0092               	movwf	18	;volatile
  4679  032A  0008               	return
  4680  032B                     __end_of_OSCILLATOR_Initialize:	
  4681                           
  4682                           	psect	text9
  4683  0383                     __ptext9:	
  4684 ;; *************** function _MB1040_Initialize *****************
  4685 ;; Defined at:
  4686 ;;		line 47 in file "src/Sensor_MB1040.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		None
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4700 ;;      Params:         0       0       0       0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0
  4703 ;;      Totals:         0       0       0       0       0       0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    5
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_SYSTEM_Initialize
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _MB1040_Initialize
  4716  0383                     _MB1040_Initialize:	
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _MB1040_Initialize: []
  4720                           ;Sensor_MB1040.c: 49: do { LATBbits.LATB4 = 1; } while(0);
  4721  0383  0140               	movlb	0	; select bank0
  4722  0384  1619               	bsf	25,4	;volatile
  4723                           
  4724                           ;Sensor_MB1040.c: 55: do { LATCbits.LATC2 = 1; } while(0);
  4725  0385  151A               	bsf	26,2	;volatile
  4726  0386  0008               	return
  4727  0387                     __end_of_MB1040_Initialize:	
  4728                           
  4729                           	psect	text10
  4730  0313                     __ptext10:	
  4731 ;; *************** function _EXT_INT_Initialize *****************
  4732 ;; Defined at:
  4733 ;;		line 64 in file "mcc_generated_files/ext_int.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0, pclath, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4747 ;;      Params:         0       0       0       0       0       0       0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0
  4750 ;;      Totals:         0       0       0       0       0       0       0       0
  4751 ;;Total ram usage:        0 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    6
  4754 ;; This function calls:
  4755 ;;		_INT_SetInterruptHandler
  4756 ;; This function is called by:
  4757 ;;		_SYSTEM_Initialize
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _EXT_INT_Initialize
  4763  0313                     _EXT_INT_Initialize:	
  4764                           
  4765                           ;ext_int.c: 68: (PIR0bits.INTF = 0);
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4769  0313  014E               	movlb	14	; select bank14
  4770  0314  100C               	bcf	12,0	;volatile
  4771                           
  4772                           ;ext_int.c: 69: (INTCONbits.INTEDG = 1);
  4773  0315  140B               	bsf	11,0	;volatile
  4774                           
  4775                           ;ext_int.c: 71: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  4776  0316  3080               	movlw	low _INT_DefaultInterruptHandler
  4777  0317  0140               	movlb	0	; select bank0
  4778  0318  00D9               	movwf	INT_SetInterruptHandler@InterruptHandler
  4779  0319  3001               	movlw	high _INT_DefaultInterruptHandler
  4780  031A  00DA               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  4781  031B  3183  236D         	fcall	_INT_SetInterruptHandler
  4782                           
  4783                           ;ext_int.c: 72: (PIE0bits.INTE = 1);
  4784  031D  014E               	movlb	14	; select bank14
  4785  031E  1416               	bsf	22,0	;volatile
  4786  031F  0008               	return
  4787  0320                     __end_of_EXT_INT_Initialize:	
  4788                           
  4789                           	psect	text11
  4790  036D                     __ptext11:	
  4791 ;; *************** function _INT_SetInterruptHandler *****************
  4792 ;; Defined at:
  4793 ;;		line 47 in file "mcc_generated_files/ext_int.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  4796 ;;		 -> INT_DefaultInterruptHandler(1), 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4808 ;;      Params:         0       2       0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0
  4811 ;;      Totals:         0       2       0       0       0       0       0       0
  4812 ;;Total ram usage:        2 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:    5
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_EXT_INT_Initialize
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           
  4823                           ;psect for function _INT_SetInterruptHandler
  4824  036D                     _INT_SetInterruptHandler:	
  4825                           
  4826                           ;ext_int.c: 48: INT_InterruptHandler = InterruptHandler;
  4827                           
  4828                           ;incstack = 0
  4829                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  4830  036D  0140               	movlb	0	; select bank0
  4831  036E  085A               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  4832  036F  00E3               	movwf	_INT_InterruptHandler+1
  4833  0370  0859               	movf	INT_SetInterruptHandler@InterruptHandler,w
  4834  0371  00E2               	movwf	_INT_InterruptHandler
  4835  0372  0008               	return
  4836  0373                     __end_of_INT_SetInterruptHandler:	
  4837                           
  4838                           	psect	text12
  4839  0278                     __ptext12:	
  4840 ;; *************** function _EUSART2_Initialize *****************
  4841 ;; Defined at:
  4842 ;;		line 72 in file "mcc_generated_files/eusart2.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4856 ;;      Params:         0       0       0       0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0       0       0       0
  4858 ;;      Temps:          0       1       0       0       0       0       0       0
  4859 ;;      Totals:         0       1       0       0       0       0       0       0
  4860 ;;Total ram usage:        1 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    5
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_SYSTEM_Initialize
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _EUSART2_Initialize
  4872  0278                     _EUSART2_Initialize:	
  4873                           
  4874                           ;eusart2.c: 75: PIE3bits.RC2IE = 0;
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in _EUSART2_Initialize: [wreg+status,2]
  4878  0278  014E               	movlb	14	; select bank14
  4879  0279  1399               	bcf	25,7	;volatile
  4880                           
  4881                           ;eusart2.c: 76: PIE3bits.TX2IE = 0;
  4882  027A  1319               	bcf	25,6	;volatile
  4883                           
  4884                           ;eusart2.c: 80: BAUD2CON = 0x08;
  4885  027B  3008               	movlw	8
  4886  027C  0154               	movlb	20	; select bank20
  4887  027D  009F               	movwf	31	;volatile
  4888                           
  4889                           ;eusart2.c: 83: RC2STA = 0x90;
  4890  027E  3090               	movlw	144
  4891  027F  009D               	movwf	29	;volatile
  4892                           
  4893                           ;eusart2.c: 86: TX2STA = 0x24;
  4894  0280  3024               	movlw	36
  4895  0281  009E               	movwf	30	;volatile
  4896                           
  4897                           ;eusart2.c: 89: SP2BRGL = 0x40;
  4898  0282  3040               	movlw	64
  4899  0283  009B               	movwf	27	;volatile
  4900                           
  4901                           ;eusart2.c: 92: SP2BRGH = 0x03;
  4902  0284  3003               	movlw	3
  4903  0285  009C               	movwf	28	;volatile
  4904                           
  4905                           ;eusart2.c: 96: eusart2TxHead = 0;
  4906  0286  01FD               	clrf	_eusart2TxHead	;volatile
  4907                           
  4908                           ;eusart2.c: 97: eusart2TxTail = 0;
  4909  0287  01FC               	clrf	_eusart2TxTail	;volatile
  4910                           
  4911                           ;eusart2.c: 98: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
  4912  0288  3010               	movlw	16
  4913  0289  0140               	movlb	0	; select bank0
  4914  028A  00D9               	movwf	??_EUSART2_Initialize
  4915  028B  0859               	movf	??_EUSART2_Initialize,w
  4916  028C  00E4               	movwf	_eusart2TxBufferRemaining	;volatile
  4917                           
  4918                           ;eusart2.c: 100: eusart2RxHead = 0;
  4919  028D  01FB               	clrf	_eusart2RxHead	;volatile
  4920                           
  4921                           ;eusart2.c: 101: eusart2RxTail = 0;
  4922  028E  01FA               	clrf	_eusart2RxTail	;volatile
  4923                           
  4924                           ;eusart2.c: 102: eusart2RxCount = 0;
  4925  028F  01AB               	clrf	_eusart2RxCount	;volatile
  4926                           
  4927                           ;eusart2.c: 105: PIE3bits.RC2IE = 1;
  4928  0290  014E               	movlb	14	; select bank14
  4929  0291  1799               	bsf	25,7	;volatile
  4930  0292  0008               	return
  4931  0293                     __end_of_EUSART2_Initialize:	
  4932                           
  4933                           	psect	text13
  4934  0351                     __ptext13:	
  4935 ;; *************** function _ADC_Initialize *****************
  4936 ;; Defined at:
  4937 ;;		line 62 in file "mcc_generated_files/adc.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;		None
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4951 ;;      Params:         0       0       0       0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0
  4954 ;;      Totals:         0       0       0       0       0       0       0       0
  4955 ;;Total ram usage:        0 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    5
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_SYSTEM_Initialize
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           
  4966                           ;psect for function _ADC_Initialize
  4967  0351                     _ADC_Initialize:	
  4968                           
  4969                           ;adc.c: 67: ADCON0 = 0x11;
  4970                           
  4971                           ;incstack = 0
  4972                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4973  0351  3011               	movlw	17
  4974  0352  0141               	movlb	1	; select bank1
  4975  0353  009D               	movwf	29	;volatile
  4976                           
  4977                           ;adc.c: 70: ADCON1 = 0xA0;
  4978  0354  30A0               	movlw	160
  4979  0355  009E               	movwf	30	;volatile
  4980                           
  4981                           ;adc.c: 73: ADRESL = 0x00;
  4982  0356  019B               	clrf	27	;volatile
  4983                           
  4984                           ;adc.c: 76: ADRESH = 0x00;
  4985  0357  019C               	clrf	28	;volatile
  4986  0358  0008               	return
  4987  0359                     __end_of_ADC_Initialize:	
  4988                           
  4989                           	psect	text14
  4990  021C                     __ptext14:	
  4991 ;; *************** function _MB1040_Tasks *****************
  4992 ;; Defined at:
  4993 ;;		line 58 in file "src/Sensor_MB1040.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5007 ;;      Params:         0       0       0       0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    5
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _MB1040_Tasks
  5023  021C                     _MB1040_Tasks:	
  5024                           
  5025                           ;Sensor_MB1040.c: 60: switch (MB1040_Data.state) {
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _MB1040_Tasks: [wreg-fsr0h+status,2+status,0]
  5029  021C  2A32               	goto	l1614
  5030  021D                     l391:	
  5031                           ;Sensor_MB1040.c: 61: case MB1040_STATES_INIT:
  5032                           
  5033                           
  5034                           ;Sensor_MB1040.c: 62: {
  5035                           ;Sensor_MB1040.c: 63: MB1040_Data.state = MB1040_STATES_IDLE;
  5036  021D  01AE               	clrf	_MB1040_Data
  5037  021E  0AAE               	incf	_MB1040_Data,f
  5038                           
  5039                           ;Sensor_MB1040.c: 64: break;
  5040  021F  0008               	return
  5041  0220                     l1608:	
  5042                           ;Sensor_MB1040.c: 65: }
  5043                           ;Sensor_MB1040.c: 66: case MB1040_STATES_IDLE:
  5044                           
  5045                           
  5046                           ;Sensor_MB1040.c: 67: {
  5047                           ;Sensor_MB1040.c: 68: if (ADCval.adcResultTot > 18 && ADCval.adcResultTot < 58) {
  5048  0220  3000               	movlw	0
  5049  0221  0226               	subwf	_ADCval+6,w
  5050  0222  3013               	movlw	19
  5051  0223  1903               	skipnz
  5052  0224  0225               	subwf	_ADCval+5,w
  5053  0225  1C03               	skipc
  5054  0226  2A30               	goto	l398
  5055  0227  3000               	movlw	0
  5056  0228  0226               	subwf	_ADCval+6,w
  5057  0229  303A               	movlw	58
  5058  022A  1903               	skipnz
  5059  022B  0225               	subwf	_ADCval+5,w
  5060  022C  1803               	skipnc
  5061  022D  2A30               	goto	l398
  5062                           
  5063                           ;Sensor_MB1040.c: 69: do { LATCbits.LATC5 = 1; } while(0);
  5064  022E  169A               	bsf	26,5	;volatile
  5065                           
  5066                           ;Sensor_MB1040.c: 70: } else {
  5067  022F  0008               	return
  5068  0230                     l398:	
  5069                           ;Sensor_MB1040.c: 71: do { LATCbits.LATC5 = 0; } while(0);
  5070                           
  5071  0230  129A               	bcf	26,5	;volatile
  5072                           
  5073                           ;Sensor_MB1040.c: 74: }
  5074                           ;Sensor_MB1040.c: 75: }
  5075                           
  5076                           ;Sensor_MB1040.c: 72: }
  5077                           ;Sensor_MB1040.c: 73: break;
  5078  0231  0008               	return
  5079  0232                     l1614:	
  5080  0232  0140               	movlb	0	; select bank0
  5081  0233  082E               	movf	_MB1040_Data,w
  5082                           
  5083                           ; Switch size 1, requested type "space"
  5084                           ; Number of cases is 2, Range of values is 0 to 1
  5085                           ; switch strategies available:
  5086                           ; Name         Instructions Cycles
  5087                           ; simple_byte            7     4 (average)
  5088                           ; direct_byte           10     6 (fixed)
  5089                           ; jumptable            260     6 (fixed)
  5090                           ;	Chosen strategy is simple_byte
  5091  0234  3A00               	xorlw	0	; case 0
  5092  0235  1903               	skipnz
  5093  0236  2A1D               	goto	l391
  5094  0237  3A01               	xorlw	1	; case 1
  5095  0238  1903               	skipnz
  5096  0239  2A20               	goto	l1608
  5097  023A  2A3B               	goto	l400
  5098  023B                     l400:	
  5099  023B  0008               	return
  5100  023C                     __end_of_MB1040_Tasks:	
  5101                           
  5102                           	psect	text15
  5103  023C                     __ptext15:	
  5104 ;; *************** function _Keyboard_Tasks *****************
  5105 ;; Defined at:
  5106 ;;		line 159 in file "src/Keyboard.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      void 
  5113 ;; Registers used:
  5114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5120 ;;      Params:         0       0       0       0       0       0       0       0
  5121 ;;      Locals:         0       0       0       0       0       0       0       0
  5122 ;;      Temps:          0       1       0       0       0       0       0       0
  5123 ;;      Totals:         0       1       0       0       0       0       0       0
  5124 ;;Total ram usage:        1 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; Hardware stack levels required when called:    7
  5127 ;; This function calls:
  5128 ;;		_Keyboard_Initialize
  5129 ;;		_Keyboard_Process_A
  5130 ;;		_Keyboard_Process_B
  5131 ;; This function is called by:
  5132 ;;		_main
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           
  5137                           ;psect for function _Keyboard_Tasks
  5138  023C                     _Keyboard_Tasks:	
  5139                           
  5140                           ;Keyboard.c: 160: switch (Keyboard_Data.state) {
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in _Keyboard_Tasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5144  023C  2A4B               	goto	l1642
  5145  023D                     l1632:	
  5146                           ;Keyboard.c: 161: case KEYBOARD_STATES_INIT:
  5147                           
  5148                           
  5149                           ;Keyboard.c: 162: {
  5150                           ;Keyboard.c: 163: Keyboard_Initialize();
  5151  023D  3180  20EC         	fcall	_Keyboard_Initialize
  5152                           
  5153                           ;Keyboard.c: 164: Keyboard_Data.state = KEYBOARD_STATES_PROCESS;
  5154  023F  3003               	movlw	3
  5155  0240  0140               	movlb	0	; select bank0
  5156  0241  00DF               	movwf	??_Keyboard_Tasks
  5157  0242  085F               	movf	??_Keyboard_Tasks,w
  5158  0243  00AC               	movwf	_Keyboard_Data
  5159                           
  5160                           ;Keyboard.c: 165: break;
  5161  0244  0008               	return
  5162  0245                     l1636:	
  5163                           ;Keyboard.c: 166: }
  5164                           ;Keyboard.c: 167: case KEYBOARD_STATES_PROCESS:
  5165                           
  5166                           
  5167                           ;Keyboard.c: 168: {
  5168                           ;Keyboard.c: 169: Keyboard_Process_A();
  5169  0245  3181  21D3         	fcall	_Keyboard_Process_A
  5170                           
  5171                           ;Keyboard.c: 170: break;
  5172  0247  0008               	return
  5173  0248                     l1638:	
  5174                           ;Keyboard.c: 171: }
  5175                           ;Keyboard.c: 172: case KEYBOARD_STATES_F1:
  5176                           
  5177                           
  5178                           ;Keyboard.c: 173: {
  5179                           ;Keyboard.c: 174: Keyboard_Process_B();
  5180  0248  3181  2156         	fcall	_Keyboard_Process_B
  5181                           
  5182                           ;Keyboard.c: 181: }
  5183                           ;Keyboard.c: 182: }
  5184                           
  5185                           ;Keyboard.c: 178: {
  5186                           ;Keyboard.c: 180: break;
  5187                           
  5188                           ;Keyboard.c: 176: }
  5189                           ;Keyboard.c: 177: case KEYBOARD_STATES_F2:
  5190                           
  5191                           ;Keyboard.c: 175: break;
  5192  024A  0008               	return
  5193  024B                     l1642:	
  5194  024B  0140               	movlb	0	; select bank0
  5195  024C  082C               	movf	_Keyboard_Data,w
  5196                           
  5197                           ; Switch size 1, requested type "space"
  5198                           ; Number of cases is 4, Range of values is 0 to 5
  5199                           ; switch strategies available:
  5200                           ; Name         Instructions Cycles
  5201                           ; simple_byte           13     7 (average)
  5202                           ; direct_byte           18     6 (fixed)
  5203                           ; jumptable            260     6 (fixed)
  5204                           ;	Chosen strategy is simple_byte
  5205  024D  3A00               	xorlw	0	; case 0
  5206  024E  1903               	skipnz
  5207  024F  2A3D               	goto	l1632
  5208  0250  3A03               	xorlw	3	; case 3
  5209  0251  1903               	skipnz
  5210  0252  2A45               	goto	l1636
  5211  0253  3A07               	xorlw	7	; case 4
  5212  0254  1903               	skipnz
  5213  0255  2A48               	goto	l1638
  5214  0256  3A01               	xorlw	1	; case 5
  5215  0257  1903               	skipnz
  5216  0258  2A5A               	goto	l463
  5217  0259  2A5A               	goto	l463
  5218  025A                     l463:	
  5219  025A  0008               	return
  5220  025B                     __end_of_Keyboard_Tasks:	
  5221                           
  5222                           	psect	text16
  5223  0156                     __ptext16:	
  5224 ;; *************** function _Keyboard_Process_B *****************
  5225 ;; Defined at:
  5226 ;;		line 141 in file "src/Keyboard.c"
  5227 ;; Parameters:    Size  Location     Type
  5228 ;;		None
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;		None
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5240 ;;      Params:         0       0       0       0       0       0       0       0
  5241 ;;      Locals:         0       0       0       0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0
  5243 ;;      Totals:         0       0       0       0       0       0       0       0
  5244 ;;Total ram usage:        0 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    6
  5247 ;; This function calls:
  5248 ;;		_NonBlockingDelay
  5249 ;;		_TimeDelay_Reset
  5250 ;; This function is called by:
  5251 ;;		_Keyboard_Tasks
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function _Keyboard_Process_B
  5257  0156                     _Keyboard_Process_B:	
  5258                           
  5259                           ;Keyboard.c: 142: if ((PORTCbits.RC6) && !NonBlockingDelay(&delay_BA)) {
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _Keyboard_Process_B: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5263  0156  0140               	movlb	0	; select bank0
  5264  0157  1F0E               	btfss	14,6	;volatile
  5265  0158  2960               	goto	l1498
  5266  0159  3044               	movlw	(low (_delay_BA| 0))& (0+255)
  5267  015A  3180  2044  3181   	fcall	_NonBlockingDelay
  5268  015D  3A00               	xorlw	0
  5269  015E  1903               	btfsc	3,2
  5270  015F  2964               	goto	l1500
  5271  0160                     l1498:	
  5272                           ;Keyboard.c: 144: } else TimeDelay_Reset(&delay_BA);
  5273                           
  5274  0160  3044               	movlw	(low (_delay_BA| 0))& (0+255)
  5275  0161  3183  2359  3181   	fcall	_TimeDelay_Reset
  5276  0164                     l1500:	
  5277                           
  5278                           ;Keyboard.c: 145: if ((PORTCbits.RC7) && !NonBlockingDelay(&delay_BB)) {
  5279  0164  0140               	movlb	0	; select bank0
  5280  0165  1F8E               	btfss	14,7	;volatile
  5281  0166  296E               	goto	l1506
  5282  0167  303D               	movlw	(low (_delay_BB| 0))& (0+255)
  5283  0168  3180  2044  3181   	fcall	_NonBlockingDelay
  5284  016B  3A00               	xorlw	0
  5285  016C  1903               	btfsc	3,2
  5286  016D  2972               	goto	l1508
  5287  016E                     l1506:	
  5288                           ;Keyboard.c: 147: } else TimeDelay_Reset(&delay_BB);
  5289                           
  5290  016E  303D               	movlw	(low (_delay_BB| 0))& (0+255)
  5291  016F  3183  2359  3181   	fcall	_TimeDelay_Reset
  5292  0172                     l1508:	
  5293                           
  5294                           ;Keyboard.c: 148: if ((PORTBbits.RB6) && !NonBlockingDelay(&delay_BC)) {
  5295  0172  0140               	movlb	0	; select bank0
  5296  0173  1F0D               	btfss	13,6	;volatile
  5297  0174  297C               	goto	l1514
  5298  0175  3036               	movlw	(low (_delay_BC| 0))& (0+255)
  5299  0176  3180  2044  3181   	fcall	_NonBlockingDelay
  5300  0179  3A00               	xorlw	0
  5301  017A  1903               	btfsc	3,2
  5302  017B  0008               	return
  5303  017C                     l1514:	
  5304                           ;Keyboard.c: 150: } else TimeDelay_Reset(&delay_BC);
  5305                           
  5306  017C  3036               	movlw	(low (_delay_BC| 0))& (0+255)
  5307  017D  3183  2359         	fcall	_TimeDelay_Reset
  5308  017F  0008               	return
  5309  0180                     __end_of_Keyboard_Process_B:	
  5310                           
  5311                           	psect	text17
  5312  01D3                     __ptext17:	
  5313 ;; *************** function _Keyboard_Process_A *****************
  5314 ;; Defined at:
  5315 ;;		line 126 in file "src/Keyboard.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5329 ;;      Params:         0       0       0       0       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0       0       0       0
  5331 ;;      Temps:          0       1       0       0       0       0       0       0
  5332 ;;      Totals:         0       1       0       0       0       0       0       0
  5333 ;;Total ram usage:        1 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    6
  5336 ;; This function calls:
  5337 ;;		_NonBlockingDelay
  5338 ;;		_TimeDelay_Reset
  5339 ;; This function is called by:
  5340 ;;		_Keyboard_Tasks
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function _Keyboard_Process_A
  5346  01D3                     _Keyboard_Process_A:	
  5347                           
  5348                           ;Keyboard.c: 127: if ((PORTCbits.RC6) && (PORTCbits.RC7)) {
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _Keyboard_Process_A: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5352  01D3  0140               	movlb	0	; select bank0
  5353  01D4  1B0E               	btfsc	14,6	;volatile
  5354  01D5  1F8E               	btfss	14,7	;volatile
  5355  01D6  29F3               	goto	l1490
  5356                           
  5357                           ;Keyboard.c: 128: if (!(PORTBbits.RB6) && !NonBlockingDelay(&delay_F1)) {
  5358  01D7  1B0D               	btfsc	13,6	;volatile
  5359  01D8  29E6               	goto	l1486
  5360  01D9  3052               	movlw	(low (_delay_F1| 0))& (0+255)
  5361  01DA  3180  2044  3181   	fcall	_NonBlockingDelay
  5362  01DD  3A00               	xorlw	0
  5363  01DE  1D03               	skipz
  5364  01DF  29E6               	goto	l1486
  5365                           
  5366                           ;Keyboard.c: 130: Keyboard_Data.state = KEYBOARD_STATES_F1;
  5367  01E0  3004               	movlw	4
  5368  01E1  0140               	movlb	0	; select bank0
  5369  01E2  00DE               	movwf	??_Keyboard_Process_A
  5370  01E3  085E               	movf	??_Keyboard_Process_A,w
  5371  01E4  00AC               	movwf	_Keyboard_Data
  5372                           
  5373                           ;Keyboard.c: 131: } else if (!NonBlockingDelay(&delay_F2)) {
  5374  01E5  0008               	return
  5375  01E6                     l1486:	
  5376  01E6  304B               	movlw	(low (_delay_F2| 0))& (0+255)
  5377  01E7  3180  2044  3181   	fcall	_NonBlockingDelay
  5378  01EA  3A00               	xorlw	0
  5379  01EB  1D03               	skipz
  5380  01EC  0008               	return
  5381                           
  5382                           ;Keyboard.c: 133: Keyboard_Data.state = KEYBOARD_STATES_F2;
  5383  01ED  3005               	movlw	5
  5384  01EE  0140               	movlb	0	; select bank0
  5385  01EF  00DE               	movwf	??_Keyboard_Process_A
  5386  01F0  085E               	movf	??_Keyboard_Process_A,w
  5387  01F1  00AC               	movwf	_Keyboard_Data
  5388                           
  5389                           ;Keyboard.c: 134: }
  5390                           ;Keyboard.c: 135: } else {
  5391  01F2  0008               	return
  5392  01F3                     l1490:	
  5393                           
  5394                           ;Keyboard.c: 136: TimeDelay_Reset(&delay_F1);
  5395  01F3  3052               	movlw	(low (_delay_F1| 0))& (0+255)
  5396  01F4  3183  2359  3181   	fcall	_TimeDelay_Reset
  5397                           
  5398                           ;Keyboard.c: 137: TimeDelay_Reset(&delay_F2);
  5399  01F7  304B               	movlw	(low (_delay_F2| 0))& (0+255)
  5400  01F8  3183  2359         	fcall	_TimeDelay_Reset
  5401  01FA  0008               	return
  5402  01FB                     __end_of_Keyboard_Process_A:	
  5403                           
  5404                           	psect	text18
  5405  0359                     __ptext18:	
  5406 ;; *************** function _TimeDelay_Reset *****************
  5407 ;; Defined at:
  5408 ;;		line 73 in file "src/TimeDelay.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  vTimer          1    wreg     PTR struct .
  5411 ;;		 -> delay_BC(7), delay_BB(7), delay_BA(7), delay_F2(7), 
  5412 ;;		 -> delay_F1(7), 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  vTimer          1    0[BANK0 ] PTR struct .
  5415 ;;		 -> delay_BC(7), delay_BB(7), delay_BA(7), delay_F2(7), 
  5416 ;;		 -> delay_F1(7), 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5426 ;;      Params:         0       0       0       0       0       0       0       0
  5427 ;;      Locals:         0       1       0       0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0
  5429 ;;      Totals:         0       1       0       0       0       0       0       0
  5430 ;;Total ram usage:        1 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    5
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_Keyboard_Process_A
  5437 ;;		_Keyboard_Process_B
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           
  5442                           ;psect for function _TimeDelay_Reset
  5443  0359                     _TimeDelay_Reset:	
  5444                           
  5445                           ;incstack = 0
  5446                           ; Regs used in _TimeDelay_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5447                           ;TimeDelay_Reset@vTimer stored from wreg
  5448  0359  0140               	movlb	0	; select bank0
  5449  035A  00D9               	movwf	TimeDelay_Reset@vTimer
  5450                           
  5451                           ;TimeDelay.c: 74: vTimer->status = 0;
  5452  035B  0859               	movf	TimeDelay_Reset@vTimer,w
  5453  035C  3E06               	addlw	6
  5454  035D  0086               	movwf	6
  5455  035E  0187               	clrf	7
  5456  035F  1001               	bcf	1,0
  5457  0360  0008               	return
  5458  0361                     __end_of_TimeDelay_Reset:	
  5459                           
  5460                           	psect	text19
  5461  0044                     __ptext19:	
  5462 ;; *************** function _NonBlockingDelay *****************
  5463 ;; Defined at:
  5464 ;;		line 82 in file "src/TimeDelay.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  vTimer          1    wreg     PTR struct .
  5467 ;;		 -> delay_ESC(7), delay_BC(7), delay_BB(7), delay_BA(7), 
  5468 ;;		 -> delay_F2(7), delay_F1(7), 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  vTimer          1    4[BANK0 ] PTR struct .
  5471 ;;		 -> delay_ESC(7), delay_BC(7), delay_BB(7), delay_BA(7), 
  5472 ;;		 -> delay_F2(7), delay_F1(7), 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      unsigned char 
  5475 ;; Registers used:
  5476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5482 ;;      Params:         0       0       0       0       0       0       0       0
  5483 ;;      Locals:         0       1       0       0       0       0       0       0
  5484 ;;      Temps:          0       4       0       0       0       0       0       0
  5485 ;;      Totals:         0       5       0       0       0       0       0       0
  5486 ;;Total ram usage:        5 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    5
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_Keyboard_Process_A
  5493 ;;		_Keyboard_Process_B
  5494 ;;		_Keyboard_Time_Out
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _NonBlockingDelay
  5500  0044                     _NonBlockingDelay:	
  5501                           
  5502                           ;incstack = 0
  5503                           ; Regs used in _NonBlockingDelay: [wreg-fsr1h+status,2+status,0]
  5504                           ;NonBlockingDelay@vTimer stored from wreg
  5505  0044  0140               	movlb	0	; select bank0
  5506  0045  00DD               	movwf	NonBlockingDelay@vTimer
  5507                           
  5508                           ;TimeDelay.c: 84: if (!vTimer->status) {
  5509  0046  085D               	movf	NonBlockingDelay@vTimer,w
  5510  0047  3E06               	addlw	6
  5511  0048  0086               	movwf	6
  5512  0049  0187               	clrf	7
  5513  004A  1801               	btfsc	1,0
  5514  004B  2870               	goto	l1372
  5515                           
  5516                           ;TimeDelay.c: 85: vTimer->down = ticks;
  5517  004C  085D               	movf	NonBlockingDelay@vTimer,w
  5518  004D  3E02               	addlw	2
  5519  004E  0086               	movwf	6
  5520  004F  0187               	clrf	7
  5521  0050  0829               	movf	_ticks,w	;volatile
  5522  0051  3FC0               	movwi [0]fsr1
  5523  0052  082A               	movf	_ticks+1,w	;volatile
  5524  0053  3FC1               	movwi [1]fsr1
  5525                           
  5526                           ;TimeDelay.c: 86: vTimer->up = vTimer->down + vTimer->delay;
  5527  0054  085D               	movf	NonBlockingDelay@vTimer,w
  5528  0055  0086               	movwf	6
  5529  0056  0187               	clrf	7
  5530  0057  085D               	movf	NonBlockingDelay@vTimer,w
  5531  0058  3E02               	addlw	2
  5532  0059  0084               	movwf	4
  5533  005A  0185               	clrf	5
  5534  005B  3F40               	moviw [0]fsr1
  5535  005C  0700               	addwf	0,w
  5536  005D  00D9               	movwf	??_NonBlockingDelay
  5537  005E  3101               	addfsr 0,1
  5538  005F  3F41               	moviw [1]fsr1
  5539  0060  3D00               	addwfc	0,w
  5540  0061  00DA               	movwf	??_NonBlockingDelay+1
  5541  0062  085D               	movf	NonBlockingDelay@vTimer,w
  5542  0063  3E04               	addlw	4
  5543  0064  0086               	movwf	6
  5544  0065  0187               	clrf	7
  5545  0066  0859               	movf	??_NonBlockingDelay,w
  5546  0067  3FC0               	movwi [0]fsr1
  5547  0068  085A               	movf	??_NonBlockingDelay+1,w
  5548  0069  3FC1               	movwi [1]fsr1
  5549                           
  5550                           ;TimeDelay.c: 87: vTimer->status = 1;
  5551  006A  085D               	movf	NonBlockingDelay@vTimer,w
  5552  006B  3E06               	addlw	6
  5553  006C  0086               	movwf	6
  5554  006D  0187               	clrf	7
  5555  006E  1401               	bsf	1,0
  5556                           
  5557                           ;TimeDelay.c: 88: } else if ((ticks > vTimer->up && ticks < vTimer->down) &&
  5558  006F  28E5               	goto	l493
  5559  0070                     l1372:	
  5560                           
  5561                           ;TimeDelay.c: 89: vTimer->down > vTimer->up) {
  5562  0070  085D               	movf	NonBlockingDelay@vTimer,w
  5563  0071  3E04               	addlw	4
  5564  0072  0086               	movwf	6
  5565  0073  0187               	clrf	7
  5566  0074  3F40               	moviw [0]fsr1
  5567  0075  00D9               	movwf	??_NonBlockingDelay
  5568  0076  3F41               	moviw [1]fsr1
  5569  0077  00DA               	movwf	??_NonBlockingDelay+1
  5570  0078  082A               	movf	_ticks+1,w	;volatile
  5571  0079  025A               	subwf	??_NonBlockingDelay+1,w
  5572  007A  1D03               	skipz
  5573  007B  287E               	goto	u615
  5574  007C  0829               	movf	_ticks,w	;volatile
  5575  007D  0259               	subwf	??_NonBlockingDelay,w
  5576  007E                     u615:	
  5577  007E  1803               	skipnc
  5578  007F  28A8               	goto	l1380
  5579  0080  085D               	movf	NonBlockingDelay@vTimer,w
  5580  0081  3E02               	addlw	2
  5581  0082  0086               	movwf	6
  5582  0083  0187               	clrf	7
  5583  0084  3F40               	moviw [0]fsr1
  5584  0085  00D9               	movwf	??_NonBlockingDelay
  5585  0086  3F41               	moviw [1]fsr1
  5586  0087  00DA               	movwf	??_NonBlockingDelay+1
  5587  0088  085A               	movf	??_NonBlockingDelay+1,w
  5588  0089  022A               	subwf	_ticks+1,w	;volatile
  5589  008A  1D03               	skipz
  5590  008B  288E               	goto	u625
  5591  008C  0859               	movf	??_NonBlockingDelay,w
  5592  008D  0229               	subwf	_ticks,w	;volatile
  5593  008E                     u625:	
  5594  008E  1803               	skipnc
  5595  008F  28A8               	goto	l1380
  5596  0090  085D               	movf	NonBlockingDelay@vTimer,w
  5597  0091  3E02               	addlw	2
  5598  0092  0086               	movwf	6
  5599  0093  0187               	clrf	7
  5600  0094  3F40               	moviw [0]fsr1
  5601  0095  00D9               	movwf	??_NonBlockingDelay
  5602  0096  3F41               	moviw [1]fsr1
  5603  0097  00DA               	movwf	??_NonBlockingDelay+1
  5604  0098  085D               	movf	NonBlockingDelay@vTimer,w
  5605  0099  3E04               	addlw	4
  5606  009A  0086               	movwf	6
  5607  009B  0187               	clrf	7
  5608  009C  3F40               	moviw [0]fsr1
  5609  009D  00DB               	movwf	??_NonBlockingDelay+2
  5610  009E  3F41               	moviw [1]fsr1
  5611  009F  00DC               	movwf	??_NonBlockingDelay+3
  5612  00A0  085A               	movf	??_NonBlockingDelay+1,w
  5613  00A1  025C               	subwf	??_NonBlockingDelay+3,w
  5614  00A2  1D03               	skipz
  5615  00A3  28A6               	goto	u635
  5616  00A4  0859               	movf	??_NonBlockingDelay,w
  5617  00A5  025B               	subwf	??_NonBlockingDelay+2,w
  5618  00A6                     u635:	
  5619  00A6  1C03               	btfss	3,0
  5620  00A7  28E0               	goto	l1386
  5621  00A8                     l1380:	
  5622                           ;TimeDelay.c: 91: } else if ((ticks > vTimer->up || ticks < vTimer->down) &&
  5623                           
  5624                           ;TimeDelay.c: 90: vTimer->status = 0;
  5625                           
  5626                           
  5627                           ;TimeDelay.c: 92: vTimer->down < vTimer->up) {
  5628  00A8  085D               	movf	NonBlockingDelay@vTimer,w
  5629  00A9  3E04               	addlw	4
  5630  00AA  0086               	movwf	6
  5631  00AB  0187               	clrf	7
  5632  00AC  3F40               	moviw [0]fsr1
  5633  00AD  00D9               	movwf	??_NonBlockingDelay
  5634  00AE  3F41               	moviw [1]fsr1
  5635  00AF  00DA               	movwf	??_NonBlockingDelay+1
  5636  00B0  082A               	movf	_ticks+1,w	;volatile
  5637  00B1  025A               	subwf	??_NonBlockingDelay+1,w
  5638  00B2  1D03               	skipz
  5639  00B3  28B6               	goto	u645
  5640  00B4  0829               	movf	_ticks,w	;volatile
  5641  00B5  0259               	subwf	??_NonBlockingDelay,w
  5642  00B6                     u645:	
  5643  00B6  1C03               	skipc
  5644  00B7  28C8               	goto	l1384
  5645  00B8  085D               	movf	NonBlockingDelay@vTimer,w
  5646  00B9  3E02               	addlw	2
  5647  00BA  0086               	movwf	6
  5648  00BB  0187               	clrf	7
  5649  00BC  3F40               	moviw [0]fsr1
  5650  00BD  00D9               	movwf	??_NonBlockingDelay
  5651  00BE  3F41               	moviw [1]fsr1
  5652  00BF  00DA               	movwf	??_NonBlockingDelay+1
  5653  00C0  085A               	movf	??_NonBlockingDelay+1,w
  5654  00C1  022A               	subwf	_ticks+1,w	;volatile
  5655  00C2  1D03               	skipz
  5656  00C3  28C6               	goto	u655
  5657  00C4  0859               	movf	??_NonBlockingDelay,w
  5658  00C5  0229               	subwf	_ticks,w	;volatile
  5659  00C6                     u655:	
  5660  00C6  1803               	skipnc
  5661  00C7  28E5               	goto	l493
  5662  00C8                     l1384:	
  5663  00C8  085D               	movf	NonBlockingDelay@vTimer,w
  5664  00C9  3E04               	addlw	4
  5665  00CA  0086               	movwf	6
  5666  00CB  0187               	clrf	7
  5667  00CC  3F40               	moviw [0]fsr1
  5668  00CD  00D9               	movwf	??_NonBlockingDelay
  5669  00CE  3F41               	moviw [1]fsr1
  5670  00CF  00DA               	movwf	??_NonBlockingDelay+1
  5671  00D0  085D               	movf	NonBlockingDelay@vTimer,w
  5672  00D1  3E02               	addlw	2
  5673  00D2  0086               	movwf	6
  5674  00D3  0187               	clrf	7
  5675  00D4  3F40               	moviw [0]fsr1
  5676  00D5  00DB               	movwf	??_NonBlockingDelay+2
  5677  00D6  3F41               	moviw [1]fsr1
  5678  00D7  00DC               	movwf	??_NonBlockingDelay+3
  5679  00D8  085A               	movf	??_NonBlockingDelay+1,w
  5680  00D9  025C               	subwf	??_NonBlockingDelay+3,w
  5681  00DA  1D03               	skipz
  5682  00DB  28DE               	goto	u665
  5683  00DC  0859               	movf	??_NonBlockingDelay,w
  5684  00DD  025B               	subwf	??_NonBlockingDelay+2,w
  5685  00DE                     u665:	
  5686  00DE  1803               	skipnc
  5687  00DF  28E5               	goto	l493
  5688  00E0                     l1386:	
  5689                           
  5690                           ;TimeDelay.c: 93: vTimer->status = 0;
  5691  00E0  085D               	movf	NonBlockingDelay@vTimer,w
  5692  00E1  3E06               	addlw	6
  5693  00E2  0086               	movwf	6
  5694  00E3  0187               	clrf	7
  5695  00E4  1001               	bcf	1,0
  5696  00E5                     l493:	
  5697                           
  5698                           ;TimeDelay.c: 94: }
  5699                           ;TimeDelay.c: 95: return vTimer->status;
  5700  00E5  085D               	movf	NonBlockingDelay@vTimer,w
  5701  00E6  3E06               	addlw	6
  5702  00E7  0086               	movwf	6
  5703  00E8  0187               	clrf	7
  5704  00E9  0801               	movf	1,w
  5705  00EA  3901               	andlw	1
  5706  00EB  0008               	return
  5707  00EC                     __end_of_NonBlockingDelay:	
  5708                           
  5709                           	psect	text20
  5710  00EC                     __ptext20:	
  5711 ;; *************** function _Keyboard_Initialize *****************
  5712 ;; Defined at:
  5713 ;;		line 117 in file "src/Keyboard.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5727 ;;      Params:         0       0       0       0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    6
  5734 ;; This function calls:
  5735 ;;		_TimeDelay_Set
  5736 ;; This function is called by:
  5737 ;;		_Keyboard_Tasks
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _Keyboard_Initialize
  5743  00EC                     _Keyboard_Initialize:	
  5744                           
  5745                           ;Keyboard.c: 118: TimeDelay_Set(&delay_F1, 3000U);
  5746                           
  5747                           ;incstack = 0
  5748                           ; Regs used in _Keyboard_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5749  00EC  30B8               	movlw	184
  5750  00ED  0140               	movlb	0	; select bank0
  5751  00EE  00D9               	movwf	TimeDelay_Set@delay
  5752  00EF  300B               	movlw	11
  5753  00F0  00DA               	movwf	TimeDelay_Set@delay+1
  5754  00F1  3052               	movlw	(low (_delay_F1| 0))& (0+255)
  5755  00F2  3183  2304  3180   	fcall	_TimeDelay_Set
  5756                           
  5757                           ;Keyboard.c: 119: TimeDelay_Set(&delay_F2, 5000U);
  5758  00F5  3088               	movlw	136
  5759  00F6  0140               	movlb	0	; select bank0
  5760  00F7  00D9               	movwf	TimeDelay_Set@delay
  5761  00F8  3013               	movlw	19
  5762  00F9  00DA               	movwf	TimeDelay_Set@delay+1
  5763  00FA  304B               	movlw	(low (_delay_F2| 0))& (0+255)
  5764  00FB  3183  2304  3180   	fcall	_TimeDelay_Set
  5765                           
  5766                           ;Keyboard.c: 120: TimeDelay_Set(&delay_BA, 10U);
  5767  00FE  300A               	movlw	10
  5768  00FF  0140               	movlb	0	; select bank0
  5769  0100  00D9               	movwf	TimeDelay_Set@delay
  5770  0101  3000               	movlw	0
  5771  0102  00DA               	movwf	TimeDelay_Set@delay+1
  5772  0103  3044               	movlw	(low (_delay_BA| 0))& (0+255)
  5773  0104  3183  2304  3180   	fcall	_TimeDelay_Set
  5774                           
  5775                           ;Keyboard.c: 121: TimeDelay_Set(&delay_BB, 10U);
  5776  0107  300A               	movlw	10
  5777  0108  0140               	movlb	0	; select bank0
  5778  0109  00D9               	movwf	TimeDelay_Set@delay
  5779  010A  3000               	movlw	0
  5780  010B  00DA               	movwf	TimeDelay_Set@delay+1
  5781  010C  303D               	movlw	(low (_delay_BB| 0))& (0+255)
  5782  010D  3183  2304  3180   	fcall	_TimeDelay_Set
  5783                           
  5784                           ;Keyboard.c: 122: TimeDelay_Set(&delay_BC, 10U);
  5785  0110  300A               	movlw	10
  5786  0111  0140               	movlb	0	; select bank0
  5787  0112  00D9               	movwf	TimeDelay_Set@delay
  5788  0113  3000               	movlw	0
  5789  0114  00DA               	movwf	TimeDelay_Set@delay+1
  5790  0115  3036               	movlw	(low (_delay_BC| 0))& (0+255)
  5791  0116  3183  2304  3180   	fcall	_TimeDelay_Set
  5792                           
  5793                           ;Keyboard.c: 123: TimeDelay_Set(&delay_ESC, 30000U);
  5794  0119  3030               	movlw	48
  5795  011A  0140               	movlb	0	; select bank0
  5796  011B  00D9               	movwf	TimeDelay_Set@delay
  5797  011C  3075               	movlw	117
  5798  011D  00DA               	movwf	TimeDelay_Set@delay+1
  5799  011E  302F               	movlw	(low (_delay_ESC| 0))& (0+255)
  5800  011F  3183  2304         	fcall	_TimeDelay_Set
  5801  0121  0008               	return
  5802  0122                     __end_of_Keyboard_Initialize:	
  5803                           
  5804                           	psect	text21
  5805  0304                     __ptext21:	
  5806 ;; *************** function _TimeDelay_Set *****************
  5807 ;; Defined at:
  5808 ;;		line 77 in file "src/TimeDelay.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  vTimer          1    wreg     PTR struct .
  5811 ;;		 -> delay_ESC(7), delay_BC(7), delay_BB(7), delay_BA(7), 
  5812 ;;		 -> delay_F2(7), delay_F1(7), 
  5813 ;;  delay           2    0[BANK0 ] unsigned int 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  vTimer          1    2[BANK0 ] PTR struct .
  5816 ;;		 -> delay_ESC(7), delay_BC(7), delay_BB(7), delay_BA(7), 
  5817 ;;		 -> delay_F2(7), delay_F1(7), 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5827 ;;      Params:         0       2       0       0       0       0       0       0
  5828 ;;      Locals:         0       1       0       0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0       0
  5830 ;;      Totals:         0       3       0       0       0       0       0       0
  5831 ;;Total ram usage:        3 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    5
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_Keyboard_Initialize
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function _TimeDelay_Set
  5843  0304                     _TimeDelay_Set:	
  5844                           
  5845                           ;incstack = 0
  5846                           ; Regs used in _TimeDelay_Set: [wreg+fsr1l+fsr1h+status,2+status,0]
  5847                           ;TimeDelay_Set@vTimer stored from wreg
  5848  0304  0140               	movlb	0	; select bank0
  5849  0305  00DB               	movwf	TimeDelay_Set@vTimer
  5850                           
  5851                           ;TimeDelay.c: 78: vTimer->delay = delay;
  5852  0306  085B               	movf	TimeDelay_Set@vTimer,w
  5853  0307  0086               	movwf	6
  5854  0308  0187               	clrf	7
  5855  0309  0859               	movf	TimeDelay_Set@delay,w
  5856  030A  3FC0               	movwi [0]fsr1
  5857  030B  085A               	movf	TimeDelay_Set@delay+1,w
  5858  030C  3FC1               	movwi [1]fsr1
  5859                           
  5860                           ;TimeDelay.c: 79: vTimer->status = 0;
  5861  030D  085B               	movf	TimeDelay_Set@vTimer,w
  5862  030E  3E06               	addlw	6
  5863  030F  0086               	movwf	6
  5864  0310  0187               	clrf	7
  5865  0311  1001               	bcf	1,0
  5866  0312  0008               	return
  5867  0313                     __end_of_TimeDelay_Set:	
  5868                           
  5869                           	psect	intentry
  5870  0004                     __pintentry:	
  5871 ;; *************** function _INTERRUPT_InterruptManager *****************
  5872 ;; Defined at:
  5873 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;		None
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5887 ;;      Params:         0       0       0       0       0       0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0
  5889 ;;      Temps:          1       0       0       0       0       0       0       0
  5890 ;;      Totals:         1       0       0       0       0       0       0       0
  5891 ;;Total ram usage:        1 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    4
  5894 ;; This function calls:
  5895 ;;		_EUSART2_Receive_ISR
  5896 ;;		_EUSART2_Transmit_ISR
  5897 ;;		_INT_ISR
  5898 ;;		_TMR0_ISR
  5899 ;; This function is called by:
  5900 ;;		Interrupt level 1
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904  0004                     _INTERRUPT_InterruptManager:	
  5905                           
  5906                           ;incstack = 0
  5907  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5908                           
  5909                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5910  0005  3180               	pagesel	$
  5911  0006  0140               	movlb	0	; select bank0
  5912  0007  087F               	movf	127,w
  5913  0008  00F9               	movwf	??_INTERRUPT_InterruptManager
  5914                           
  5915                           ;interrupt_manager.c: 54: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
  5916  0009  014E               	movlb	14	; select bank14
  5917  000A  1816               	btfsc	22,0	;volatile
  5918  000B  1C0C               	btfss	12,0	;volatile
  5919  000C  2811               	goto	i1l130
  5920                           
  5921                           ;interrupt_manager.c: 55: {
  5922                           ;interrupt_manager.c: 56: INT_ISR();
  5923  000D  3183  237E  3180   	fcall	_INT_ISR
  5924                           
  5925                           ;interrupt_manager.c: 57: }
  5926  0010  2826               	goto	i1l140
  5927  0011                     i1l130:	
  5928                           
  5929                           ;interrupt_manager.c: 58: else if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  5930  0011  1A96               	btfsc	22,5	;volatile
  5931  0012  1E8C               	btfss	12,5	;volatile
  5932  0013  2818               	goto	i1l132
  5933                           
  5934                           ;interrupt_manager.c: 59: {
  5935                           ;interrupt_manager.c: 60: TMR0_ISR();
  5936  0014  3183  2379  3180   	fcall	_TMR0_ISR
  5937                           
  5938                           ;interrupt_manager.c: 61: }
  5939  0017  2826               	goto	i1l140
  5940  0018                     i1l132:	
  5941                           
  5942                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1)
  5943  0018  1F0B               	btfss	11,6	;volatile
  5944  0019  2826               	goto	i1l140
  5945                           
  5946                           ;interrupt_manager.c: 63: {
  5947                           ;interrupt_manager.c: 64: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
  5948  001A  1B99               	btfsc	25,7	;volatile
  5949  001B  1F8F               	btfss	15,7	;volatile
  5950  001C  2821               	goto	i1l135
  5951                           
  5952                           ;interrupt_manager.c: 65: {
  5953                           ;interrupt_manager.c: 66: EUSART2_Receive_ISR();
  5954  001D  3182  2293  3180   	fcall	_EUSART2_Receive_ISR
  5955                           
  5956                           ;interrupt_manager.c: 67: }
  5957  0020  2826               	goto	i1l140
  5958  0021                     i1l135:	
  5959                           
  5960                           ;interrupt_manager.c: 68: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  5961  0021  1B19               	btfsc	25,6	;volatile
  5962  0022  1F0F               	btfss	15,6	;volatile
  5963  0023  2826               	goto	i1l140
  5964                           
  5965                           ;interrupt_manager.c: 69: {
  5966                           ;interrupt_manager.c: 70: EUSART2_Transmit_ISR();
  5967  0024  3182  225B         	fcall	_EUSART2_Transmit_ISR
  5968  0026                     i1l140:	
  5969                           ;interrupt_manager.c: 77: else
  5970                           ;interrupt_manager.c: 78: {
  5971                           
  5972                           ;interrupt_manager.c: 75: }
  5973                           ;interrupt_manager.c: 76: }
  5974                           
  5975                           ;interrupt_manager.c: 72: else
  5976                           ;interrupt_manager.c: 73: {
  5977                           
  5978                           ;interrupt_manager.c: 71: }
  5979                           
  5980  0026  0879               	movf	??_INTERRUPT_InterruptManager,w
  5981  0027  0140               	movlb	0	; select bank0
  5982  0028  00FF               	movwf	127
  5983  0029  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5984  002A  0009               	retfie
  5985  002B                     __end_of_INTERRUPT_InterruptManager:	
  5986                           
  5987                           	psect	text23
  5988  0379                     __ptext23:	
  5989 ;; *************** function _TMR0_ISR *****************
  5990 ;; Defined at:
  5991 ;;		line 120 in file "mcc_generated_files/tmr0.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, pclath, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6005 ;;      Params:         0       0       0       0       0       0       0       0
  6006 ;;      Locals:         0       0       0       0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0
  6008 ;;      Totals:         0       0       0       0       0       0       0       0
  6009 ;;Total ram usage:        0 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    2
  6012 ;; This function calls:
  6013 ;;		_TMR0_CallBack
  6014 ;; This function is called by:
  6015 ;;		_INTERRUPT_InterruptManager
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _TMR0_ISR
  6021  0379                     _TMR0_ISR:	
  6022                           
  6023                           ;tmr0.c: 123: PIR0bits.TMR0IF = 0;
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6027  0379  014E               	movlb	14	; select bank14
  6028  037A  128C               	bcf	12,5	;volatile
  6029                           
  6030                           ;tmr0.c: 126: TMR0_CallBack();
  6031  037B  3183  232B         	fcall	_TMR0_CallBack
  6032  037D  0008               	return
  6033  037E                     __end_of_TMR0_ISR:	
  6034                           
  6035                           	psect	text24
  6036  032B                     __ptext24:	
  6037 ;; *************** function _TMR0_CallBack *****************
  6038 ;; Defined at:
  6039 ;;		line 131 in file "mcc_generated_files/tmr0.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;		None
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6053 ;;      Params:         0       0       0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0
  6056 ;;      Totals:         0       0       0       0       0       0       0       0
  6057 ;;Total ram usage:        0 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    1
  6060 ;; This function calls:
  6061 ;;		Absolute function
  6062 ;;		_TMR0_DefaultInterruptHandler
  6063 ;;		_Ticker_Handler
  6064 ;; This function is called by:
  6065 ;;		_TMR0_ISR
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function _TMR0_CallBack
  6071  032B                     _TMR0_CallBack:	
  6072                           
  6073                           ;tmr0.c: 135: if(TMR0_InterruptHandler)
  6074                           
  6075                           ;incstack = 0
  6076                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6077  032B  0140               	movlb	0	; select bank0
  6078  032C  0860               	movf	_TMR0_InterruptHandler,w
  6079  032D  0461               	iorwf	_TMR0_InterruptHandler+1,w
  6080  032E  1903               	btfsc	3,2
  6081  032F  0008               	return
  6082                           
  6083                           ;tmr0.c: 136: {
  6084                           ;tmr0.c: 137: TMR0_InterruptHandler();
  6085  0330  0861               	movf	_TMR0_InterruptHandler+1,w
  6086  0331  008A               	movwf	10
  6087  0332  0860               	movf	_TMR0_InterruptHandler,w
  6088  0333  000A               	callw
  6089  0334  3183               	pagesel	$
  6090  0335  0008               	return
  6091  0336                     __end_of_TMR0_CallBack:	
  6092                           
  6093                           	psect	text25
  6094  0387                     __ptext25:	
  6095 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6096 ;; Defined at:
  6097 ;;		line 145 in file "mcc_generated_files/tmr0.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;		None
  6100 ;; Auto vars:     Size  Location     Type
  6101 ;;		None
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      void 
  6104 ;; Registers used:
  6105 ;;		None
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6111 ;;      Params:         0       0       0       0       0       0       0       0
  6112 ;;      Locals:         0       0       0       0       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0       0       0       0
  6114 ;;      Totals:         0       0       0       0       0       0       0       0
  6115 ;;Total ram usage:        0 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_TMR0_Initialize
  6121 ;;		_TMR0_CallBack
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           
  6126                           ;psect for function _TMR0_DefaultInterruptHandler
  6127  0387                     _TMR0_DefaultInterruptHandler:	
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6131  0387  0008               	return
  6132  0388                     __end_of_TMR0_DefaultInterruptHandler:	
  6133                           
  6134                           	psect	text26
  6135  0373                     __ptext26:	
  6136 ;; *************** function _Ticker_Handler *****************
  6137 ;; Defined at:
  6138 ;;		line 69 in file "src/TimeDelay.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;		None
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6152 ;;      Params:         0       0       0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_TimeDelay_Initialize
  6162 ;;		_TMR0_CallBack
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           
  6167                           ;psect for function _Ticker_Handler
  6168  0373                     _Ticker_Handler:	
  6169                           
  6170                           ;TimeDelay.c: 70: ticks++;
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in _Ticker_Handler: [wreg]
  6174  0373  3001               	movlw	1
  6175  0374  0140               	movlb	0	; select bank0
  6176  0375  07A9               	addwf	_ticks,f	;volatile
  6177  0376  3000               	movlw	0
  6178  0377  3DAA               	addwfc	_ticks+1,f	;volatile
  6179  0378  0008               	return
  6180  0379                     __end_of_Ticker_Handler:	
  6181                           
  6182                           	psect	text27
  6183  037E                     __ptext27:	
  6184 ;; *************** function _INT_ISR *****************
  6185 ;; Defined at:
  6186 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;		None
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      void 
  6193 ;; Registers used:
  6194 ;;		wreg, status,2, status,0, pclath, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6200 ;;      Params:         0       0       0       0       0       0       0       0
  6201 ;;      Locals:         0       0       0       0       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0       0       0       0
  6203 ;;      Totals:         0       0       0       0       0       0       0       0
  6204 ;;Total ram usage:        0 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    3
  6207 ;; This function calls:
  6208 ;;		_INT_CallBack
  6209 ;; This function is called by:
  6210 ;;		_INTERRUPT_InterruptManager
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _INT_ISR
  6216  037E                     _INT_ISR:	
  6217                           
  6218                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  6222  037E  014E               	movlb	14	; select bank14
  6223  037F  100C               	bcf	12,0	;volatile
  6224                           
  6225                           ;ext_int.c: 37: INT_CallBack();
  6226  0380  3183  2336         	fcall	_INT_CallBack
  6227  0382  0008               	return
  6228  0383                     __end_of_INT_ISR:	
  6229                           
  6230                           	psect	text28
  6231  0336                     __ptext28:	
  6232 ;; *************** function _INT_CallBack *****************
  6233 ;; Defined at:
  6234 ;;		line 40 in file "mcc_generated_files/ext_int.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6248 ;;      Params:         0       0       0       0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    2
  6255 ;; This function calls:
  6256 ;;		Absolute function
  6257 ;;		_INT_DefaultInterruptHandler
  6258 ;; This function is called by:
  6259 ;;		_INT_ISR
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           
  6264                           ;psect for function _INT_CallBack
  6265  0336                     _INT_CallBack:	
  6266                           
  6267                           ;ext_int.c: 42: if (INT_InterruptHandler) {
  6268                           
  6269                           ;incstack = 0
  6270                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6271  0336  0140               	movlb	0	; select bank0
  6272  0337  0862               	movf	_INT_InterruptHandler,w
  6273  0338  0463               	iorwf	_INT_InterruptHandler+1,w
  6274  0339  1903               	btfsc	3,2
  6275  033A  0008               	return
  6276                           
  6277                           ;ext_int.c: 43: INT_InterruptHandler();
  6278  033B  0863               	movf	_INT_InterruptHandler+1,w
  6279  033C  008A               	movwf	10
  6280  033D  0862               	movf	_INT_InterruptHandler,w
  6281  033E  000A               	callw
  6282  033F  3183               	pagesel	$
  6283  0340  0008               	return
  6284  0341                     __end_of_INT_CallBack:	
  6285                           
  6286                           	psect	text29
  6287  0180                     __ptext29:	
  6288 ;; *************** function _INT_DefaultInterruptHandler *****************
  6289 ;; Defined at:
  6290 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6304 ;;      Params:         0       0       0       0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0
  6306 ;;      Temps:          1       0       0       0       0       0       0       0
  6307 ;;      Totals:         1       0       0       0       0       0       0       0
  6308 ;;Total ram usage:        1 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    1
  6311 ;; This function calls:
  6312 ;;		_ADC_GetConversion
  6313 ;;		___lwdiv
  6314 ;; This function is called by:
  6315 ;;		_EXT_INT_Initialize
  6316 ;;		_INT_CallBack
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function _INT_DefaultInterruptHandler
  6322  0180                     _INT_DefaultInterruptHandler:	
  6323                           
  6324                           ;ext_int.c: 54: ADCval.adcResult1 = ADC_GetConversion(ANA);
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in _INT_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  6328  0180  3004               	movlw	4
  6329  0181  3182  22AE  3181   	fcall	_ADC_GetConversion
  6330  0184  0871               	movf	?_ADC_GetConversion+1,w
  6331  0185  0140               	movlb	0	; select bank0
  6332  0186  00A1               	movwf	_ADCval+1
  6333  0187  0870               	movf	?_ADC_GetConversion,w
  6334  0188  00A0               	movwf	_ADCval
  6335                           
  6336                           ;ext_int.c: 55: ADCval.adcResult_Sum = ADCval.adcResult_Sum + ADCval.adcResult1;
  6337  0189  0820               	movf	_ADCval,w
  6338  018A  0722               	addwf	_ADCval+2,w
  6339  018B  00A2               	movwf	_ADCval+2
  6340  018C  0821               	movf	_ADCval+1,w
  6341  018D  3D23               	addwfc	_ADCval+3,w
  6342  018E  00A3               	movwf	_ADCval+3
  6343                           
  6344                           ;ext_int.c: 56: ADCval.adccontSample++;
  6345  018F  3001               	movlw	1
  6346  0190  00F8               	movwf	??_INT_DefaultInterruptHandler
  6347  0191  0878               	movf	??_INT_DefaultInterruptHandler,w
  6348  0192  07A4               	addwf	_ADCval+4,f
  6349                           
  6350                           ;ext_int.c: 57: if (ADCval.adccontSample >= 6) {
  6351  0193  3006               	movlw	6
  6352  0194  0224               	subwf	_ADCval+4,w
  6353  0195  1C03               	skipc
  6354  0196  0008               	return
  6355                           
  6356                           ;ext_int.c: 58: ADCval.adcResultTot = ADCval.adcResult_Sum / 6;
  6357  0197  3006               	movlw	6
  6358  0198  00F0               	movwf	___lwdiv@divisor
  6359  0199  3000               	movlw	0
  6360  019A  00F1               	movwf	___lwdiv@divisor+1
  6361  019B  0823               	movf	_ADCval+3,w
  6362  019C  00F3               	movwf	___lwdiv@dividend+1
  6363  019D  0822               	movf	_ADCval+2,w
  6364  019E  00F2               	movwf	___lwdiv@dividend
  6365  019F  3181  2122         	fcall	___lwdiv
  6366  01A1  0871               	movf	?___lwdiv+1,w
  6367  01A2  0140               	movlb	0	; select bank0
  6368  01A3  00A6               	movwf	_ADCval+6
  6369  01A4  0870               	movf	?___lwdiv,w
  6370  01A5  00A5               	movwf	_ADCval+5
  6371                           
  6372                           ;ext_int.c: 59: ADCval.adcResult_Sum = 0;
  6373  01A6  01A2               	clrf	_ADCval+2
  6374  01A7  01A3               	clrf	_ADCval+3
  6375                           
  6376                           ;ext_int.c: 60: ADCval.adccontSample = 0;
  6377  01A8  01A4               	clrf	_ADCval+4
  6378  01A9  0008               	return
  6379  01AA                     __end_of_INT_DefaultInterruptHandler:	
  6380                           
  6381                           	psect	text30
  6382  0122                     __ptext30:	
  6383 ;; *************** function ___lwdiv *****************
  6384 ;; Defined at:
  6385 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  divisor         2    0[COMMON] unsigned int 
  6388 ;;  dividend        2    2[COMMON] unsigned int 
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;  quotient        2    5[COMMON] unsigned int 
  6391 ;;  counter         1    7[COMMON] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  2    0[COMMON] unsigned int 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6401 ;;      Params:         4       0       0       0       0       0       0       0
  6402 ;;      Locals:         3       0       0       0       0       0       0       0
  6403 ;;      Temps:          1       0       0       0       0       0       0       0
  6404 ;;      Totals:         8       0       0       0       0       0       0       0
  6405 ;;Total ram usage:        8 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_INT_DefaultInterruptHandler
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           
  6415                           ;psect for function ___lwdiv
  6416  0122                     ___lwdiv:	
  6417                           
  6418                           ;incstack = 0
  6419                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6420  0122  01F5               	clrf	___lwdiv@quotient
  6421  0123  01F6               	clrf	___lwdiv@quotient+1
  6422  0124  0870               	movf	___lwdiv@divisor,w
  6423  0125  0471               	iorwf	___lwdiv@divisor+1,w
  6424  0126  1903               	btfsc	3,2
  6425  0127  2951               	goto	i1l1338
  6426  0128  01F7               	clrf	___lwdiv@counter
  6427  0129  0AF7               	incf	___lwdiv@counter,f
  6428  012A                     i1l1326:	
  6429  012A  1BF1               	btfsc	___lwdiv@divisor+1,7
  6430  012B  2936               	goto	i1l1328
  6431  012C  3001               	movlw	1
  6432  012D                     u53_25:	
  6433  012D  35F0               	lslf	___lwdiv@divisor,f
  6434  012E  0DF1               	rlf	___lwdiv@divisor+1,f
  6435  012F  0B89               	decfsz	9,f
  6436  0130  292D               	goto	u53_25
  6437  0131  3001               	movlw	1
  6438  0132  00F4               	movwf	??___lwdiv
  6439  0133  0874               	movf	??___lwdiv,w
  6440  0134  07F7               	addwf	___lwdiv@counter,f
  6441  0135  292A               	goto	i1l1326
  6442  0136                     i1l1328:	
  6443  0136  3001               	movlw	1
  6444  0137                     u55_25:	
  6445  0137  35F5               	lslf	___lwdiv@quotient,f
  6446  0138  0DF6               	rlf	___lwdiv@quotient+1,f
  6447  0139  0B89               	decfsz	9,f
  6448  013A  2937               	goto	u55_25
  6449  013B  0871               	movf	___lwdiv@divisor+1,w
  6450  013C  0273               	subwf	___lwdiv@dividend+1,w
  6451  013D  1D03               	skipz
  6452  013E  2941               	goto	u56_25
  6453  013F  0870               	movf	___lwdiv@divisor,w
  6454  0140  0272               	subwf	___lwdiv@dividend,w
  6455  0141                     u56_25:	
  6456  0141  1C03               	skipc
  6457  0142  2948               	goto	i1l1334
  6458  0143  0870               	movf	___lwdiv@divisor,w
  6459  0144  02F2               	subwf	___lwdiv@dividend,f
  6460  0145  0871               	movf	___lwdiv@divisor+1,w
  6461  0146  3BF3               	subwfb	___lwdiv@dividend+1,f
  6462  0147  1475               	bsf	___lwdiv@quotient,0
  6463  0148                     i1l1334:	
  6464  0148  3001               	movlw	1
  6465  0149                     u57_25:	
  6466  0149  36F1               	lsrf	___lwdiv@divisor+1,f
  6467  014A  0CF0               	rrf	___lwdiv@divisor,f
  6468  014B  0B89               	decfsz	9,f
  6469  014C  2949               	goto	u57_25
  6470  014D  3001               	movlw	1
  6471  014E  02F7               	subwf	___lwdiv@counter,f
  6472  014F  1D03               	btfss	3,2
  6473  0150  2936               	goto	i1l1328
  6474  0151                     i1l1338:	
  6475  0151  0876               	movf	___lwdiv@quotient+1,w
  6476  0152  00F1               	movwf	?___lwdiv+1
  6477  0153  0875               	movf	___lwdiv@quotient,w
  6478  0154  00F0               	movwf	?___lwdiv
  6479  0155  0008               	return
  6480  0156                     __end_of___lwdiv:	
  6481                           
  6482                           	psect	text31
  6483  02AE                     __ptext31:	
  6484 ;; *************** function _ADC_GetConversion *****************
  6485 ;; Defined at:
  6486 ;;		line 107 in file "mcc_generated_files/adc.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  channel         1    wreg     enum E8108
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  channel         1    3[COMMON] enum E8108
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  2    0[COMMON] unsigned int 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6500 ;;      Params:         2       0       0       0       0       0       0       0
  6501 ;;      Locals:         1       0       0       0       0       0       0       0
  6502 ;;      Temps:          1       0       0       0       0       0       0       0
  6503 ;;      Totals:         4       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        4 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_INT_DefaultInterruptHandler
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           
  6514                           ;psect for function _ADC_GetConversion
  6515  02AE                     _ADC_GetConversion:	
  6516                           
  6517                           ;incstack = 0
  6518                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6519                           ;ADC_GetConversion@channel stored from wreg
  6520  02AE  00F3               	movwf	ADC_GetConversion@channel
  6521                           
  6522                           ;adc.c: 110: ADCON0bits.CHS = channel;
  6523  02AF  0873               	movf	ADC_GetConversion@channel,w
  6524  02B0  00F2               	movwf	??_ADC_GetConversion
  6525  02B1  0DF2               	rlf	??_ADC_GetConversion,f
  6526  02B2  0DF2               	rlf	??_ADC_GetConversion,f
  6527  02B3  0141               	movlb	1	; select bank1
  6528  02B4  081D               	movf	29,w	;volatile
  6529  02B5  0672               	xorwf	??_ADC_GetConversion,w
  6530  02B6  3903               	andlw	-253
  6531  02B7  0672               	xorwf	??_ADC_GetConversion,w
  6532  02B8  009D               	movwf	29	;volatile
  6533                           
  6534                           ;adc.c: 113: ADCON0bits.ADON = 1;
  6535  02B9  141D               	bsf	29,0	;volatile
  6536                           
  6537                           ;adc.c: 116: _delay((unsigned long)((5)*(32000000/4000000.0)));
  6538  02BA  300D               	movlw	13
  6539  02BB                     u101_27:	
  6540  02BB  0B89               	decfsz	9,f
  6541  02BC  2ABB               	goto	u101_27
  6542  02BD  0000               	nop
  6543                           
  6544                           ;adc.c: 119: ADCON0bits.GOnDONE = 1;
  6545  02BE  0141               	movlb	1	; select bank1
  6546  02BF  149D               	bsf	29,1	;volatile
  6547  02C0                     i1l279:	
  6548                           ;adc.c: 123: {
  6549                           
  6550                           ;adc.c: 122: while (ADCON0bits.GOnDONE)
  6551                           
  6552  02C0  189D               	btfsc	29,1	;volatile
  6553  02C1  2AC0               	goto	i1l279
  6554                           
  6555                           ;adc.c: 124: }
  6556                           ;adc.c: 127: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6557  02C2  081C               	movf	28,w	;volatile
  6558  02C3  00F1               	movwf	?_ADC_GetConversion+1
  6559  02C4  081B               	movf	27,w	;volatile
  6560  02C5  00F0               	movwf	?_ADC_GetConversion
  6561  02C6  0008               	return
  6562  02C7                     __end_of_ADC_GetConversion:	
  6563                           
  6564                           	psect	text32
  6565  025B                     __ptext32:	
  6566 ;; *************** function _EUSART2_Transmit_ISR *****************
  6567 ;; Defined at:
  6568 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6582 ;;      Params:         0       0       0       0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0
  6584 ;;      Temps:          1       0       0       0       0       0       0       0
  6585 ;;      Totals:         1       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        1 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_INTERRUPT_InterruptManager
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           
  6596                           ;psect for function _EUSART2_Transmit_ISR
  6597  025B                     _EUSART2_Transmit_ISR:	
  6598                           
  6599                           ;eusart2.c: 165: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
  6600                           
  6601                           ;incstack = 0
  6602                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6603  025B  3010               	movlw	16
  6604  025C  0140               	movlb	0	; select bank0
  6605  025D  0264               	subwf	_eusart2TxBufferRemaining,w	;volatile
  6606  025E  1803               	skipnc
  6607  025F  2A75               	goto	i1l202
  6608                           
  6609                           ;eusart2.c: 166: {
  6610                           ;eusart2.c: 167: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  6611  0260  087C               	movf	_eusart2TxTail,w
  6612  0261  3EE0               	addlw	(low (_eusart2TxBuffer| 0))& (0+255)
  6613  0262  0086               	movwf	6
  6614  0263  0187               	clrf	7
  6615  0264  0801               	movf	1,w
  6616  0265  0154               	movlb	20	; select bank20
  6617  0266  009A               	movwf	26	;volatile
  6618  0267  3001               	movlw	1
  6619  0268  00F0               	movwf	??_EUSART2_Transmit_ISR
  6620  0269  0870               	movf	??_EUSART2_Transmit_ISR,w
  6621  026A  07FC               	addwf	_eusart2TxTail,f	;volatile
  6622                           
  6623                           ;eusart2.c: 168: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
  6624  026B  3010               	movlw	16
  6625  026C  027C               	subwf	_eusart2TxTail,w	;volatile
  6626  026D  1803               	btfsc	3,0
  6627                           
  6628                           ;eusart2.c: 169: {
  6629                           ;eusart2.c: 170: eusart2TxTail = 0;
  6630  026E  01FC               	clrf	_eusart2TxTail	;volatile
  6631                           
  6632                           ;eusart2.c: 171: }
  6633                           ;eusart2.c: 172: eusart2TxBufferRemaining++;
  6634  026F  3001               	movlw	1
  6635  0270  00F0               	movwf	??_EUSART2_Transmit_ISR
  6636  0271  0870               	movf	??_EUSART2_Transmit_ISR,w
  6637  0272  0140               	movlb	0	; select bank0
  6638  0273  07E4               	addwf	_eusart2TxBufferRemaining,f	;volatile
  6639                           
  6640                           ;eusart2.c: 173: }
  6641  0274  0008               	return
  6642  0275                     i1l202:	
  6643                           
  6644                           ;eusart2.c: 174: else
  6645                           ;eusart2.c: 175: {
  6646                           ;eusart2.c: 176: PIE3bits.TX2IE = 0;
  6647  0275  014E               	movlb	14	; select bank14
  6648  0276  1319               	bcf	25,6	;volatile
  6649  0277  0008               	return
  6650  0278                     __end_of_EUSART2_Transmit_ISR:	
  6651                           
  6652                           	psect	text33
  6653  0293                     __ptext33:	
  6654 ;; *************** function _EUSART2_Receive_ISR *****************
  6655 ;; Defined at:
  6656 ;;		line 180 in file "mcc_generated_files/eusart2.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;		None
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6670 ;;      Params:         0       0       0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0
  6672 ;;      Temps:          1       0       0       0       0       0       0       0
  6673 ;;      Totals:         1       0       0       0       0       0       0       0
  6674 ;;Total ram usage:        1 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_INTERRUPT_InterruptManager
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           
  6684                           ;psect for function _EUSART2_Receive_ISR
  6685  0293                     _EUSART2_Receive_ISR:	
  6686                           
  6687                           ;eusart2.c: 183: if(1 == RC2STAbits.OERR)
  6688                           
  6689                           ;incstack = 0
  6690                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  6691  0293  0154               	movlb	20	; select bank20
  6692  0294  1C9D               	btfss	29,1	;volatile
  6693  0295  2A98               	goto	i1l1544
  6694                           
  6695                           ;eusart2.c: 184: {
  6696                           ;eusart2.c: 187: RC2STAbits.CREN = 0;
  6697  0296  121D               	bcf	29,4	;volatile
  6698                           
  6699                           ;eusart2.c: 188: RC2STAbits.CREN = 1;
  6700  0297  161D               	bsf	29,4	;volatile
  6701  0298                     i1l1544:	
  6702                           
  6703                           ;eusart2.c: 189: }
  6704                           ;eusart2.c: 192: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  6705  0298  0819               	movf	25,w	;volatile
  6706  0299  00F0               	movwf	??_EUSART2_Receive_ISR
  6707  029A  087B               	movf	_eusart2RxHead,w
  6708  029B  3EA0               	addlw	(low (_eusart2RxBuffer| 0))& (0+255)
  6709  029C  0086               	movwf	6
  6710  029D  0187               	clrf	7
  6711  029E  0870               	movf	??_EUSART2_Receive_ISR,w
  6712  029F  0081               	movwf	1
  6713  02A0  3001               	movlw	1
  6714  02A1  00F0               	movwf	??_EUSART2_Receive_ISR
  6715  02A2  0870               	movf	??_EUSART2_Receive_ISR,w
  6716  02A3  07FB               	addwf	_eusart2RxHead,f	;volatile
  6717                           
  6718                           ;eusart2.c: 193: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
  6719  02A4  3040               	movlw	64
  6720  02A5  027B               	subwf	_eusart2RxHead,w	;volatile
  6721  02A6  1803               	btfsc	3,0
  6722                           
  6723                           ;eusart2.c: 194: {
  6724                           ;eusart2.c: 195: eusart2RxHead = 0;
  6725  02A7  01FB               	clrf	_eusart2RxHead	;volatile
  6726                           
  6727                           ;eusart2.c: 196: }
  6728                           ;eusart2.c: 197: eusart2RxCount++;
  6729  02A8  3001               	movlw	1
  6730  02A9  00F0               	movwf	??_EUSART2_Receive_ISR
  6731  02AA  0870               	movf	??_EUSART2_Receive_ISR,w
  6732  02AB  0140               	movlb	0	; select bank0
  6733  02AC  07AB               	addwf	_eusart2RxCount,f	;volatile
  6734  02AD  0008               	return
  6735  02AE                     __end_of_EUSART2_Receive_ISR:	
  6736  007E                     btemp	set	126	;btemp
  6737  007E                     int$flags	set	126
  6738  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         141
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      7      69
    BANK1            80      0      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    NonBlockingDelay@vTimer	PTR struct . size(1) Largest target is 7
		 -> delay_ESC(BANK0[7]), delay_BC(BANK0[7]), delay_BB(BANK0[7]), delay_BA(BANK0[7]), 
		 -> delay_F2(BANK0[7]), delay_F1(BANK0[7]), 

    TimeDelay_Set@vTimer	PTR struct . size(1) Largest target is 7
		 -> delay_ESC(BANK0[7]), delay_BC(BANK0[7]), delay_BB(BANK0[7]), delay_BA(BANK0[7]), 
		 -> delay_F2(BANK0[7]), delay_F1(BANK0[7]), 

    TimeDelay_Reset@vTimer	PTR struct . size(1) Largest target is 7
		 -> delay_BC(BANK0[7]), delay_BB(BANK0[7]), delay_BA(BANK0[7]), delay_F2(BANK0[7]), 
		 -> delay_F1(BANK0[7]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Ticker_Handler(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Ticker_Handler(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INT_CallBack->_INT_DefaultInterruptHandler
    _INT_DefaultInterruptHandler->___lwdiv

Critical Paths under _main in BANK0

    _main->_Keyboard_Tasks
    _TimeDelay_Initialize->_TMR0_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _Keyboard_Tasks->_Keyboard_Process_A
    _Keyboard_Process_B->_NonBlockingDelay
    _Keyboard_Process_A->_NonBlockingDelay
    _Keyboard_Initialize->_TimeDelay_Set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2468
                     _Keyboard_Tasks
                       _MB1040_Tasks
                  _SYSTEM_Initialize
                    _TimeDelay_Tasks
 ---------------------------------------------------------------------------------
 (1) _TimeDelay_Tasks                                      1     1      0     150
                                              2 BANK0      1     1      0
               _TimeDelay_Initialize
 ---------------------------------------------------------------------------------
 (2) _TimeDelay_Initialize                                 0     0      0     150
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     236
                     _ADC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
                  _MB1040_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     150
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MB1040_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MB1040_Tasks                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keyboard_Tasks                                       1     1      0    2082
                                              6 BANK0      1     1      0
                _Keyboard_Initialize
                 _Keyboard_Process_A
                 _Keyboard_Process_B
 ---------------------------------------------------------------------------------
 (2) _Keyboard_Process_B                                   0     0      0     726
                   _NonBlockingDelay
                    _TimeDelay_Reset
 ---------------------------------------------------------------------------------
 (2) _Keyboard_Process_A                                   1     1      0     726
                                              5 BANK0      1     1      0
                   _NonBlockingDelay
                    _TimeDelay_Reset
 ---------------------------------------------------------------------------------
 (3) _TimeDelay_Reset                                      1     1      0     172
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _NonBlockingDelay                                     5     5      0     554
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Keyboard_Initialize                                  0     0      0     630
                      _TimeDelay_Set
 ---------------------------------------------------------------------------------
 (3) _TimeDelay_Set                                        3     1      2     630
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     312
                                              9 COMMON     1     1      0
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
                            _INT_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                     _Ticker_Handler *
 ---------------------------------------------------------------------------------
 (7) _Ticker_Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0     312
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0     312
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          1     1      0     312
                                              8 COMMON     1     1      0
                  _ADC_GetConversion
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (8) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keyboard_Tasks
     _Keyboard_Initialize
       _TimeDelay_Set
     _Keyboard_Process_A
       _NonBlockingDelay
       _TimeDelay_Reset
     _Keyboard_Process_B
       _NonBlockingDelay
       _TimeDelay_Reset
   _MB1040_Tasks
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART2_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _MB1040_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TimeDelay_Tasks
     _TimeDelay_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
         _ADC_GetConversion
         ___lwdiv
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _Ticker_Handler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A3      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 14:42:11 2018

                             __CFG_CP$OFF 0000                                       l400 023B  
                                     l510 01D2                                       l509 01C4  
                                     l463 025A                                       l391 021D  
                                     l493 00E5                                       l398 0230  
                                     u615 007E                                       u625 008E  
                                     u635 00A6                                       u645 00B6  
                                     u655 00C6                                       u665 00DE  
                                     u915 01B7                   __size_of_PMD_Initialize 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                   ?_TimeDelay_Initialize 0070                              _MB1040_Tasks 021C  
                           __CFG_BBEN$OFF 0000                              __CFG_LVP$OFF 0000  
                            __CFG_ZCD$OFF 0000                                      l1500 0164  
                                    l1514 017C                                      l1506 016E  
                                    l1380 00A8                                      l1372 0070  
                                    l1508 0172                                      l1614 0232  
                                    l1622 01B1                                      l1384 00C8  
                                    l1632 023D                                      l1608 0220  
                                    l1386 00E0                                      l1490 01F3  
                                    l1642 024B                                      l1626 01BD  
                                    l1618 01AB                                      l1636 0245  
                                    l1628 01C6                                      l1486 01E6  
                                    l1638 0248                                      l1498 0160  
                                    l1678 02FA                                      _LATA 0018  
                                    _LATB 0019                           __end_of_INT_ISR 0383  
                                    _LATC 001A                                      _PMD0 0796  
                                    _PMD1 0797                                      _PMD2 0798  
                                    _PMD3 0799                                      _PMD4 079A  
                                    _PMD5 079B                                      _WPUA 1F39  
                                    _WPUB 1F44                                      _WPUC 1F4F  
                   ??_EUSART2_Receive_ISR 0070                             __CFG_FCMEN$ON 0000  
                                    _main 02F3                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
     __end_of_INT_DefaultInterruptHandler 01AA               _INT_DefaultInterruptHandler 0180  
                                    start 002B                            _TimeDelay_Data 002D  
                   __end_of_TimeDelay_Set 0313              __end_of_EUSART2_Transmit_ISR 0278  
         __end_of_INT_SetInterruptHandler 0373                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                         _MB1040_Initialize 0383  
                 __end_of_TMR0_Initialize 02F3                   __size_of_Keyboard_Tasks 001F  
          ??_TMR0_DefaultInterruptHandler 0070                        ?_MB1040_Initialize 0070  
          __size_of_OSCILLATOR_Initialize 000B             __end_of_OSCILLATOR_Initialize 032B  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                         __end_of___lwdiv 0156                                     i1l202 0275  
                                   i1l130 0011                                     i1l132 0018  
                                   i1l140 0026                                     i1l135 0021  
                                   i1l279 02C0                                     _OSCEN 0891  
                                   _TMR0H 059D                                     _TMR0L 059C  
                                   u53_25 012D                                     u55_25 0137  
                                   u56_25 0141                                     _TRISA 0012  
                                   _TRISB 0013                                     u57_25 0149  
                                   _TRISC 0014         __size_of_TMR0_SetInterruptHandler 0006  
                     ??_MB1040_Initialize 0059                 ?_TMR0_SetInterruptHandler 0059  
                __end_of_NonBlockingDelay 00EC                            _Ticker_Handler 0373  
                        __end_of_TMR0_ISR 037E                             __CFG_WRTB$OFF 0000  
                           __CFG_WRTC$OFF 0000                                     _ticks 0029  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TimeDelay_Reset 0359                           _TimeDelay_Tasks 01AA  
               __end_of_MB1040_Initialize 0387                           __initialization 002D  
                           _Keyboard_Data 002C                              __end_of_main 0304  
                          __CFG_SAFEN$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0060                __end_of_Keyboard_Process_A 01FB  
              __end_of_Keyboard_Process_B 0180                    __end_of_Ticker_Handler 0379  
                  ??_TimeDelay_Initialize 005B                                 ??_INT_ISR 0079  
              __end_of_EUSART2_Initialize 0293                                    _ADCON0 009D  
                                  _ADCON1 009E                  _eusart2TxBufferRemaining 0064  
                   TimeDelay_Reset@vTimer 0059                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _ADCval 0020  
                                  _ANSELA 1F38                                    _ANSELB 1F43  
                                  _ANSELC 1F4E                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 059E                                    _T0CON1 059F  
                                  _RC2REG 0A19                                    _RC0PPS 1F20  
                                  _RC2STA 0A1D                                    u101_27 02BB  
                                  i1l1334 0148                                    i1l1326 012A  
                                  i1l1328 0136                                    _ODCONA 1F3A  
                                  i1l1338 0151                                    _ODCONB 1F45  
                                  _ODCONC 1F50                                    i1l1544 0298  
                          __CFG_WDTCCS$SC 0000                                    _OSCFRQ 0893  
                                  _TX2REG 0A1A                                    _TX2STA 0A1E  
                          __CFG_PWRTE$OFF 0000                            __CFG_STVREN$ON 0000  
                               ??___lwdiv 0074                          ?_TMR0_Initialize 0070  
                           ?_INT_CallBack 0070                            _PMD_Initialize 0349  
                         ?_Ticker_Handler 0070                      _EUSART2_Transmit_ISR 025B  
                ADC_GetConversion@channel 0073                     __end_of_TMR0_CallBack 0336  
        __size_of_INT_SetInterruptHandler 0006  TMR0_SetInterruptHandler@InterruptHandler 0059  
 INT_SetInterruptHandler@InterruptHandler 0059                   __end_of_TimeDelay_Reset 0361  
                 __end_of_TimeDelay_Tasks 01D3               __end_of_Keyboard_Initialize 0122  
                         _eusart2RxBuffer 00A0                         _SYSTEM_Initialize 02C7  
                         _eusart2TxBuffer 00E0                   __end_of__initialization 0040  
                      ?_SYSTEM_Initialize 0070                __size_of_MB1040_Initialize 0004  
                          __pcstackCOMMON 0070                       TimeDelay_Set@vTimer 005B  
                     ??_SYSTEM_Initialize 005B                                 ?_TMR0_ISR 0070  
                          _Keyboard_Tasks 023C                            ??_INT_CallBack 0079  
                  __end_of_PMD_Initialize 0351               __size_of_EXT_INT_Initialize 000D  
                   ?_EUSART2_Transmit_ISR 0070                 __end_of_SYSTEM_Initialize 02DF  
                           _eusart2RxHead 007B                             _eusart2TxHead 007D  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                           _eusart2RxTail 007A                             _eusart2TxTail 007C  
                              __pmaintext 02F3                    __end_of_Keyboard_Tasks 025B  
        __end_of_TMR0_SetInterruptHandler 036D                                ??_TMR0_ISR 0070  
                         __CFG_PPS1WAY$ON 0000                                __pintentry 0004  
                         ?_PMD_Initialize 0070                   __size_of_ADC_Initialize 0008  
                                 _SP2BRGH 0A1C                                   _SP2BRGL 0A1B  
                                 _INT_ISR 037E                                   _OSCCON1 088D  
                                 _OSCCON3 088F               __end_of_EUSART2_Receive_ISR 02AE  
                       ?_NonBlockingDelay 0070                                   _OSCSTAT 0890  
                                 _OSCTUNE 0892                        ??_NonBlockingDelay 0059  
                        ?_TimeDelay_Reset 0070                          ?_TimeDelay_Tasks 0070  
                         ?_Keyboard_Tasks 0070                                   ___lwdiv 0122  
                                 __ptext1 01AA                                   __ptext2 0341  
                                 __ptext3 02C7                                   __ptext4 02DF  
                                 __ptext5 0367                                   __ptext6 0349  
                                 __ptext7 01FB                                   __ptext8 0320  
                                 __ptext9 0383                           __CFG_WRTAPP$OFF 0000  
                   _OSCILLATOR_Initialize 0320                    ??_EUSART2_Transmit_ISR 0070  
                ??_PIN_MANAGER_Initialize 0059                           __CFG_WRTSAF$OFF 0000  
                 _INT_SetInterruptHandler 036D                    __size_of_TimeDelay_Set 000F  
              __size_of_SYSTEM_Initialize 0018                                   clrloop0 0362  
                    end_of_initialization 0040                        _Keyboard_Process_A 01D3  
                      _Keyboard_Process_B 0156                      __end_of_INT_CallBack 0341  
                      _EUSART2_Initialize 0278                       ?_Keyboard_Process_A 0070  
                     ?_Keyboard_Process_B 0070                          ??_Ticker_Handler 0070  
                   __CFG_WDTCPS$WDTCPS_31 0000                       ?_EUSART2_Initialize 0070  
                _TMR0_SetInterruptHandler 0367                                 _PORTBbits 000D  
                               _PORTCbits 000E                      ??_Keyboard_Process_A 005E  
                    ??_Keyboard_Process_B 005E             __size_of_TimeDelay_Initialize 0008  
                        __CFG_FEXTOSC$OFF 0000                      ??_EUSART2_Initialize 0059  
                             _MB1040_Data 002E                             _TimeDelay_Set 0304  
                       __size_of_TMR0_ISR 0005                            _ADC_Initialize 0351  
                  ?_OSCILLATOR_Initialize 0070                 ??_INT_SetInterruptHandler 005B  
                     start_initialization 002D                  __size_of_TMR0_Initialize 0014  
                           ?_MB1040_Tasks 0070           __size_of_PIN_MANAGER_Initialize 0021  
            ?_INT_DefaultInterruptHandler 0070                            ?_TimeDelay_Set 0059  
            __size_of_Keyboard_Initialize 0036                          __CFG_LPBOREN$OFF 0000  
                        ??_PMD_Initialize 0059                    __size_of_TMR0_CallBack 000B  
                  __end_of_ADC_Initialize 0359                __end_of_EXT_INT_Initialize 0320  
                          _eusart2RxCount 002B                               __pbssCOMMON 007A  
                          ??_MB1040_Tasks 0059                                 ___latbits 0001  
                                ?_INT_ISR 0070                             __pcstackBANK0 0059  
                      TimeDelay_Set@delay 0059                     __size_of_INT_CallBack 000B  
                        ??_Keyboard_Tasks 005F                     _TMR0_InterruptHandler 0060  
                               __pnvBANK0 0060                                 _delay_ESC 002F  
               __size_of_NonBlockingDelay 00A8                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 01FB             ??_INT_DefaultInterruptHandler 0078  
                                ?___lwdiv 0070                           ?_ADC_Initialize 0070  
            ??_INTERRUPT_InterruptManager 0079                              _INT_CallBack 0336  
                                _BAUD2CON 0A1F                          ___lwdiv@quotient 0075  
                           _TMR0_CallBack 032B         TimeDelay_Tasks@prior_ticks_secure 0027  
                       ??_TMR0_Initialize 005B              __size_of_EUSART2_Receive_ISR 001B  
                         ??_TimeDelay_Set 005B                                  _LATAbits 0018  
                                _LATBbits 0019                                  _LATCbits 001A  
                               clear_ram0 0361                                  _PIE0bits 0716  
                                _PIE3bits 0719                  __size_of_TimeDelay_Reset 0008  
     __size_of_INTERRUPT_InterruptManager 0027                  __size_of_TimeDelay_Tasks 0029  
              ??_TMR0_SetInterruptHandler 005B                                  _PIR0bits 070C  
                                _PIR3bits 070F                         __CFG_BBSIZE$BB512 0000  
                                _TMR0_ISR 0379                                _ADCON0bits 009D  
    __size_of_INT_DefaultInterruptHandler 002A                              _RX2DTPPSbits 1ECD  
           __size_of_EUSART2_Transmit_ISR 001D                          __size_of_INT_ISR 0005  
                          ?_TMR0_CallBack 0070              __end_of_TimeDelay_Initialize 0349  
                    __end_of_MB1040_Tasks 023C                         _ADC_GetConversion 02AE  
                 ??_OSCILLATOR_Initialize 0059                        ?_ADC_GetConversion 0070  
                        __size_of___lwdiv 0034                    NonBlockingDelay@vTimer 005D  
                     ??_ADC_GetConversion 0072                       _Keyboard_Initialize 00EC  
                              _T0CON0bits 059E                                  _delay_F1 0052  
                                _delay_F2 004B                                  _delay_BA 0044  
                                _delay_BB 003D                                  _delay_BC 0036  
             __size_of_Keyboard_Process_A 0028               __size_of_Keyboard_Process_B 002A  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 0313                                  __ptext11 036D  
                                __ptext20 00EC                                  __ptext12 0278  
                                __ptext21 0304                                  __ptext13 0351  
                                __ptext30 0122                                  __ptext14 021C  
                                __ptext31 02AE                                  __ptext23 0379  
                                __ptext15 023C                                  __ptext32 025B  
                                __ptext24 032B                                  __ptext16 0156  
                                __ptext33 0293                                  __ptext25 0387  
                                __ptext17 01D3                                  __ptext26 0373  
                                __ptext18 0359                                  __ptext27 037E  
                                __ptext19 0044                                  __ptext28 0336  
                                __ptext29 0180               __size_of_EUSART2_Initialize 001B  
                           __size_of_main 0011      __end_of_TMR0_DefaultInterruptHandler 0388  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0387  
               __end_of_ADC_GetConversion 02C7                      __CFG_WDTCWS$WDTCWS_7 0000  
                    ?_Keyboard_Initialize 0070                          _NonBlockingDelay 0044  
                              _RC2STAbits 0A1D                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 002B                _INTERRUPT_InterruptManager 0004  
                       ??_TimeDelay_Reset 0059                         ??_TimeDelay_Tasks 005B  
                              _INTCONbits 000B                           ??_TMR0_CallBack 0070  
                    _INT_InterruptHandler 0062                   __size_of_Ticker_Handler 0006  
                      _EXT_INT_Initialize 0313                                _INTPPSbits 1E90  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                   ??_Keyboard_Initialize 005C                          ??_ADC_Initialize 0059  
           ?_TMR0_DefaultInterruptHandler 0070                  ?_INT_SetInterruptHandler 0059  
                     _EUSART2_Receive_ISR 0293                      ??_EXT_INT_Initialize 005B  
                         _TMR0_Initialize 02DF                      _TimeDelay_Initialize 0341  
          __end_of_PIN_MANAGER_Initialize 021C                      ?_EUSART2_Receive_ISR 0070  
                   __size_of_MB1040_Tasks 0020                __size_of_ADC_GetConversion 0019  
